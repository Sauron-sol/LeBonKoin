{"id":"5700c87cce8e66c35a5bb1073b02bef2","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@account-abstraction/contracts/core/Helpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable no-inline-assembly */\n\n/**\n * returned data from validateUserOp.\n * validateUserOp returns a uint256, with is created by `_packedValidationData` and parsed by `_parseValidationData`\n * @param aggregator - address(0) - the account validated the signature by itself.\n *              address(1) - the account failed to validate the signature.\n *              otherwise - this is an address of a signature aggregator that must be used to validate the signature.\n * @param validAfter - this UserOp is valid only after this timestamp.\n * @param validaUntil - this UserOp is valid only up to this timestamp.\n */\n    struct ValidationData {\n        address aggregator;\n        uint48 validAfter;\n        uint48 validUntil;\n    }\n\n//extract sigFailed, validAfter, validUntil.\n// also convert zero validUntil to type(uint48).max\n    function _parseValidationData(uint validationData) pure returns (ValidationData memory data) {\n        address aggregator = address(uint160(validationData));\n        uint48 validUntil = uint48(validationData >> 160);\n        if (validUntil == 0) {\n            validUntil = type(uint48).max;\n        }\n        uint48 validAfter = uint48(validationData >> (48 + 160));\n        return ValidationData(aggregator, validAfter, validUntil);\n    }\n\n// intersect account and paymaster ranges.\n    function _intersectTimeRange(uint256 validationData, uint256 paymasterValidationData) pure returns (ValidationData memory) {\n        ValidationData memory accountValidationData = _parseValidationData(validationData);\n        ValidationData memory pmValidationData = _parseValidationData(paymasterValidationData);\n        address aggregator = accountValidationData.aggregator;\n        if (aggregator == address(0)) {\n            aggregator = pmValidationData.aggregator;\n        }\n        uint48 validAfter = accountValidationData.validAfter;\n        uint48 validUntil = accountValidationData.validUntil;\n        uint48 pmValidAfter = pmValidationData.validAfter;\n        uint48 pmValidUntil = pmValidationData.validUntil;\n\n        if (validAfter < pmValidAfter) validAfter = pmValidAfter;\n        if (validUntil > pmValidUntil) validUntil = pmValidUntil;\n        return ValidationData(aggregator, validAfter, validUntil);\n    }\n\n/**\n * helper to pack the return value for validateUserOp\n * @param data - the ValidationData to pack\n */\n    function _packValidationData(ValidationData memory data) pure returns (uint256) {\n        return uint160(data.aggregator) | (uint256(data.validUntil) << 160) | (uint256(data.validAfter) << (160 + 48));\n    }\n\n/**\n * helper to pack the return value for validateUserOp, when not using an aggregator\n * @param sigFailed - true for signature failure, false for success\n * @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\n * @param validAfter first timestamp this UserOperation is valid\n */\n    function _packValidationData(bool sigFailed, uint48 validUntil, uint48 validAfter) pure returns (uint256) {\n        return (sigFailed ? 1 : 0) | (uint256(validUntil) << 160) | (uint256(validAfter) << (160 + 48));\n    }\n\n/**\n * keccak function over calldata.\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n */\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\n        assembly {\n            let mem := mload(0x40)\n            let len := data.length\n            calldatacopy(mem, data.offset, len)\n            ret := keccak256(mem, len)\n        }\n    }\n\n"},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"./UserOperation.sol\";\n\n/**\n * Aggregated Signatures validator.\n */\ninterface IAggregator {\n\n    /**\n     * validate aggregated signature.\n     * revert if the aggregated signature does not match the given list of operations.\n     */\n    function validateSignatures(UserOperation[] calldata userOps, bytes calldata signature) external view;\n\n    /**\n     * validate signature of a single userOp\n     * This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n     * @param userOp the userOperation received from the user.\n     * @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\n     *    (usually empty, unless account and aggregator support some kind of \"multisig\"\n     */\n    function validateUserOpSignature(UserOperation calldata userOp)\n    external view returns (bytes memory sigForUserOp);\n\n    /**\n     * aggregate multiple signatures into a single value.\n     * This method is called off-chain to calculate the signature to pass with handleOps()\n     * bundler MAY use optimized custom code perform this aggregation\n     * @param userOps array of UserOperations to collect the signatures from.\n     * @return aggregatedSignature the aggregated signature\n     */\n    function aggregateSignatures(UserOperation[] calldata userOps) external view returns (bytes memory aggregatedSignature);\n}\n"},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"content":"/**\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\n ** Only one instance required on each chain.\n **/\n// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"./UserOperation.sol\";\nimport \"./IStakeManager.sol\";\nimport \"./IAggregator.sol\";\nimport \"./INonceManager.sol\";\n\ninterface IEntryPoint is IStakeManager, INonceManager {\n\n    /***\n     * An event emitted after each successful request\n     * @param userOpHash - unique identifier for the request (hash its entire content, except signature).\n     * @param sender - the account that generates this request.\n     * @param paymaster - if non-null, the paymaster that pays for this request.\n     * @param nonce - the nonce value from the request.\n     * @param success - true if the sender transaction succeeded, false if reverted.\n     * @param actualGasCost - actual amount paid (by account or paymaster) for this UserOperation.\n     * @param actualGasUsed - total gas used by this UserOperation (including preVerification, creation, validation and execution).\n     */\n    event UserOperationEvent(bytes32 indexed userOpHash, address indexed sender, address indexed paymaster, uint256 nonce, bool success, uint256 actualGasCost, uint256 actualGasUsed);\n\n    /**\n     * account \"sender\" was deployed.\n     * @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n     * @param sender the account that is deployed\n     * @param factory the factory used to deploy this account (in the initCode)\n     * @param paymaster the paymaster used by this UserOp\n     */\n    event AccountDeployed(bytes32 indexed userOpHash, address indexed sender, address factory, address paymaster);\n\n    /**\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length\n     * @param userOpHash the request unique identifier.\n     * @param sender the sender of this request\n     * @param nonce the nonce used in the request\n     * @param revertReason - the return bytes from the (reverted) call to \"callData\".\n     */\n    event UserOperationRevertReason(bytes32 indexed userOpHash, address indexed sender, uint256 nonce, bytes revertReason);\n\n    /**\n     * an event emitted by handleOps(), before starting the execution loop.\n     * any event emitted before this event, is part of the validation.\n     */\n    event BeforeExecution();\n\n    /**\n     * signature aggregator used by the following UserOperationEvents within this bundle.\n     */\n    event SignatureAggregatorChanged(address indexed aggregator);\n\n    /**\n     * a custom revert error of handleOps, to identify the offending op.\n     *  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n     *  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n     *  @param reason - revert reason\n     *      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n     *      so a failure can be attributed to the correct entity.\n     *   Should be caught in off-chain handleOps simulation and not happen on-chain.\n     *   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n     */\n    error FailedOp(uint256 opIndex, string reason);\n\n    /**\n     * error case when a signature aggregator fails to verify the aggregated signature it had created.\n     */\n    error SignatureValidationFailed(address aggregator);\n\n    /**\n     * Successful result from simulateValidation.\n     * @param returnInfo gas and time-range returned values\n     * @param senderInfo stake information about the sender\n     * @param factoryInfo stake information about the factory (if any)\n     * @param paymasterInfo stake information about the paymaster (if any)\n     */\n    error ValidationResult(ReturnInfo returnInfo,\n        StakeInfo senderInfo, StakeInfo factoryInfo, StakeInfo paymasterInfo);\n\n    /**\n     * Successful result from simulateValidation, if the account returns a signature aggregator\n     * @param returnInfo gas and time-range returned values\n     * @param senderInfo stake information about the sender\n     * @param factoryInfo stake information about the factory (if any)\n     * @param paymasterInfo stake information about the paymaster (if any)\n     * @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n     *      bundler MUST use it to verify the signature, or reject the UserOperation\n     */\n    error ValidationResultWithAggregation(ReturnInfo returnInfo,\n        StakeInfo senderInfo, StakeInfo factoryInfo, StakeInfo paymasterInfo,\n        AggregatorStakeInfo aggregatorInfo);\n\n    /**\n     * return value of getSenderAddress\n     */\n    error SenderAddressResult(address sender);\n\n    /**\n     * return value of simulateHandleOp\n     */\n    error ExecutionResult(uint256 preOpGas, uint256 paid, uint48 validAfter, uint48 validUntil, bool targetSuccess, bytes targetResult);\n\n    //UserOps handled, per aggregator\n    struct UserOpsPerAggregator {\n        UserOperation[] userOps;\n\n        // aggregator address\n        IAggregator aggregator;\n        // aggregated signature\n        bytes signature;\n    }\n\n    /**\n     * Execute a batch of UserOperation.\n     * no signature aggregator is used.\n     * if any account requires an aggregator (that is, it returned an aggregator when\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\n     * @param ops the operations to execute\n     * @param beneficiary the address to receive the fees\n     */\n    function handleOps(UserOperation[] calldata ops, address payable beneficiary) external;\n\n    /**\n     * Execute a batch of UserOperation with Aggregators\n     * @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n     * @param beneficiary the address to receive the fees\n     */\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * generate a request Id - unique identifier for this request.\n     * the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n     */\n    function getUserOpHash(UserOperation calldata userOp) external view returns (bytes32);\n\n    /**\n     * Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n     * @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n     * @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n     * @param userOp the user operation to validate.\n     */\n    function simulateValidation(UserOperation calldata userOp) external;\n\n    /**\n     * gas and return values during simulation\n     * @param preOpGas the gas used for validation (including preValidationGas)\n     * @param prefund the required prefund for this operation\n     * @param sigFailed validateUserOp's (or paymaster's) signature check failed\n     * @param validAfter - first timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param validUntil - last timestamp this UserOp is valid (merging account and paymaster time-range)\n     * @param paymasterContext returned by validatePaymasterUserOp (to be passed into postOp)\n     */\n    struct ReturnInfo {\n        uint256 preOpGas;\n        uint256 prefund;\n        bool sigFailed;\n        uint48 validAfter;\n        uint48 validUntil;\n        bytes paymasterContext;\n    }\n\n    /**\n     * returned aggregated signature info.\n     * the aggregator returned by the account, and its current stake.\n     */\n    struct AggregatorStakeInfo {\n        address aggregator;\n        StakeInfo stakeInfo;\n    }\n\n    /**\n     * Get counterfactual sender address.\n     *  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n     * this method always revert, and returns the address in SenderAddressResult error\n     * @param initCode the constructor code to be passed into the UserOperation.\n     */\n    function getSenderAddress(bytes memory initCode) external;\n\n\n    /**\n     * simulate full execution of a UserOperation (including both validation and target execution)\n     * this method will always revert with \"ExecutionResult\".\n     * it performs full validation of the UserOperation, but ignores signature error.\n     * an optional target address is called after the userop succeeds, and its value is returned\n     * (before the entire call is reverted)\n     * Note that in order to collect the the success/failure of the target call, it must be executed\n     * with trace enabled to track the emitted events.\n     * @param op the UserOperation to simulate\n     * @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n     *        are set to the return from that call.\n     * @param targetCallData callData to pass to target address\n     */\n    function simulateHandleOp(UserOperation calldata op, address target, bytes calldata targetCallData) external;\n}\n\n"},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\ninterface INonceManager {\n\n    /**\n     * Return the next nonce for this sender.\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n     * But UserOp with different keys can come with arbitrary order.\n     *\n     * @param sender the account address\n     * @param key the high 192 bit of the nonce\n     * @return nonce a full nonce to pass for next UserOp with this sender.\n     */\n    function getNonce(address sender, uint192 key)\n    external view returns (uint256 nonce);\n\n    /**\n     * Manually increment the nonce of the sender.\n     * This method is exposed just for completeness..\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\n     * as the EntryPoint will update the nonce regardless.\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n     * UserOperations will not pay extra for the first transaction with a given key.\n     */\n    function incrementNonce(uint192 key) external;\n}\n"},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\nimport \"./UserOperation.sol\";\n\n/**\n * the interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n * a paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\n */\ninterface IPaymaster {\n\n    enum PostOpMode {\n        opSucceeded, // user op succeeded\n        opReverted, // user op reverted. still has to pay for gas.\n        postOpReverted //user op succeeded, but caused postOp to revert. Now it's a 2nd call, after user's op was deliberately reverted.\n    }\n\n    /**\n     * payment validation: check if paymaster agrees to pay.\n     * Must verify sender is the entryPoint.\n     * Revert to reject this request.\n     * Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted)\n     * The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n     * @param userOp the user operation\n     * @param userOpHash hash of the user's request data.\n     * @param maxCost the maximum cost of this transaction (based on maximum gas and gas price from userOp)\n     * @return context value to send to a postOp\n     *      zero length to signify postOp is not required.\n     * @return validationData signature and time-range of this operation, encoded the same as the return value of validateUserOperation\n     *      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *         otherwise, an address of an \"authorizer\" contract.\n     *      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *      <6-byte> validAfter - first timestamp this operation is valid\n     *      Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validatePaymasterUserOp(UserOperation calldata userOp, bytes32 userOpHash, uint256 maxCost)\n    external returns (bytes memory context, uint256 validationData);\n\n    /**\n     * post-operation handler.\n     * Must verify sender is the entryPoint\n     * @param mode enum with the following options:\n     *      opSucceeded - user operation succeeded.\n     *      opReverted  - user op reverted. still has to pay for gas.\n     *      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n     *                       Now this is the 2nd call, after user's op was deliberately reverted.\n     * @param context - the context value returned by validatePaymasterUserOp\n     * @param actualGasCost - actual gas used so far (without this postOp call).\n     */\n    function postOp(PostOpMode mode, bytes calldata context, uint256 actualGasCost) external;\n}\n"},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.12;\n\n/**\n * manage deposits and stakes.\n * deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n * stake is value locked for at least \"unstakeDelay\" by the staked entity.\n */\ninterface IStakeManager {\n\n    event Deposited(\n        address indexed account,\n        uint256 totalDeposit\n    );\n\n    event Withdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /// Emitted when stake or unstake delay are modified\n    event StakeLocked(\n        address indexed account,\n        uint256 totalStaked,\n        uint256 unstakeDelaySec\n    );\n\n    /// Emitted once a stake is scheduled for withdrawal\n    event StakeUnlocked(\n        address indexed account,\n        uint256 withdrawTime\n    );\n\n    event StakeWithdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /**\n     * @param deposit the entity's deposit\n     * @param staked true if this entity is staked.\n     * @param stake actual amount of ether staked for this entity.\n     * @param unstakeDelaySec minimum delay to withdraw the stake.\n     * @param withdrawTime - first block timestamp where 'withdrawStake' will be callable, or zero if already locked\n     * @dev sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n     *    and the rest fit into a 2nd cell.\n     *    112 bit allows for 10^15 eth\n     *    48 bit for full timestamp\n     *    32 bit allows 150 years for unstake delay\n     */\n    struct DepositInfo {\n        uint112 deposit;\n        bool staked;\n        uint112 stake;\n        uint32 unstakeDelaySec;\n        uint48 withdrawTime;\n    }\n\n    //API struct used by getStakeInfo and simulateValidation\n    struct StakeInfo {\n        uint256 stake;\n        uint256 unstakeDelaySec;\n    }\n\n    /// @return info - full deposit information of given account\n    function getDepositInfo(address account) external view returns (DepositInfo memory info);\n\n    /// @return the deposit (for gas payment) of the account\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * add to the deposit of the given account\n     */\n    function depositTo(address account) external payable;\n\n    /**\n     * add to the account's stake - amount and delay\n     * any pending unstake is first cancelled.\n     * @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn.\n     */\n    function addStake(uint32 _unstakeDelaySec) external payable;\n\n    /**\n     * attempt to unlock the stake.\n     * the value can be withdrawn (using withdrawStake) after the unstake delay.\n     */\n    function unlockStake() external;\n\n    /**\n     * withdraw from the (unlocked) stake.\n     * must first call unlockStake and wait for the unstakeDelay to pass\n     * @param withdrawAddress the address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external;\n\n    /**\n     * withdraw from the deposit.\n     * @param withdrawAddress the address to send withdrawn value.\n     * @param withdrawAmount the amount to withdraw.\n     */\n    function withdrawTo(address payable withdrawAddress, uint256 withdrawAmount) external;\n}\n"},"@account-abstraction/contracts/interfaces/UserOperation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.12;\n\n/* solhint-disable no-inline-assembly */\n\nimport {calldataKeccak} from \"../core/Helpers.sol\";\n\n/**\n * User Operation struct\n * @param sender the sender account of this request.\n     * @param nonce unique value the sender uses to verify it is not a replay.\n     * @param initCode if set, the account contract will be created by this constructor/\n     * @param callData the method call to execute on this account.\n     * @param callGasLimit the gas limit passed to the callData method call.\n     * @param verificationGasLimit gas used for validateUserOp and validatePaymasterUserOp.\n     * @param preVerificationGas gas not calculated by the handleOps method, but added to the gas paid. Covers batch overhead.\n     * @param maxFeePerGas same as EIP-1559 gas parameter.\n     * @param maxPriorityFeePerGas same as EIP-1559 gas parameter.\n     * @param paymasterAndData if set, this field holds the paymaster address and paymaster-specific data. the paymaster will pay for the transaction instead of the sender.\n     * @param signature sender-verified signature over the entire request, the EntryPoint address and the chain ID.\n     */\n    struct UserOperation {\n\n        address sender;\n        uint256 nonce;\n        bytes initCode;\n        bytes callData;\n        uint256 callGasLimit;\n        uint256 verificationGasLimit;\n        uint256 preVerificationGas;\n        uint256 maxFeePerGas;\n        uint256 maxPriorityFeePerGas;\n        bytes paymasterAndData;\n        bytes signature;\n    }\n\n/**\n * Utility functions helpful when working with UserOperation structs.\n */\nlibrary UserOperationLib {\n\n    function getSender(UserOperation calldata userOp) internal pure returns (address) {\n        address data;\n        //read sender from userOp, which is first userOp member (saves 800 gas...)\n        assembly {data := calldataload(userOp)}\n        return address(uint160(data));\n    }\n\n    //relayer/block builder might submit the TX with higher priorityFee, but the user should not\n    // pay above what he signed for.\n    function gasPrice(UserOperation calldata userOp) internal view returns (uint256) {\n    unchecked {\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        if (maxFeePerGas == maxPriorityFeePerGas) {\n            //legacy mode (for networks that don't support basefee opcode)\n            return maxFeePerGas;\n        }\n        return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n    }\n    }\n\n    function pack(UserOperation calldata userOp) internal pure returns (bytes memory ret) {\n        address sender = getSender(userOp);\n        uint256 nonce = userOp.nonce;\n        bytes32 hashInitCode = calldataKeccak(userOp.initCode);\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\n        uint256 callGasLimit = userOp.callGasLimit;\n        uint256 verificationGasLimit = userOp.verificationGasLimit;\n        uint256 preVerificationGas = userOp.preVerificationGas;\n        uint256 maxFeePerGas = userOp.maxFeePerGas;\n        uint256 maxPriorityFeePerGas = userOp.maxPriorityFeePerGas;\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\n\n        return abi.encode(\n            sender, nonce,\n            hashInitCode, hashCallData,\n            callGasLimit, verificationGasLimit, preVerificationGas,\n            maxFeePerGas, maxPriorityFeePerGas,\n            hashPaymasterAndData\n        );\n    }\n\n    function hash(UserOperation calldata userOp) internal pure returns (bytes32) {\n        return keccak256(pack(userOp));\n    }\n\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/CirclePaymaster.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\nimport \"@account-abstraction/contracts/interfaces/IPaymaster.sol\";\nimport \"@account-abstraction/contracts/interfaces/IEntryPoint.sol\";\nimport \"@account-abstraction/contracts/interfaces/UserOperation.sol\";\n\n/**\n * @title CirclePaymaster\n * @dev Paymaster ERC-4337 qui permet aux utilisateurs de payer les frais de gas en USDC\n * Compatible avec le challenge Circle Paymaster ($2,000)\n */\ncontract CirclePaymaster is IPaymaster, Ownable {\n    using SafeERC20 for IERC20;\n    using ECDSA for bytes32;\n    using MessageHashUtils for bytes32;\n\n    // Constantes\n    uint256 public constant VALID_TIMESTAMP_OFFSET = 20;\n    uint256 public constant SIGNATURE_OFFSET = 84;\n    \n    // Variables d'état\n    IEntryPoint public immutable entryPoint;\n    IERC20 public immutable usdc;\n    \n    // Taux de change USDC/ETH (en wei par USDC, 6 décimales)\n    uint256 public usdcToEthRate = 2500 * 1e12; // 1 USDC = 0.0025 ETH par défaut\n    \n    // Mapping des nonces utilisés pour éviter les replay attacks\n    mapping(address => uint256) public nonces;\n    \n    // Events\n    event UserOperationSponsored(\n        address indexed user,\n        uint256 usdcAmount,\n        uint256 ethAmount,\n        bytes32 userOpHash\n    );\n    \n    event UsdcToEthRateUpdated(uint256 oldRate, uint256 newRate);\n    \n    constructor(\n        IEntryPoint _entryPoint,\n        IERC20 _usdc,\n        address _owner\n    ) Ownable(_owner) {\n        entryPoint = _entryPoint;\n        usdc = _usdc;\n    }\n    \n    /**\n     * @dev Valide et sponsorise une UserOperation\n     * @param userOp La UserOperation à valider\n     * @param userOpHash Le hash de la UserOperation\n     * @param maxCost Le coût maximum en ETH\n     * @return context Les données de contexte pour postOp\n     * @return validationData Les données de validation\n     */\n    function validatePaymasterUserOp(\n        UserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 maxCost\n    ) external override returns (bytes memory context, uint256 validationData) {\n        require(msg.sender == address(entryPoint), \"Seul EntryPoint autorise\");\n        \n        // Décoder les données du paymaster\n        (\n            address user,\n            uint256 usdcAmount,\n            uint256 validUntil,\n            uint256 validAfter,\n            bytes memory signature\n        ) = abi.decode(\n            userOp.paymasterAndData[20:],\n            (address, uint256, uint256, uint256, bytes)\n        );\n        \n        // Vérifier la validité temporelle\n        require(block.timestamp >= validAfter, \"Paymaster: trop tot\");\n        require(block.timestamp <= validUntil, \"Paymaster: expire\");\n        \n        // Vérifier que l'utilisateur a suffisamment d'USDC\n        uint256 userUsdcBalance = usdc.balanceOf(user);\n        require(userUsdcBalance >= usdcAmount, \"Solde USDC insuffisant\");\n        \n        // Vérifier l'allowance\n        uint256 allowance = usdc.allowance(user, address(this));\n        require(allowance >= usdcAmount, \"Allowance USDC insuffisante\");\n        \n        // Calculer le coût en USDC\n        uint256 requiredUsdcAmount = (maxCost * 1e6) / usdcToEthRate;\n        require(usdcAmount >= requiredUsdcAmount, \"Montant USDC insuffisant\");\n        \n        // Vérifier la signature\n        bytes32 hash = keccak256(abi.encodePacked(\n            userOpHash,\n            user,\n            usdcAmount,\n            validUntil,\n            validAfter,\n            nonces[user]++\n        )).toEthSignedMessageHash();\n        \n        address recovered = hash.recover(signature);\n        require(recovered == user, \"Signature invalide\");\n        \n        // Prélever l'USDC\n        usdc.safeTransferFrom(user, address(this), usdcAmount);\n        \n        // Contexte pour postOp\n        context = abi.encode(user, usdcAmount, maxCost);\n        \n        // Validation réussie\n        validationData = _packValidationData(false, validUntil, validAfter);\n        \n        emit UserOperationSponsored(user, usdcAmount, maxCost, userOpHash);\n    }\n    \n    /**\n     * @dev Appelé après l'exécution de la UserOperation\n     * @param mode Le mode d'exécution\n     * @param context Le contexte de validatePaymasterUserOp\n     * @param actualGasCost Le coût réel en gas\n     */\n    function postOp(\n        PostOpMode mode,\n        bytes calldata context,\n        uint256 actualGasCost\n    ) external override {\n        require(msg.sender == address(entryPoint), \"Seul EntryPoint autorise\");\n        \n        (address user, uint256 usdcAmount, uint256 maxCost) = abi.decode(\n            context,\n            (address, uint256, uint256)\n        );\n        \n        // Si l'opération a échoué, rembourser l'USDC\n        if (mode == PostOpMode.postOpReverted) {\n            usdc.safeTransfer(user, usdcAmount);\n            return;\n        }\n        \n        // Calculer le coût réel en USDC\n        uint256 actualUsdcCost = (actualGasCost * 1e6) / usdcToEthRate;\n        \n        // Rembourser l'excédent d'USDC\n        if (usdcAmount > actualUsdcCost) {\n            uint256 refund = usdcAmount - actualUsdcCost;\n            usdc.safeTransfer(user, refund);\n        }\n    }\n    \n    /**\n     * @dev Met à jour le taux de change USDC/ETH\n     * @param newRate Le nouveau taux (en wei par USDC)\n     */\n    function updateUsdcToEthRate(uint256 newRate) external onlyOwner {\n        require(newRate > 0, \"Taux invalide\");\n        uint256 oldRate = usdcToEthRate;\n        usdcToEthRate = newRate;\n        emit UsdcToEthRateUpdated(oldRate, newRate);\n    }\n    \n    /**\n     * @dev Dépose de l'ETH pour sponsoriser les transactions\n     */\n    function deposit() external payable onlyOwner {\n        entryPoint.depositTo{value: msg.value}(address(this));\n    }\n    \n    /**\n     * @dev Retire l'ETH du dépôt EntryPoint\n     * @param amount Le montant à retirer\n     */\n    function withdrawDeposit(uint256 amount) external onlyOwner {\n        entryPoint.withdrawTo(payable(owner()), amount);\n    }\n    \n    /**\n     * @dev Retire l'USDC accumulé\n     * @param amount Le montant à retirer\n     */\n    function withdrawUsdc(uint256 amount) external onlyOwner {\n        usdc.safeTransfer(owner(), amount);\n    }\n    \n    /**\n     * @dev Obtient le dépôt actuel dans l'EntryPoint\n     * @return Le montant déposé\n     */\n    function getDeposit() external view returns (uint256) {\n        return entryPoint.balanceOf(address(this));\n    }\n    \n    /**\n     * @dev Obtient le nonce actuel d'un utilisateur\n     * @param user L'adresse utilisateur\n     * @return Le nonce\n     */\n    function getNonce(address user) external view returns (uint256) {\n        return nonces[user];\n    }\n    \n    /**\n     * @dev Calcule le coût en USDC pour un montant ETH donné\n     * @param ethAmount Le montant en ETH (wei)\n     * @return Le montant équivalent en USDC\n     */\n    function calculateUsdcCost(uint256 ethAmount) external view returns (uint256) {\n        return (ethAmount * 1e6) / usdcToEthRate;\n    }\n    \n    /**\n     * @dev Emballe les données de validation selon ERC-4337\n     */\n    function _packValidationData(\n        bool sigFailed,\n        uint256 validUntil,\n        uint256 validAfter\n    ) internal pure returns (uint256) {\n        return (sigFailed ? 1 : 0) | (validUntil << 160) | (validAfter << (160 + 64));\n    }\n} "}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/CirclePaymaster.sol:137:44:\n    |\n137 |         (address user, uint256 usdcAmount, uint256 maxCost) = abi.decode(\n    |                                            ^^^^^^^^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":4908,"file":"contracts/CirclePaymaster.sol","start":4893},"type":"Warning"}],"sources":{"@account-abstraction/contracts/core/Helpers.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/core/Helpers.sol","exportedSymbols":{"ValidationData":[9],"_intersectTimeRange":[153],"_packValidationData":[190,228],"_parseValidationData":[68],"calldataKeccak":[238]},"id":239,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:0"},{"canonicalName":"ValidationData","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"104:581:0","text":" returned data from validateUserOp.\n validateUserOp returns a uint256, with is created by `_packedValidationData` and parsed by `_parseValidationData`\n @param aggregator - address(0) - the account validated the signature by itself.\n              address(1) - the account failed to validate the signature.\n              otherwise - this is an address of a signature aggregator that must be used to validate the signature.\n @param validAfter - this UserOp is valid only after this timestamp.\n @param validaUntil - this UserOp is valid only up to this timestamp."},"id":9,"members":[{"constant":false,"id":4,"mutability":"mutable","name":"aggregator","nameLocation":"730:10:0","nodeType":"VariableDeclaration","scope":9,"src":"722:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"722:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6,"mutability":"mutable","name":"validAfter","nameLocation":"757:10:0","nodeType":"VariableDeclaration","scope":9,"src":"750:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5,"name":"uint48","nodeType":"ElementaryTypeName","src":"750:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":8,"mutability":"mutable","name":"validUntil","nameLocation":"784:10:0","nodeType":"VariableDeclaration","scope":9,"src":"777:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7,"name":"uint48","nodeType":"ElementaryTypeName","src":"777:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"697:14:0","nodeType":"StructDefinition","scope":239,"src":"690:111:0","visibility":"public"},{"body":{"id":67,"nodeType":"Block","src":"997:346:0","statements":[{"assignments":[18],"declarations":[{"constant":false,"id":18,"mutability":"mutable","name":"aggregator","nameLocation":"1015:10:0","nodeType":"VariableDeclaration","scope":67,"src":"1007:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"1007:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":26,"initialValue":{"arguments":[{"arguments":[{"id":23,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1044:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":22,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1036:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":21,"name":"uint160","nodeType":"ElementaryTypeName","src":"1036:7:0","typeDescriptions":{}}},"id":24,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1036:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":20,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1028:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:0","typeDescriptions":{}}},"id":25,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1028:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1007:53:0"},{"assignments":[28],"declarations":[{"constant":false,"id":28,"mutability":"mutable","name":"validUntil","nameLocation":"1077:10:0","nodeType":"VariableDeclaration","scope":67,"src":"1070:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":27,"name":"uint48","nodeType":"ElementaryTypeName","src":"1070:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":35,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":31,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1097:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":32,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1115:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1097:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":30,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1090:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":29,"name":"uint48","nodeType":"ElementaryTypeName","src":"1090:6:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1090:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1070:49:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":38,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":36,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1133:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1147:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1133:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":48,"nodeType":"IfStatement","src":"1129:75:0","trueBody":{"id":47,"nodeType":"Block","src":"1150:54:0","statements":[{"expression":{"id":45,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":39,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1164:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":42,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1182:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":41,"name":"uint48","nodeType":"ElementaryTypeName","src":"1182:6:0","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":40,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1177:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":43,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":44,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1190:3:0","memberName":"max","nodeType":"MemberAccess","src":"1177:16:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1164:29:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":46,"nodeType":"ExpressionStatement","src":"1164:29:0"}]}},{"assignments":[50],"declarations":[{"constant":false,"id":50,"mutability":"mutable","name":"validAfter","nameLocation":"1220:10:0","nodeType":"VariableDeclaration","scope":67,"src":"1213:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":49,"name":"uint48","nodeType":"ElementaryTypeName","src":"1213:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":60,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":53,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"1240:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":56,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":54,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1259:2:0","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":55,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1264:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1259:8:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":57,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1258:10:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1240:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":52,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1233:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":51,"name":"uint48","nodeType":"ElementaryTypeName","src":"1233:6:0","typeDescriptions":{}}},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1233:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1213:56:0"},{"expression":{"arguments":[{"id":62,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1301:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":63,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"1313:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":64,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1325:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":61,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"1286:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$9_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1286:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":16,"id":66,"nodeType":"Return","src":"1279:57:0"}]},"id":68,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"913:20:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"validationData","nameLocation":"939:14:0","nodeType":"VariableDeclaration","scope":68,"src":"934:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10,"name":"uint","nodeType":"ElementaryTypeName","src":"934:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"933:21:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15,"mutability":"mutable","name":"data","nameLocation":"991:4:0","nodeType":"VariableDeclaration","scope":68,"src":"969:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":14,"nodeType":"UserDefinedTypeName","pathNode":{"id":13,"name":"ValidationData","nameLocations":["969:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":9,"src":"969:14:0"},"referencedDeclaration":9,"src":"969:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"968:28:0"},"scope":239,"src":"904:439:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":152,"nodeType":"Block","src":"1515:804:0","statements":[{"assignments":[80],"declarations":[{"constant":false,"id":80,"mutability":"mutable","name":"accountValidationData","nameLocation":"1547:21:0","nodeType":"VariableDeclaration","scope":152,"src":"1525:43:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":79,"nodeType":"UserDefinedTypeName","pathNode":{"id":78,"name":"ValidationData","nameLocations":["1525:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":9,"src":"1525:14:0"},"referencedDeclaration":9,"src":"1525:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":84,"initialValue":{"arguments":[{"id":82,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"1592:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":81,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1571:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$9_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1571:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1525:82:0"},{"assignments":[87],"declarations":[{"constant":false,"id":87,"mutability":"mutable","name":"pmValidationData","nameLocation":"1639:16:0","nodeType":"VariableDeclaration","scope":152,"src":"1617:38:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":86,"nodeType":"UserDefinedTypeName","pathNode":{"id":85,"name":"ValidationData","nameLocations":["1617:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":9,"src":"1617:14:0"},"referencedDeclaration":9,"src":"1617:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"id":91,"initialValue":{"arguments":[{"id":89,"name":"paymasterValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"1679:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":88,"name":"_parseValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1658:20:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_ValidationData_$9_memory_ptr_$","typeString":"function (uint256) pure returns (struct ValidationData memory)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1658:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"nodeType":"VariableDeclarationStatement","src":"1617:86:0"},{"assignments":[93],"declarations":[{"constant":false,"id":93,"mutability":"mutable","name":"aggregator","nameLocation":"1721:10:0","nodeType":"VariableDeclaration","scope":152,"src":"1713:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"1713:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":96,"initialValue":{"expression":{"id":94,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1734:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":95,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1756:10:0","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":4,"src":"1734:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1713:53:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":97,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"1780:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1802:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":99,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1794:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"1794:7:0","typeDescriptions":{}}},"id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1794:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1780:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":109,"nodeType":"IfStatement","src":"1776:95:0","trueBody":{"id":108,"nodeType":"Block","src":"1806:65:0","statements":[{"expression":{"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":103,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"1820:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":104,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"1833:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1850:10:0","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":4,"src":"1833:27:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1820:40:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":107,"nodeType":"ExpressionStatement","src":"1820:40:0"}]}},{"assignments":[111],"declarations":[{"constant":false,"id":111,"mutability":"mutable","name":"validAfter","nameLocation":"1887:10:0","nodeType":"VariableDeclaration","scope":152,"src":"1880:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":110,"name":"uint48","nodeType":"ElementaryTypeName","src":"1880:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":114,"initialValue":{"expression":{"id":112,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1900:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1922:10:0","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":6,"src":"1900:32:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1880:52:0"},{"assignments":[116],"declarations":[{"constant":false,"id":116,"mutability":"mutable","name":"validUntil","nameLocation":"1949:10:0","nodeType":"VariableDeclaration","scope":152,"src":"1942:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":115,"name":"uint48","nodeType":"ElementaryTypeName","src":"1942:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":119,"initialValue":{"expression":{"id":117,"name":"accountValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"1962:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":118,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1984:10:0","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":8,"src":"1962:32:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1942:52:0"},{"assignments":[121],"declarations":[{"constant":false,"id":121,"mutability":"mutable","name":"pmValidAfter","nameLocation":"2011:12:0","nodeType":"VariableDeclaration","scope":152,"src":"2004:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":120,"name":"uint48","nodeType":"ElementaryTypeName","src":"2004:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":124,"initialValue":{"expression":{"id":122,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"2026:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":123,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2043:10:0","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":6,"src":"2026:27:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2004:49:0"},{"assignments":[126],"declarations":[{"constant":false,"id":126,"mutability":"mutable","name":"pmValidUntil","nameLocation":"2070:12:0","nodeType":"VariableDeclaration","scope":152,"src":"2063:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":125,"name":"uint48","nodeType":"ElementaryTypeName","src":"2063:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":129,"initialValue":{"expression":{"id":127,"name":"pmValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"2085:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":128,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2102:10:0","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":8,"src":"2085:27:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"2063:49:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":130,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2127:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":131,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2140:12:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2127:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":137,"nodeType":"IfStatement","src":"2123:56:0","trueBody":{"expression":{"id":135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":133,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2154:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":134,"name":"pmValidAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2167:12:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2154:25:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":136,"nodeType":"ExpressionStatement","src":"2154:25:0"}},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":138,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"2193:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":139,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"2206:12:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2193:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"IfStatement","src":"2189:56:0","trueBody":{"expression":{"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":141,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"2220:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":142,"name":"pmValidUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":126,"src":"2233:12:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"2220:25:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":144,"nodeType":"ExpressionStatement","src":"2220:25:0"}},{"expression":{"arguments":[{"id":147,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"2277:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":148,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2289:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":149,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"2301:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":146,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"2262:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$9_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2262:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":77,"id":151,"nodeType":"Return","src":"2255:57:0"}]},"id":153,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_intersectTimeRange","nameLocation":"1401:19:0","nodeType":"FunctionDefinition","parameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"validationData","nameLocation":"1429:14:0","nodeType":"VariableDeclaration","scope":153,"src":"1421:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69,"name":"uint256","nodeType":"ElementaryTypeName","src":"1421:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":72,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"1453:23:0","nodeType":"VariableDeclaration","scope":153,"src":"1445:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"1445:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1420:57:0"},"returnParameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":153,"src":"1492:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":75,"nodeType":"UserDefinedTypeName","pathNode":{"id":74,"name":"ValidationData","nameLocations":["1492:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":9,"src":"1492:14:0"},"referencedDeclaration":9,"src":"1492:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1491:23:0"},"scope":239,"src":"1392:927:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":189,"nodeType":"Block","src":"2511:127:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":164,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2536:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2541:10:0","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":4,"src":"2536:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2528:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":162,"name":"uint160","nodeType":"ElementaryTypeName","src":"2528:7:0","typeDescriptions":{}}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2528:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":169,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2564:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2569:10:0","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":8,"src":"2564:15:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2556:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2556:7:0","typeDescriptions":{}}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2556:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2584:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2556:31:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2555:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2528:60:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":178,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2600:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData memory"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2605:10:0","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":6,"src":"2600:15:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2592:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":176,"name":"uint256","nodeType":"ElementaryTypeName","src":"2592:7:0","typeDescriptions":{}}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2592:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2621:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:2:0","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2621:8:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":184,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2620:10:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2592:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2591:40:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2528:103:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":161,"id":188,"nodeType":"Return","src":"2521:110:0"}]},"documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"2321:105:0","text":" helper to pack the return value for validateUserOp\n @param data - the ValidationData to pack"},"id":190,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2440:19:0","nodeType":"FunctionDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"data","nameLocation":"2482:4:0","nodeType":"VariableDeclaration","scope":190,"src":"2460:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":156,"nodeType":"UserDefinedTypeName","pathNode":{"id":155,"name":"ValidationData","nameLocations":["2460:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":9,"src":"2460:14:0"},"referencedDeclaration":9,"src":"2460:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$9_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"2459:28:0"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":190,"src":"2502:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":159,"name":"uint256","nodeType":"ElementaryTypeName","src":"2502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2501:9:0"},"scope":239,"src":"2431:207:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":227,"nodeType":"Block","src":"3062:112:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":202,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3080:9:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3096:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3080:17:0","trueExpression":{"hexValue":"31","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3092:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3079:19:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":209,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"3110:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3102:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"3102:7:0","typeDescriptions":{}}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3125:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"3102:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3101:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3079:50:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":217,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"3141:10:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3133:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3133:7:0","typeDescriptions":{}}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3133:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3157:3:0","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3163:2:0","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"3157:8:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3156:10:0","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"3133:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3132:35:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3079:88:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":201,"id":226,"nodeType":"Return","src":"3072:95:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2640:311:0","text":" helper to pack the return value for validateUserOp, when not using an aggregator\n @param sigFailed - true for signature failure, false for success\n @param validUntil last timestamp this UserOperation is valid (or zero for infinite)\n @param validAfter first timestamp this UserOperation is valid"},"id":228,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2965:19:0","nodeType":"FunctionDefinition","parameters":{"id":198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"sigFailed","nameLocation":"2990:9:0","nodeType":"VariableDeclaration","scope":228,"src":"2985:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":192,"name":"bool","nodeType":"ElementaryTypeName","src":"2985:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"validUntil","nameLocation":"3008:10:0","nodeType":"VariableDeclaration","scope":228,"src":"3001:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":194,"name":"uint48","nodeType":"ElementaryTypeName","src":"3001:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"validAfter","nameLocation":"3027:10:0","nodeType":"VariableDeclaration","scope":228,"src":"3020:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":196,"name":"uint48","nodeType":"ElementaryTypeName","src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2984:54:0"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"3053:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"3053:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3052:9:0"},"scope":239,"src":"2956:218:0","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":237,"nodeType":"Block","src":"3429:193:0","statements":[{"AST":{"nodeType":"YulBlock","src":"3448:168:0","statements":[{"nodeType":"YulVariableDeclaration","src":"3462:22:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3479:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3473:5:0"},"nodeType":"YulFunctionCall","src":"3473:11:0"},"variables":[{"name":"mem","nodeType":"YulTypedName","src":"3466:3:0","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3497:22:0","value":{"name":"data.length","nodeType":"YulIdentifier","src":"3508:11:0"},"variables":[{"name":"len","nodeType":"YulTypedName","src":"3501:3:0","type":""}]},{"expression":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3545:3:0"},{"name":"data.offset","nodeType":"YulIdentifier","src":"3550:11:0"},{"name":"len","nodeType":"YulIdentifier","src":"3563:3:0"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3532:12:0"},"nodeType":"YulFunctionCall","src":"3532:35:0"},"nodeType":"YulExpressionStatement","src":"3532:35:0"},{"nodeType":"YulAssignment","src":"3580:26:0","value":{"arguments":[{"name":"mem","nodeType":"YulIdentifier","src":"3597:3:0"},{"name":"len","nodeType":"YulIdentifier","src":"3602:3:0"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3587:9:0"},"nodeType":"YulFunctionCall","src":"3587:19:0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3580:3:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":231,"isOffset":false,"isSlot":false,"src":"3508:11:0","suffix":"length","valueSize":1},{"declaration":231,"isOffset":true,"isSlot":false,"src":"3550:11:0","suffix":"offset","valueSize":1},{"declaration":234,"isOffset":false,"isSlot":false,"src":"3580:3:0","valueSize":1}],"id":236,"nodeType":"InlineAssembly","src":"3439:177:0"}]},"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"3176:176:0","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."},"id":238,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"3366:14:0","nodeType":"FunctionDefinition","parameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"data","nameLocation":"3396:4:0","nodeType":"VariableDeclaration","scope":238,"src":"3381:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":230,"name":"bytes","nodeType":"ElementaryTypeName","src":"3381:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3380:21:0"},"returnParameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"ret","nameLocation":"3424:3:0","nodeType":"VariableDeclaration","scope":238,"src":"3416:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3416:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3415:13:0"},"scope":239,"src":"3357:265:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"36:3588:0"},"id":0},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[272],"UserOperation":[666],"UserOperationLib":[836],"calldataKeccak":[238]},"id":273,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":240,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:1"},{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":241,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":273,"sourceUnit":837,"src":"62:29:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"93:43:1","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":272,"linearizedBaseContracts":[272],"name":"IAggregator","nameLocation":"147:11:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"166:136:1","text":" validate aggregated signature.\n revert if the aggregated signature does not match the given list of operations."},"functionSelector":"e3563a4f","id":252,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"316:18:1","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"userOps","nameLocation":"360:7:1","nodeType":"VariableDeclaration","scope":252,"src":"335:32:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$666_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":245,"nodeType":"UserDefinedTypeName","pathNode":{"id":244,"name":"UserOperation","nameLocations":["335:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"335:13:1"},"referencedDeclaration":666,"src":"335:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"id":246,"nodeType":"ArrayTypeName","src":"335:15:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$666_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"signature","nameLocation":"384:9:1","nodeType":"VariableDeclaration","scope":252,"src":"369:24:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":248,"name":"bytes","nodeType":"ElementaryTypeName","src":"369:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"334:60:1"},"returnParameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"408:0:1"},"scope":272,"src":"307:102:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"415:576:1","text":" validate signature of a single userOp\n This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp the userOperation received from the user.\n @return sigForUserOp the value to put into the signature field of the userOp when calling handleOps.\n    (usually empty, unless account and aggregator support some kind of \"multisig\""},"functionSelector":"64c530cd","id":261,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1005:23:1","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"userOp","nameLocation":"1052:6:1","nodeType":"VariableDeclaration","scope":261,"src":"1029:29:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":255,"nodeType":"UserDefinedTypeName","pathNode":{"id":254,"name":"UserOperation","nameLocations":["1029:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"1029:13:1"},"referencedDeclaration":666,"src":"1029:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1028:31:1"},"returnParameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1100:12:1","nodeType":"VariableDeclaration","scope":261,"src":"1087:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":258,"name":"bytes","nodeType":"ElementaryTypeName","src":"1087:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1086:27:1"},"scope":272,"src":"996:118:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"1120:368:1","text":" aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation\n @param userOps array of UserOperations to collect the signatures from.\n @return aggregatedSignature the aggregated signature"},"functionSelector":"275e2d79","id":271,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1502:19:1","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"userOps","nameLocation":"1547:7:1","nodeType":"VariableDeclaration","scope":271,"src":"1522:32:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$666_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":264,"nodeType":"UserDefinedTypeName","pathNode":{"id":263,"name":"UserOperation","nameLocations":["1522:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"1522:13:1"},"referencedDeclaration":666,"src":"1522:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"id":265,"nodeType":"ArrayTypeName","src":"1522:15:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$666_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"}],"src":"1521:34:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1592:19:1","nodeType":"VariableDeclaration","scope":271,"src":"1579:32:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":268,"name":"bytes","nodeType":"ElementaryTypeName","src":"1579:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1578:34:1"},"scope":272,"src":"1493:120:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":273,"src":"137:1478:1","usedErrors":[],"usedEvents":[]}],"src":"36:1580:1"},"id":1},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[272],"IEntryPoint":[478],"INonceManager":[497],"IStakeManager":[638],"UserOperation":[666],"UserOperationLib":[836],"calldataKeccak":[238]},"id":479,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":274,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"163:24:2"},{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":275,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":479,"sourceUnit":837,"src":"311:29:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":276,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":479,"sourceUnit":639,"src":"341:29:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":277,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":479,"sourceUnit":273,"src":"371:27:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":278,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":479,"sourceUnit":498,"src":"399:29:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":279,"name":"IStakeManager","nameLocations":["455:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":638,"src":"455:13:2"},"id":280,"nodeType":"InheritanceSpecifier","src":"455:13:2"},{"baseName":{"id":281,"name":"INonceManager","nameLocations":["470:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":497,"src":"470:13:2"},"id":282,"nodeType":"InheritanceSpecifier","src":"470:13:2"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":478,"linearizedBaseContracts":[478,497,638],"name":"IEntryPoint","nameLocation":"440:11:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":298,"name":"UserOperationEvent","nameLocation":"1191:18:2","nodeType":"EventDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1226:10:2","nodeType":"VariableDeclaration","scope":298,"src":"1210:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1210:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":286,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1254:6:2","nodeType":"VariableDeclaration","scope":298,"src":"1238:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"1238:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":288,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1278:9:2","nodeType":"VariableDeclaration","scope":298,"src":"1262:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"1262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":290,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1297:5:2","nodeType":"VariableDeclaration","scope":298,"src":"1289:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":292,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1309:7:2","nodeType":"VariableDeclaration","scope":298,"src":"1304:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":291,"name":"bool","nodeType":"ElementaryTypeName","src":"1304:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":294,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1326:13:2","nodeType":"VariableDeclaration","scope":298,"src":"1318:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":296,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1349:13:2","nodeType":"VariableDeclaration","scope":298,"src":"1341:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1341:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1209:154:2"},"src":"1185:179:2"},{"anonymous":false,"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"1370:333:2","text":" account \"sender\" was deployed.\n @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n @param sender the account that is deployed\n @param factory the factory used to deploy this account (in the initCode)\n @param paymaster the paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":309,"name":"AccountDeployed","nameLocation":"1714:15:2","nodeType":"EventDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1746:10:2","nodeType":"VariableDeclaration","scope":309,"src":"1730:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1730:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":303,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1774:6:2","nodeType":"VariableDeclaration","scope":309,"src":"1758:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":302,"name":"address","nodeType":"ElementaryTypeName","src":"1758:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":305,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1790:7:2","nodeType":"VariableDeclaration","scope":309,"src":"1782:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"1782:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"1807:9:2","nodeType":"VariableDeclaration","scope":309,"src":"1799:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"1799:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1729:88:2"},"src":"1708:110:2"},{"anonymous":false,"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"1824:337:2","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length\n @param userOpHash the request unique identifier.\n @param sender the sender of this request\n @param nonce the nonce used in the request\n @param revertReason - the return bytes from the (reverted) call to \"callData\"."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":320,"name":"UserOperationRevertReason","nameLocation":"2172:25:2","nodeType":"EventDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2214:10:2","nodeType":"VariableDeclaration","scope":320,"src":"2198:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2242:6:2","nodeType":"VariableDeclaration","scope":320,"src":"2226:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"2226:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2258:5:2","nodeType":"VariableDeclaration","scope":320,"src":"2250:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":315,"name":"uint256","nodeType":"ElementaryTypeName","src":"2250:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":318,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2271:12:2","nodeType":"VariableDeclaration","scope":320,"src":"2265:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":317,"name":"bytes","nodeType":"ElementaryTypeName","src":"2265:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2197:87:2"},"src":"2166:119:2"},{"anonymous":false,"documentation":{"id":321,"nodeType":"StructuredDocumentation","src":"2291:158:2","text":" an event emitted by handleOps(), before starting the execution loop.\n any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":323,"name":"BeforeExecution","nameLocation":"2460:15:2","nodeType":"EventDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[],"src":"2475:2:2"},"src":"2454:24:2"},{"anonymous":false,"documentation":{"id":324,"nodeType":"StructuredDocumentation","src":"2484:101:2","text":" signature aggregator used by the following UserOperationEvents within this bundle."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":328,"name":"SignatureAggregatorChanged","nameLocation":"2596:26:2","nodeType":"EventDefinition","parameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"2639:10:2","nodeType":"VariableDeclaration","scope":328,"src":"2623:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"2623:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2622:28:2"},"src":"2590:61:2"},{"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"2657:756:2","text":" a custom revert error of handleOps, to identify the offending op.\n  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n  @param reason - revert reason\n      The string starts with a unique code \"AAmn\", where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n      so a failure can be attributed to the correct entity.\n   Should be caught in off-chain handleOps simulation and not happen on-chain.\n   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts."},"errorSelector":"220266b6","id":335,"name":"FailedOp","nameLocation":"3424:8:2","nodeType":"ErrorDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"opIndex","nameLocation":"3441:7:2","nodeType":"VariableDeclaration","scope":335,"src":"3433:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":330,"name":"uint256","nodeType":"ElementaryTypeName","src":"3433:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"reason","nameLocation":"3457:6:2","nodeType":"VariableDeclaration","scope":335,"src":"3450:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":332,"name":"string","nodeType":"ElementaryTypeName","src":"3450:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3432:32:2"},"src":"3418:47:2"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"3471:114:2","text":" error case when a signature aggregator fails to verify the aggregated signature it had created."},"errorSelector":"86a9f750","id":340,"name":"SignatureValidationFailed","nameLocation":"3596:25:2","nodeType":"ErrorDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"aggregator","nameLocation":"3630:10:2","nodeType":"VariableDeclaration","scope":340,"src":"3622:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"3622:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3621:20:2"},"src":"3590:52:2"},{"documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"3648:327:2","text":" Successful result from simulateValidation.\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)"},"errorSelector":"e0cff05f","id":355,"name":"ValidationResult","nameLocation":"3986:16:2","nodeType":"ErrorDefinition","parameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"returnInfo","nameLocation":"4014:10:2","nodeType":"VariableDeclaration","scope":355,"src":"4003:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$453_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo"},"typeName":{"id":343,"nodeType":"UserDefinedTypeName","pathNode":{"id":342,"name":"ReturnInfo","nameLocations":["4003:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":453,"src":"4003:10:2"},"referencedDeclaration":453,"src":"4003:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$453_storage_ptr","typeString":"struct IEntryPoint.ReturnInfo"}},"visibility":"internal"},{"constant":false,"id":347,"mutability":"mutable","name":"senderInfo","nameLocation":"4044:10:2","nodeType":"VariableDeclaration","scope":355,"src":"4034:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":346,"nodeType":"UserDefinedTypeName","pathNode":{"id":345,"name":"StakeInfo","nameLocations":["4034:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":590,"src":"4034:9:2"},"referencedDeclaration":590,"src":"4034:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"factoryInfo","nameLocation":"4066:11:2","nodeType":"VariableDeclaration","scope":355,"src":"4056:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":349,"nodeType":"UserDefinedTypeName","pathNode":{"id":348,"name":"StakeInfo","nameLocations":["4056:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":590,"src":"4056:9:2"},"referencedDeclaration":590,"src":"4056:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":353,"mutability":"mutable","name":"paymasterInfo","nameLocation":"4089:13:2","nodeType":"VariableDeclaration","scope":355,"src":"4079:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":352,"nodeType":"UserDefinedTypeName","pathNode":{"id":351,"name":"StakeInfo","nameLocations":["4079:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":590,"src":"4079:9:2"},"referencedDeclaration":590,"src":"4079:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"src":"4002:101:2"},"src":"3980:124:2"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"4110:561:2","text":" Successful result from simulateValidation, if the account returns a signature aggregator\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factory (if any)\n @param paymasterInfo stake information about the paymaster (if any)\n @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n      bundler MUST use it to verify the signature, or reject the UserOperation"},"errorSelector":"faecb4e4","id":373,"name":"ValidationResultWithAggregation","nameLocation":"4682:31:2","nodeType":"ErrorDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"returnInfo","nameLocation":"4725:10:2","nodeType":"VariableDeclaration","scope":373,"src":"4714:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$453_memory_ptr","typeString":"struct IEntryPoint.ReturnInfo"},"typeName":{"id":358,"nodeType":"UserDefinedTypeName","pathNode":{"id":357,"name":"ReturnInfo","nameLocations":["4714:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":453,"src":"4714:10:2"},"referencedDeclaration":453,"src":"4714:10:2","typeDescriptions":{"typeIdentifier":"t_struct$_ReturnInfo_$453_storage_ptr","typeString":"struct IEntryPoint.ReturnInfo"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"senderInfo","nameLocation":"4755:10:2","nodeType":"VariableDeclaration","scope":373,"src":"4745:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":361,"nodeType":"UserDefinedTypeName","pathNode":{"id":360,"name":"StakeInfo","nameLocations":["4745:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":590,"src":"4745:9:2"},"referencedDeclaration":590,"src":"4745:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"factoryInfo","nameLocation":"4777:11:2","nodeType":"VariableDeclaration","scope":373,"src":"4767:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":364,"nodeType":"UserDefinedTypeName","pathNode":{"id":363,"name":"StakeInfo","nameLocations":["4767:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":590,"src":"4767:9:2"},"referencedDeclaration":590,"src":"4767:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"paymasterInfo","nameLocation":"4800:13:2","nodeType":"VariableDeclaration","scope":373,"src":"4790:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_memory_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":367,"nodeType":"UserDefinedTypeName","pathNode":{"id":366,"name":"StakeInfo","nameLocations":["4790:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":590,"src":"4790:9:2"},"referencedDeclaration":590,"src":"4790:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"aggregatorInfo","nameLocation":"4843:14:2","nodeType":"VariableDeclaration","scope":373,"src":"4823:34:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$460_memory_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo"},"typeName":{"id":370,"nodeType":"UserDefinedTypeName","pathNode":{"id":369,"name":"AggregatorStakeInfo","nameLocations":["4823:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":460,"src":"4823:19:2"},"referencedDeclaration":460,"src":"4823:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_AggregatorStakeInfo_$460_storage_ptr","typeString":"struct IEntryPoint.AggregatorStakeInfo"}},"visibility":"internal"}],"src":"4713:145:2"},"src":"4676:183:2"},{"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"4865:51:2","text":" return value of getSenderAddress"},"errorSelector":"6ca7b806","id":378,"name":"SenderAddressResult","nameLocation":"4927:19:2","nodeType":"ErrorDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"sender","nameLocation":"4955:6:2","nodeType":"VariableDeclaration","scope":378,"src":"4947:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"4947:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4946:16:2"},"src":"4921:42:2"},{"documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"4969:51:2","text":" return value of simulateHandleOp"},"errorSelector":"8b7ac980","id":393,"name":"ExecutionResult","nameLocation":"5031:15:2","nodeType":"ErrorDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"preOpGas","nameLocation":"5055:8:2","nodeType":"VariableDeclaration","scope":393,"src":"5047:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":380,"name":"uint256","nodeType":"ElementaryTypeName","src":"5047:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":383,"mutability":"mutable","name":"paid","nameLocation":"5073:4:2","nodeType":"VariableDeclaration","scope":393,"src":"5065:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":382,"name":"uint256","nodeType":"ElementaryTypeName","src":"5065:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":385,"mutability":"mutable","name":"validAfter","nameLocation":"5086:10:2","nodeType":"VariableDeclaration","scope":393,"src":"5079:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":384,"name":"uint48","nodeType":"ElementaryTypeName","src":"5079:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"validUntil","nameLocation":"5105:10:2","nodeType":"VariableDeclaration","scope":393,"src":"5098:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":386,"name":"uint48","nodeType":"ElementaryTypeName","src":"5098:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"targetSuccess","nameLocation":"5122:13:2","nodeType":"VariableDeclaration","scope":393,"src":"5117:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":388,"name":"bool","nodeType":"ElementaryTypeName","src":"5117:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":391,"mutability":"mutable","name":"targetResult","nameLocation":"5143:12:2","nodeType":"VariableDeclaration","scope":393,"src":"5137:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":390,"name":"bytes","nodeType":"ElementaryTypeName","src":"5137:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5046:110:2"},"src":"5025:132:2"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":403,"members":[{"constant":false,"id":397,"mutability":"mutable","name":"userOps","nameLocation":"5255:7:2","nodeType":"VariableDeclaration","scope":403,"src":"5239:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$666_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":395,"nodeType":"UserDefinedTypeName","pathNode":{"id":394,"name":"UserOperation","nameLocations":["5239:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"5239:13:2"},"referencedDeclaration":666,"src":"5239:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"id":396,"nodeType":"ArrayTypeName","src":"5239:15:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$666_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"aggregator","nameLocation":"5315:10:2","nodeType":"VariableDeclaration","scope":403,"src":"5303:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$272","typeString":"contract IAggregator"},"typeName":{"id":399,"nodeType":"UserDefinedTypeName","pathNode":{"id":398,"name":"IAggregator","nameLocations":["5303:11:2"],"nodeType":"IdentifierPath","referencedDeclaration":272,"src":"5303:11:2"},"referencedDeclaration":272,"src":"5303:11:2","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$272","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"signature","nameLocation":"5373:9:2","nodeType":"VariableDeclaration","scope":403,"src":"5367:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":401,"name":"bytes","nodeType":"ElementaryTypeName","src":"5367:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"5208:20:2","nodeType":"StructDefinition","scope":478,"src":"5201:188:2","visibility":"public"},{"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"5395:368:2","text":" Execute a batch of UserOperation.\n no signature aggregator is used.\n if any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops the operations to execute\n @param beneficiary the address to receive the fees"},"functionSelector":"1fad948c","id":413,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"5777:9:2","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"ops","nameLocation":"5812:3:2","nodeType":"VariableDeclaration","scope":413,"src":"5787:28:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$666_calldata_ptr_$dyn_calldata_ptr","typeString":"struct UserOperation[]"},"typeName":{"baseType":{"id":406,"nodeType":"UserDefinedTypeName","pathNode":{"id":405,"name":"UserOperation","nameLocations":["5787:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"5787:13:2"},"referencedDeclaration":666,"src":"5787:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"id":407,"nodeType":"ArrayTypeName","src":"5787:15:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOperation_$666_storage_$dyn_storage_ptr","typeString":"struct UserOperation[]"}},"visibility":"internal"},{"constant":false,"id":410,"mutability":"mutable","name":"beneficiary","nameLocation":"5833:11:2","nodeType":"VariableDeclaration","scope":413,"src":"5817:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":409,"name":"address","nodeType":"ElementaryTypeName","src":"5817:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5786:59:2"},"returnParameters":{"id":412,"nodeType":"ParameterList","parameters":[],"src":"5854:0:2"},"scope":478,"src":"5768:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"5861:249:2","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n @param beneficiary the address to receive the fees"},"functionSelector":"4b1d7cf5","id":423,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"6124:19:2","nodeType":"FunctionDefinition","parameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"6185:16:2","nodeType":"VariableDeclaration","scope":423,"src":"6153:48:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$403_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":416,"nodeType":"UserDefinedTypeName","pathNode":{"id":415,"name":"UserOpsPerAggregator","nameLocations":["6153:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":403,"src":"6153:20:2"},"referencedDeclaration":403,"src":"6153:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$403_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":417,"nodeType":"ArrayTypeName","src":"6153:22:2","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$403_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"beneficiary","nameLocation":"6227:11:2","nodeType":"VariableDeclaration","scope":423,"src":"6211:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"6211:15:2","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6143:101:2"},"returnParameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"6253:0:2"},"scope":478,"src":"6115:139:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":424,"nodeType":"StructuredDocumentation","src":"6260:197:2","text":" generate a request Id - unique identifier for this request.\n the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."},"functionSelector":"a6193531","id":432,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"6471:13:2","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"userOp","nameLocation":"6508:6:2","nodeType":"VariableDeclaration","scope":432,"src":"6485:29:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":426,"nodeType":"UserDefinedTypeName","pathNode":{"id":425,"name":"UserOperation","nameLocations":["6485:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"6485:13:2"},"referencedDeclaration":666,"src":"6485:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6484:31:2"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":432,"src":"6539:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6539:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6538:9:2"},"scope":478,"src":"6462:86:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":433,"nodeType":"StructuredDocumentation","src":"6554:398:2","text":" Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n @param userOp the user operation to validate."},"functionSelector":"ee219423","id":439,"implemented":false,"kind":"function","modifiers":[],"name":"simulateValidation","nameLocation":"6966:18:2","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"userOp","nameLocation":"7008:6:2","nodeType":"VariableDeclaration","scope":439,"src":"6985:29:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":435,"nodeType":"UserDefinedTypeName","pathNode":{"id":434,"name":"UserOperation","nameLocations":["6985:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"6985:13:2"},"referencedDeclaration":666,"src":"6985:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"6984:31:2"},"returnParameters":{"id":438,"nodeType":"ParameterList","parameters":[],"src":"7024:0:2"},"scope":478,"src":"6957:68:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"7031:588:2","text":" gas and return values during simulation\n @param preOpGas the gas used for validation (including preValidationGas)\n @param prefund the required prefund for this operation\n @param sigFailed validateUserOp's (or paymaster's) signature check failed\n @param validAfter - first timestamp this UserOp is valid (merging account and paymaster time-range)\n @param validUntil - last timestamp this UserOp is valid (merging account and paymaster time-range)\n @param paymasterContext returned by validatePaymasterUserOp (to be passed into postOp)"},"id":453,"members":[{"constant":false,"id":442,"mutability":"mutable","name":"preOpGas","nameLocation":"7660:8:2","nodeType":"VariableDeclaration","scope":453,"src":"7652:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"7652:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":444,"mutability":"mutable","name":"prefund","nameLocation":"7686:7:2","nodeType":"VariableDeclaration","scope":453,"src":"7678:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"7678:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":446,"mutability":"mutable","name":"sigFailed","nameLocation":"7708:9:2","nodeType":"VariableDeclaration","scope":453,"src":"7703:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":445,"name":"bool","nodeType":"ElementaryTypeName","src":"7703:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"validAfter","nameLocation":"7734:10:2","nodeType":"VariableDeclaration","scope":453,"src":"7727:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":447,"name":"uint48","nodeType":"ElementaryTypeName","src":"7727:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"validUntil","nameLocation":"7761:10:2","nodeType":"VariableDeclaration","scope":453,"src":"7754:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":449,"name":"uint48","nodeType":"ElementaryTypeName","src":"7754:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"paymasterContext","nameLocation":"7787:16:2","nodeType":"VariableDeclaration","scope":453,"src":"7781:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":451,"name":"bytes","nodeType":"ElementaryTypeName","src":"7781:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7631:10:2","nodeType":"StructDefinition","scope":478,"src":"7624:186:2","visibility":"public"},{"canonicalName":"IEntryPoint.AggregatorStakeInfo","documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"7816:124:2","text":" returned aggregated signature info.\n the aggregator returned by the account, and its current stake."},"id":460,"members":[{"constant":false,"id":456,"mutability":"mutable","name":"aggregator","nameLocation":"7990:10:2","nodeType":"VariableDeclaration","scope":460,"src":"7982:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":455,"name":"address","nodeType":"ElementaryTypeName","src":"7982:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"stakeInfo","nameLocation":"8020:9:2","nodeType":"VariableDeclaration","scope":460,"src":"8010:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_storage_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":458,"nodeType":"UserDefinedTypeName","pathNode":{"id":457,"name":"StakeInfo","nameLocations":["8010:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":590,"src":"8010:9:2"},"referencedDeclaration":590,"src":"8010:9:2","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$590_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"name":"AggregatorStakeInfo","nameLocation":"7952:19:2","nodeType":"StructDefinition","scope":478,"src":"7945:91:2","visibility":"public"},{"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"8042:337:2","text":" Get counterfactual sender address.\n  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n this method always revert, and returns the address in SenderAddressResult error\n @param initCode the constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":466,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"8393:16:2","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"initCode","nameLocation":"8423:8:2","nodeType":"VariableDeclaration","scope":466,"src":"8410:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":462,"name":"bytes","nodeType":"ElementaryTypeName","src":"8410:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8409:23:2"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"8441:0:2"},"scope":478,"src":"8384:58:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"8449:847:2","text":" simulate full execution of a UserOperation (including both validation and target execution)\n this method will always revert with \"ExecutionResult\".\n it performs full validation of the UserOperation, but ignores signature error.\n an optional target address is called after the userop succeeds, and its value is returned\n (before the entire call is reverted)\n Note that in order to collect the the success/failure of the target call, it must be executed\n with trace enabled to track the emitted events.\n @param op the UserOperation to simulate\n @param target if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult\n        are set to the return from that call.\n @param targetCallData callData to pass to target address"},"functionSelector":"d6383f94","id":477,"implemented":false,"kind":"function","modifiers":[],"name":"simulateHandleOp","nameLocation":"9310:16:2","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"op","nameLocation":"9350:2:2","nodeType":"VariableDeclaration","scope":477,"src":"9327:25:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":469,"nodeType":"UserDefinedTypeName","pathNode":{"id":468,"name":"UserOperation","nameLocations":["9327:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"9327:13:2"},"referencedDeclaration":666,"src":"9327:13:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":472,"mutability":"mutable","name":"target","nameLocation":"9362:6:2","nodeType":"VariableDeclaration","scope":477,"src":"9354:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"9354:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"targetCallData","nameLocation":"9385:14:2","nodeType":"VariableDeclaration","scope":477,"src":"9370:29:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":473,"name":"bytes","nodeType":"ElementaryTypeName","src":"9370:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9326:74:2"},"returnParameters":{"id":476,"nodeType":"ParameterList","parameters":[],"src":"9409:0:2"},"scope":478,"src":"9301:109:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":479,"src":"430:8982:2","usedErrors":[335,340,355,373,378,393],"usedEvents":[298,309,320,323,328,541,549,558,565,573]}],"src":"163:9251:2"},"id":2},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[497]},"id":498,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":480,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":497,"linearizedBaseContracts":[497],"name":"INonceManager","nameLocation":"72:13:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"93:416:3","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":490,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"523:8:3","nodeType":"FunctionDefinition","parameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"sender","nameLocation":"540:6:3","nodeType":"VariableDeclaration","scope":490,"src":"532:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"532:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"key","nameLocation":"556:3:3","nodeType":"VariableDeclaration","scope":490,"src":"548:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":484,"name":"uint192","nodeType":"ElementaryTypeName","src":"548:7:3","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"531:29:3"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"nonce","nameLocation":"596:5:3","nodeType":"VariableDeclaration","scope":490,"src":"588:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"587:15:3"},"scope":497,"src":"514:89:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"609:449:3","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key."},"functionSelector":"0bd28e3b","id":496,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1072:14:3","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"key","nameLocation":"1095:3:3","nodeType":"VariableDeclaration","scope":496,"src":"1087:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":492,"name":"uint192","nodeType":"ElementaryTypeName","src":"1087:7:3","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1086:13:3"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[],"src":"1108:0:3"},"scope":497,"src":"1063:46:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":498,"src":"62:1049:3","usedErrors":[],"usedEvents":[]}],"src":"36:1076:3"},"id":3},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IPaymaster.sol","exportedSymbols":{"IPaymaster":[532],"UserOperation":[666],"UserOperationLib":[836],"calldataKeccak":[238]},"id":533,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":499,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:4"},{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","file":"./UserOperation.sol","id":500,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":533,"sourceUnit":837,"src":"62:29:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymaster","contractDependencies":[],"contractKind":"interface","documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"93:216:4","text":" the interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n a paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."},"fullyImplemented":false,"id":532,"linearizedBaseContracts":[532],"name":"IPaymaster","nameLocation":"320:10:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.PostOpMode","id":505,"members":[{"id":502,"name":"opSucceeded","nameLocation":"364:11:4","nodeType":"EnumValue","src":"364:11:4"},{"id":503,"name":"opReverted","nameLocation":"406:10:4","nodeType":"EnumValue","src":"406:10:4"},{"id":504,"name":"postOpReverted","nameLocation":"473:14:4","nodeType":"EnumValue","src":"473:14:4"}],"name":"PostOpMode","nameLocation":"343:10:4","nodeType":"EnumDefinition","src":"338:269:4"},{"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"613:1254:4","text":" payment validation: check if paymaster agrees to pay.\n Must verify sender is the entryPoint.\n Revert to reject this request.\n Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted)\n The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n @param userOp the user operation\n @param userOpHash hash of the user's request data.\n @param maxCost the maximum cost of this transaction (based on maximum gas and gas price from userOp)\n @return context value to send to a postOp\n      zero length to signify postOp is not required.\n @return validationData signature and time-range of this operation, encoded the same as the return value of validateUserOperation\n      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n         otherwise, an address of an \"authorizer\" contract.\n      <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n      <6-byte> validAfter - first timestamp this operation is valid\n      Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"f465c77e","id":520,"implemented":false,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"1881:23:4","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"userOp","nameLocation":"1928:6:4","nodeType":"VariableDeclaration","scope":520,"src":"1905:29:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":508,"nodeType":"UserDefinedTypeName","pathNode":{"id":507,"name":"UserOperation","nameLocations":["1905:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"1905:13:4"},"referencedDeclaration":666,"src":"1905:13:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":511,"mutability":"mutable","name":"userOpHash","nameLocation":"1944:10:4","nodeType":"VariableDeclaration","scope":520,"src":"1936:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1936:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"maxCost","nameLocation":"1964:7:4","nodeType":"VariableDeclaration","scope":520,"src":"1956:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1956:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1904:68:4"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"context","nameLocation":"2008:7:4","nodeType":"VariableDeclaration","scope":520,"src":"1995:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":515,"name":"bytes","nodeType":"ElementaryTypeName","src":"1995:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"validationData","nameLocation":"2025:14:4","nodeType":"VariableDeclaration","scope":520,"src":"2017:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"2017:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1994:46:4"},"scope":532,"src":"1872:169:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"2047:616:4","text":" post-operation handler.\n Must verify sender is the entryPoint\n @param mode enum with the following options:\n      opSucceeded - user operation succeeded.\n      opReverted  - user op reverted. still has to pay for gas.\n      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.\n                       Now this is the 2nd call, after user's op was deliberately reverted.\n @param context - the context value returned by validatePaymasterUserOp\n @param actualGasCost - actual gas used so far (without this postOp call)."},"functionSelector":"a9a23409","id":531,"implemented":false,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"2677:6:4","nodeType":"FunctionDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"mode","nameLocation":"2695:4:4","nodeType":"VariableDeclaration","scope":531,"src":"2684:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$505","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":523,"nodeType":"UserDefinedTypeName","pathNode":{"id":522,"name":"PostOpMode","nameLocations":["2684:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":505,"src":"2684:10:4"},"referencedDeclaration":505,"src":"2684:10:4","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$505","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":526,"mutability":"mutable","name":"context","nameLocation":"2716:7:4","nodeType":"VariableDeclaration","scope":531,"src":"2701:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":525,"name":"bytes","nodeType":"ElementaryTypeName","src":"2701:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"actualGasCost","nameLocation":"2733:13:4","nodeType":"VariableDeclaration","scope":531,"src":"2725:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2683:64:4"},"returnParameters":{"id":530,"nodeType":"ParameterList","parameters":[],"src":"2756:0:4"},"scope":532,"src":"2668:89:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":533,"src":"310:2449:4","usedErrors":[],"usedEvents":[]}],"src":"36:2724:4"},"id":4},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[638]},"id":639,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":534,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"41:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"67:211:5","text":" manage deposits and stakes.\n deposit is just a balance used to pay for UserOperations (either by a paymaster or an account)\n stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":638,"linearizedBaseContracts":[638],"name":"IStakeManager","nameLocation":"289:13:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":541,"name":"Deposited","nameLocation":"316:9:5","nodeType":"EventDefinition","parameters":{"id":540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":537,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"351:7:5","nodeType":"VariableDeclaration","scope":541,"src":"335:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":536,"name":"address","nodeType":"ElementaryTypeName","src":"335:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":539,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"376:12:5","nodeType":"VariableDeclaration","scope":541,"src":"368:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":538,"name":"uint256","nodeType":"ElementaryTypeName","src":"368:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"325:69:5"},"src":"310:85:5"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":549,"name":"Withdrawn","nameLocation":"407:9:5","nodeType":"EventDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"442:7:5","nodeType":"VariableDeclaration","scope":549,"src":"426:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":545,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"467:15:5","nodeType":"VariableDeclaration","scope":549,"src":"459:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"459:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"500:6:5","nodeType":"VariableDeclaration","scope":549,"src":"492:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"492:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"416:96:5"},"src":"401:112:5"},{"anonymous":false,"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"519:52:5","text":"Emitted when stake or unstake delay are modified"},"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":558,"name":"StakeLocked","nameLocation":"582:11:5","nodeType":"EventDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"619:7:5","nodeType":"VariableDeclaration","scope":558,"src":"603:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":554,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"644:11:5","nodeType":"VariableDeclaration","scope":558,"src":"636:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":553,"name":"uint256","nodeType":"ElementaryTypeName","src":"636:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":556,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"673:15:5","nodeType":"VariableDeclaration","scope":558,"src":"665:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"665:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"593:101:5"},"src":"576:119:5"},{"anonymous":false,"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"701:52:5","text":"Emitted once a stake is scheduled for withdrawal"},"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":565,"name":"StakeUnlocked","nameLocation":"764:13:5","nodeType":"EventDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"803:7:5","nodeType":"VariableDeclaration","scope":565,"src":"787:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"787:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":563,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"828:12:5","nodeType":"VariableDeclaration","scope":565,"src":"820:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":562,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"777:69:5"},"src":"758:89:5"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":573,"name":"StakeWithdrawn","nameLocation":"859:14:5","nodeType":"EventDefinition","parameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"899:7:5","nodeType":"VariableDeclaration","scope":573,"src":"883:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"883:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":569,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"924:15:5","nodeType":"VariableDeclaration","scope":573,"src":"916:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":568,"name":"address","nodeType":"ElementaryTypeName","src":"916:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":571,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"957:6:5","nodeType":"VariableDeclaration","scope":573,"src":"949:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"949:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"873:96:5"},"src":"853:117:5"},{"canonicalName":"IStakeManager.DepositInfo","documentation":{"id":574,"nodeType":"StructuredDocumentation","src":"976:632:5","text":" @param deposit the entity's deposit\n @param staked true if this entity is staked.\n @param stake actual amount of ether staked for this entity.\n @param unstakeDelaySec minimum delay to withdraw the stake.\n @param withdrawTime - first block timestamp where 'withdrawStake' will be callable, or zero if already locked\n @dev sizes were chosen so that (deposit,staked, stake) fit into one cell (used during handleOps)\n    and the rest fit into a 2nd cell.\n    112 bit allows for 10^15 eth\n    48 bit for full timestamp\n    32 bit allows 150 years for unstake delay"},"id":585,"members":[{"constant":false,"id":576,"mutability":"mutable","name":"deposit","nameLocation":"1650:7:5","nodeType":"VariableDeclaration","scope":585,"src":"1642:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":575,"name":"uint112","nodeType":"ElementaryTypeName","src":"1642:7:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":578,"mutability":"mutable","name":"staked","nameLocation":"1672:6:5","nodeType":"VariableDeclaration","scope":585,"src":"1667:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":577,"name":"bool","nodeType":"ElementaryTypeName","src":"1667:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":580,"mutability":"mutable","name":"stake","nameLocation":"1696:5:5","nodeType":"VariableDeclaration","scope":585,"src":"1688:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":579,"name":"uint112","nodeType":"ElementaryTypeName","src":"1688:7:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1718:15:5","nodeType":"VariableDeclaration","scope":585,"src":"1711:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":581,"name":"uint32","nodeType":"ElementaryTypeName","src":"1711:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"withdrawTime","nameLocation":"1750:12:5","nodeType":"VariableDeclaration","scope":585,"src":"1743:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":583,"name":"uint48","nodeType":"ElementaryTypeName","src":"1743:6:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1620:11:5","nodeType":"StructDefinition","scope":638,"src":"1613:156:5","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":590,"members":[{"constant":false,"id":587,"mutability":"mutable","name":"stake","nameLocation":"1871:5:5","nodeType":"VariableDeclaration","scope":590,"src":"1863:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":586,"name":"uint256","nodeType":"ElementaryTypeName","src":"1863:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1894:15:5","nodeType":"VariableDeclaration","scope":590,"src":"1886:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1843:9:5","nodeType":"StructDefinition","scope":638,"src":"1836:80:5","visibility":"public"},{"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"1922:60:5","text":"@return info - full deposit information of given account"},"functionSelector":"5287ce12","id":599,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"1996:14:5","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"account","nameLocation":"2019:7:5","nodeType":"VariableDeclaration","scope":599,"src":"2011:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"2011:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2010:17:5"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"info","nameLocation":"2070:4:5","nodeType":"VariableDeclaration","scope":599,"src":"2051:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$585_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":596,"nodeType":"UserDefinedTypeName","pathNode":{"id":595,"name":"DepositInfo","nameLocations":["2051:11:5"],"nodeType":"IdentifierPath","referencedDeclaration":585,"src":"2051:11:5"},"referencedDeclaration":585,"src":"2051:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$585_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2050:25:5"},"scope":638,"src":"1987:89:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"2082:56:5","text":"@return the deposit (for gas payment) of the account"},"functionSelector":"70a08231","id":607,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2152:9:5","nodeType":"FunctionDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"account","nameLocation":"2170:7:5","nodeType":"VariableDeclaration","scope":607,"src":"2162:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"2162:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2161:17:5"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":607,"src":"2202:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"2202:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:9:5"},"scope":638,"src":"2143:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":608,"nodeType":"StructuredDocumentation","src":"2217:58:5","text":" add to the deposit of the given account"},"functionSelector":"b760faf9","id":613,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2289:9:5","nodeType":"FunctionDefinition","parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"account","nameLocation":"2307:7:5","nodeType":"VariableDeclaration","scope":613,"src":"2299:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"2299:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2298:17:5"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[],"src":"2332:0:5"},"scope":638,"src":"2280:53:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"2339:201:5","text":" add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec the new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":619,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2554:8:5","nodeType":"FunctionDefinition","parameters":{"id":617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"_unstakeDelaySec","nameLocation":"2570:16:5","nodeType":"VariableDeclaration","scope":619,"src":"2563:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":615,"name":"uint32","nodeType":"ElementaryTypeName","src":"2563:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2562:25:5"},"returnParameters":{"id":618,"nodeType":"ParameterList","parameters":[],"src":"2604:0:5"},"scope":638,"src":"2545:60:5","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"2611:128:5","text":" attempt to unlock the stake.\n the value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":623,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"2753:11:5","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[],"src":"2764:2:5"},"returnParameters":{"id":622,"nodeType":"ParameterList","parameters":[],"src":"2775:0:5"},"scope":638,"src":"2744:32:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":624,"nodeType":"StructuredDocumentation","src":"2782:194:5","text":" withdraw from the (unlocked) stake.\n must first call unlockStake and wait for the unstakeDelay to pass\n @param withdrawAddress the address to send withdrawn value."},"functionSelector":"c23a5cea","id":629,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"2990:13:5","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3020:15:5","nodeType":"VariableDeclaration","scope":629,"src":"3004:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"3004:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3003:33:5"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[],"src":"3045:0:5"},"scope":638,"src":"2981:65:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"3052:165:5","text":" withdraw from the deposit.\n @param withdrawAddress the address to send withdrawn value.\n @param withdrawAmount the amount to withdraw."},"functionSelector":"205c2878","id":637,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3231:10:5","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3258:15:5","nodeType":"VariableDeclaration","scope":637,"src":"3242:31:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"3242:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":634,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3283:14:5","nodeType":"VariableDeclaration","scope":637,"src":"3275:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"3275:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3241:57:5"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[],"src":"3307:0:5"},"scope":638,"src":"3222:86:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":639,"src":"279:3031:5","usedErrors":[],"usedEvents":[541,549,558,565,573]}],"src":"41:3270:5"},"id":5},"@account-abstraction/contracts/interfaces/UserOperation.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","exportedSymbols":{"UserOperation":[666],"UserOperationLib":[836],"calldataKeccak":[238]},"id":837,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":640,"literals":["solidity","^","0.8",".12"],"nodeType":"PragmaDirective","src":"36:24:6"},{"absolutePath":"@account-abstraction/contracts/core/Helpers.sol","file":"../core/Helpers.sol","id":642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":837,"sourceUnit":239,"src":"104:51:6","symbolAliases":[{"foreign":{"id":641,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"112:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"UserOperation","documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"157:1035:6","text":" User Operation struct\n @param sender the sender account of this request.\n @param nonce unique value the sender uses to verify it is not a replay.\n @param initCode if set, the account contract will be created by this constructor/\n @param callData the method call to execute on this account.\n @param callGasLimit the gas limit passed to the callData method call.\n @param verificationGasLimit gas used for validateUserOp and validatePaymasterUserOp.\n @param preVerificationGas gas not calculated by the handleOps method, but added to the gas paid. Covers batch overhead.\n @param maxFeePerGas same as EIP-1559 gas parameter.\n @param maxPriorityFeePerGas same as EIP-1559 gas parameter.\n @param paymasterAndData if set, this field holds the paymaster address and paymaster-specific data. the paymaster will pay for the transaction instead of the sender.\n @param signature sender-verified signature over the entire request, the EntryPoint address and the chain ID."},"id":666,"members":[{"constant":false,"id":645,"mutability":"mutable","name":"sender","nameLocation":"1237:6:6","nodeType":"VariableDeclaration","scope":666,"src":"1229:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"1229:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"nonce","nameLocation":"1261:5:6","nodeType":"VariableDeclaration","scope":666,"src":"1253:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"1253:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"initCode","nameLocation":"1282:8:6","nodeType":"VariableDeclaration","scope":666,"src":"1276:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":648,"name":"bytes","nodeType":"ElementaryTypeName","src":"1276:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":651,"mutability":"mutable","name":"callData","nameLocation":"1306:8:6","nodeType":"VariableDeclaration","scope":666,"src":"1300:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":650,"name":"bytes","nodeType":"ElementaryTypeName","src":"1300:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":653,"mutability":"mutable","name":"callGasLimit","nameLocation":"1332:12:6","nodeType":"VariableDeclaration","scope":666,"src":"1324:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1324:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":655,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"1362:20:6","nodeType":"VariableDeclaration","scope":666,"src":"1354:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":654,"name":"uint256","nodeType":"ElementaryTypeName","src":"1354:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":657,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1400:18:6","nodeType":"VariableDeclaration","scope":666,"src":"1392:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1436:12:6","nodeType":"VariableDeclaration","scope":666,"src":"1428:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":658,"name":"uint256","nodeType":"ElementaryTypeName","src":"1428:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1466:20:6","nodeType":"VariableDeclaration","scope":666,"src":"1458:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"1458:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":663,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1502:16:6","nodeType":"VariableDeclaration","scope":666,"src":"1496:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":662,"name":"bytes","nodeType":"ElementaryTypeName","src":"1496:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"signature","nameLocation":"1534:9:6","nodeType":"VariableDeclaration","scope":666,"src":"1528:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":664,"name":"bytes","nodeType":"ElementaryTypeName","src":"1528:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOperation","nameLocation":"1204:13:6","nodeType":"StructDefinition","scope":837,"src":"1197:353:6","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"UserOperationLib","contractDependencies":[],"contractKind":"library","documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"1552:77:6","text":" Utility functions helpful when working with UserOperation structs."},"fullyImplemented":true,"id":836,"linearizedBaseContracts":[836],"name":"UserOperationLib","nameLocation":"1638:16:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":687,"nodeType":"Block","src":"1744:199:6","statements":[{"assignments":[676],"declarations":[{"constant":false,"id":676,"mutability":"mutable","name":"data","nameLocation":"1762:4:6","nodeType":"VariableDeclaration","scope":687,"src":"1754:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"1754:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":677,"nodeType":"VariableDeclarationStatement","src":"1754:12:6"},{"AST":{"nodeType":"YulBlock","src":"1868:30:6","statements":[{"nodeType":"YulAssignment","src":"1869:28:6","value":{"arguments":[{"name":"userOp","nodeType":"YulIdentifier","src":"1890:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1877:12:6"},"nodeType":"YulFunctionCall","src":"1877:20:6"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1869:4:6"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":676,"isOffset":false,"isSlot":false,"src":"1869:4:6","valueSize":1},{"declaration":670,"isOffset":false,"isSlot":false,"src":"1890:6:6","valueSize":1}],"id":678,"nodeType":"InlineAssembly","src":"1859:39:6"},{"expression":{"arguments":[{"arguments":[{"id":683,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"1930:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1922:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":681,"name":"uint160","nodeType":"ElementaryTypeName","src":"1922:7:6","typeDescriptions":{}}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1922:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:6","typeDescriptions":{}}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":674,"id":686,"nodeType":"Return","src":"1907:29:6"}]},"id":688,"implemented":true,"kind":"function","modifiers":[],"name":"getSender","nameLocation":"1671:9:6","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"userOp","nameLocation":"1704:6:6","nodeType":"VariableDeclaration","scope":688,"src":"1681:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":669,"nodeType":"UserDefinedTypeName","pathNode":{"id":668,"name":"UserOperation","nameLocations":["1681:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"1681:13:6"},"referencedDeclaration":666,"src":"1681:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"1680:31:6"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":688,"src":"1735:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"1735:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1734:9:6"},"scope":836,"src":"1662:281:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":722,"nodeType":"Block","src":"2164:391:6","statements":[{"id":721,"nodeType":"UncheckedBlock","src":"2170:379:6","statements":[{"assignments":[697],"declarations":[{"constant":false,"id":697,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"2198:12:6","nodeType":"VariableDeclaration","scope":721,"src":"2190:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"2190:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":700,"initialValue":{"expression":{"id":698,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"2213:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2220:12:6","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":659,"src":"2213:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2190:42:6"},{"assignments":[702],"declarations":[{"constant":false,"id":702,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"2250:20:6","nodeType":"VariableDeclaration","scope":721,"src":"2242:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2242:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":705,"initialValue":{"expression":{"id":703,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"2273:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2280:20:6","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":661,"src":"2273:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2242:58:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":706,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"2314:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":707,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"2330:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2314:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":712,"nodeType":"IfStatement","src":"2310:161:6","trueBody":{"id":711,"nodeType":"Block","src":"2352:119:6","statements":[{"expression":{"id":709,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"2448:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":695,"id":710,"nodeType":"Return","src":"2441:19:6"}]}},{"expression":{"arguments":[{"id":714,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"2491:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":715,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"2505:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":716,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2528:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2534:7:6","memberName":"basefee","nodeType":"MemberAccess","src":"2528:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2505:36:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":713,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"2487:3:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2487:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":695,"id":720,"nodeType":"Return","src":"2480:62:6"}]}]},"id":723,"implemented":true,"kind":"function","modifiers":[],"name":"gasPrice","nameLocation":"2092:8:6","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"userOp","nameLocation":"2124:6:6","nodeType":"VariableDeclaration","scope":723,"src":"2101:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":690,"nodeType":"UserDefinedTypeName","pathNode":{"id":689,"name":"UserOperation","nameLocations":["2101:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"2101:13:6"},"referencedDeclaration":666,"src":"2101:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"2100:31:6"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":723,"src":"2155:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"2155:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2154:9:6"},"scope":836,"src":"2083:472:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":802,"nodeType":"Block","src":"2647:856:6","statements":[{"assignments":[732],"declarations":[{"constant":false,"id":732,"mutability":"mutable","name":"sender","nameLocation":"2665:6:6","nodeType":"VariableDeclaration","scope":802,"src":"2657:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"2657:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":736,"initialValue":{"arguments":[{"id":734,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2684:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":733,"name":"getSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2674:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$666_calldata_ptr_$returns$_t_address_$","typeString":"function (struct UserOperation calldata) pure returns (address)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2657:34:6"},{"assignments":[738],"declarations":[{"constant":false,"id":738,"mutability":"mutable","name":"nonce","nameLocation":"2709:5:6","nodeType":"VariableDeclaration","scope":802,"src":"2701:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":741,"initialValue":{"expression":{"id":739,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2717:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2724:5:6","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":647,"src":"2717:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2701:28:6"},{"assignments":[743],"declarations":[{"constant":false,"id":743,"mutability":"mutable","name":"hashInitCode","nameLocation":"2747:12:6","nodeType":"VariableDeclaration","scope":802,"src":"2739:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2739:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":748,"initialValue":{"arguments":[{"expression":{"id":745,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2777:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2784:8:6","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":649,"src":"2777:15:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":744,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"2762:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2762:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2739:54:6"},{"assignments":[750],"declarations":[{"constant":false,"id":750,"mutability":"mutable","name":"hashCallData","nameLocation":"2811:12:6","nodeType":"VariableDeclaration","scope":802,"src":"2803:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2803:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":755,"initialValue":{"arguments":[{"expression":{"id":752,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2841:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2848:8:6","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":651,"src":"2841:15:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":751,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"2826:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2826:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2803:54:6"},{"assignments":[757],"declarations":[{"constant":false,"id":757,"mutability":"mutable","name":"callGasLimit","nameLocation":"2875:12:6","nodeType":"VariableDeclaration","scope":802,"src":"2867:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"2867:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":760,"initialValue":{"expression":{"id":758,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2890:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2897:12:6","memberName":"callGasLimit","nodeType":"MemberAccess","referencedDeclaration":653,"src":"2890:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2867:42:6"},{"assignments":[762],"declarations":[{"constant":false,"id":762,"mutability":"mutable","name":"verificationGasLimit","nameLocation":"2927:20:6","nodeType":"VariableDeclaration","scope":802,"src":"2919:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":761,"name":"uint256","nodeType":"ElementaryTypeName","src":"2919:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":765,"initialValue":{"expression":{"id":763,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2950:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2957:20:6","memberName":"verificationGasLimit","nodeType":"MemberAccess","referencedDeclaration":655,"src":"2950:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2919:58:6"},{"assignments":[767],"declarations":[{"constant":false,"id":767,"mutability":"mutable","name":"preVerificationGas","nameLocation":"2995:18:6","nodeType":"VariableDeclaration","scope":802,"src":"2987:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":766,"name":"uint256","nodeType":"ElementaryTypeName","src":"2987:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":770,"initialValue":{"expression":{"id":768,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"3016:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:18:6","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":657,"src":"3016:25:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2987:54:6"},{"assignments":[772],"declarations":[{"constant":false,"id":772,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"3059:12:6","nodeType":"VariableDeclaration","scope":802,"src":"3051:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"3051:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":775,"initialValue":{"expression":{"id":773,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"3074:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3081:12:6","memberName":"maxFeePerGas","nodeType":"MemberAccess","referencedDeclaration":659,"src":"3074:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3051:42:6"},{"assignments":[777],"declarations":[{"constant":false,"id":777,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"3111:20:6","nodeType":"VariableDeclaration","scope":802,"src":"3103:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":776,"name":"uint256","nodeType":"ElementaryTypeName","src":"3103:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":780,"initialValue":{"expression":{"id":778,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"3134:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3141:20:6","memberName":"maxPriorityFeePerGas","nodeType":"MemberAccess","referencedDeclaration":661,"src":"3134:27:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3103:58:6"},{"assignments":[782],"declarations":[{"constant":false,"id":782,"mutability":"mutable","name":"hashPaymasterAndData","nameLocation":"3179:20:6","nodeType":"VariableDeclaration","scope":802,"src":"3171:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3171:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":787,"initialValue":{"arguments":[{"expression":{"id":784,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"3217:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3224:16:6","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":663,"src":"3217:23:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":783,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"3202:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3171:70:6"},{"expression":{"arguments":[{"id":790,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"3283:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":791,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"3291:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":792,"name":"hashInitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"3310:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":793,"name":"hashCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3324:12:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":794,"name":"callGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"3350:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":795,"name":"verificationGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"3364:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":796,"name":"preVerificationGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"3386:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":797,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"3418:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":798,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3432:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":799,"name":"hashPaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"3466:20:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":788,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3259:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3263:6:6","memberName":"encode","nodeType":"MemberAccess","src":"3259:10:6","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3259:237:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":730,"id":801,"nodeType":"Return","src":"3252:244:6"}]},"id":803,"implemented":true,"kind":"function","modifiers":[],"name":"pack","nameLocation":"2570:4:6","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"userOp","nameLocation":"2598:6:6","nodeType":"VariableDeclaration","scope":803,"src":"2575:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":725,"nodeType":"UserDefinedTypeName","pathNode":{"id":724,"name":"UserOperation","nameLocations":["2575:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"2575:13:6"},"referencedDeclaration":666,"src":"2575:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"2574:31:6"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"ret","nameLocation":"2642:3:6","nodeType":"VariableDeclaration","scope":803,"src":"2629:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":728,"name":"bytes","nodeType":"ElementaryTypeName","src":"2629:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2628:18:6"},"scope":836,"src":"2561:942:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":817,"nodeType":"Block","src":"3586:47:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":813,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"3618:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}],"id":812,"name":"pack","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"3613:4:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserOperation_$666_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct UserOperation calldata) pure returns (bytes memory)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3613:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":811,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3603:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3603:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":810,"id":816,"nodeType":"Return","src":"3596:30:6"}]},"id":818,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"3518:4:6","nodeType":"FunctionDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"userOp","nameLocation":"3546:6:6","nodeType":"VariableDeclaration","scope":818,"src":"3523:29:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":805,"nodeType":"UserDefinedTypeName","pathNode":{"id":804,"name":"UserOperation","nameLocations":["3523:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"3523:13:6"},"referencedDeclaration":666,"src":"3523:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"}],"src":"3522:31:6"},"returnParameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":818,"src":"3577:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3577:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3576:9:6"},"scope":836,"src":"3509:124:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":834,"nodeType":"Block","src":"3706:37:6","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"3723:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":828,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"3727:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3723:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":831,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"3735:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3723:13:6","trueExpression":{"id":830,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"3731:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":826,"id":833,"nodeType":"Return","src":"3716:20:6"}]},"id":835,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3648:3:6","nodeType":"FunctionDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"mutability":"mutable","name":"a","nameLocation":"3660:1:6","nodeType":"VariableDeclaration","scope":835,"src":"3652:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"3652:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":822,"mutability":"mutable","name":"b","nameLocation":"3671:1:6","nodeType":"VariableDeclaration","scope":835,"src":"3663:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":821,"name":"uint256","nodeType":"ElementaryTypeName","src":"3663:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3651:22:6"},"returnParameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":835,"src":"3697:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint256","nodeType":"ElementaryTypeName","src":"3697:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3696:9:6"},"scope":836,"src":"3639:104:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":837,"src":"1630:2115:6","usedErrors":[],"usedEvents":[]}],"src":"36:3710:6"},"id":6},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1646],"Ownable":[984]},"id":985,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":838,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":840,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":985,"sourceUnit":1647,"src":"128:45:7","symbolAliases":[{"foreign":{"id":839,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"136:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":842,"name":"Context","nameLocations":["692:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1646,"src":"692:7:7"},"id":843,"nodeType":"InheritanceSpecifier","src":"692:7:7"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"175:487:7","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":984,"linearizedBaseContracts":[984,1646],"name":"Ownable","nameLocation":"681:7:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":845,"mutability":"mutable","name":"_owner","nameLocation":"722:6:7","nodeType":"VariableDeclaration","scope":984,"src":"706:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"735:85:7","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":850,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:7","nodeType":"ErrorDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"account","nameLocation":"866:7:7","nodeType":"VariableDeclaration","scope":850,"src":"858:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:7"},"src":"825:50:7"},{"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"881:82:7","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":855,"name":"OwnableInvalidOwner","nameLocation":"974:19:7","nodeType":"ErrorDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"owner","nameLocation":"1002:5:7","nodeType":"VariableDeclaration","scope":855,"src":"994:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:7"},"src":"968:41:7"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":861,"name":"OwnershipTransferred","nameLocation":"1021:20:7","nodeType":"EventDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:7","nodeType":"VariableDeclaration","scope":861,"src":"1042:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:7","nodeType":"VariableDeclaration","scope":861,"src":"1073:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:7"},"src":"1015:84:7"},{"body":{"id":886,"nodeType":"Block","src":"1259:153:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":867,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"1273:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:7","typeDescriptions":{}}},"id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":881,"nodeType":"IfStatement","src":"1269:95:7","trueBody":{"id":880,"nodeType":"Block","src":"1301:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:7","typeDescriptions":{}}},"id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":873,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"1322:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":879,"nodeType":"RevertStatement","src":"1315:38:7"}]}},{"expression":{"arguments":[{"id":883,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"1392:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":882,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"1373:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":885,"nodeType":"ExpressionStatement","src":"1373:32:7"}]},"documentation":{"id":862,"nodeType":"StructuredDocumentation","src":"1105:115:7","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":887,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:7","nodeType":"VariableDeclaration","scope":887,"src":"1237:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:7"},"returnParameters":{"id":866,"nodeType":"ParameterList","parameters":[],"src":"1259:0:7"},"scope":984,"src":"1225:187:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":894,"nodeType":"Block","src":"1521:41:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":890,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"1531:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":892,"nodeType":"ExpressionStatement","src":"1531:13:7"},{"id":893,"nodeType":"PlaceholderStatement","src":"1554:1:7"}]},"documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"1418:77:7","text":" @dev Throws if called by any account other than the owner."},"id":895,"name":"onlyOwner","nameLocation":"1509:9:7","nodeType":"ModifierDefinition","parameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"1518:2:7"},"src":"1500:62:7","virtual":false,"visibility":"internal"},{"body":{"id":903,"nodeType":"Block","src":"1693:30:7","statements":[{"expression":{"id":901,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"1710:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":900,"id":902,"nodeType":"Return","src":"1703:13:7"}]},"documentation":{"id":896,"nodeType":"StructuredDocumentation","src":"1568:65:7","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":904,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:7","nodeType":"FunctionDefinition","parameters":{"id":897,"nodeType":"ParameterList","parameters":[],"src":"1652:2:7"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":904,"src":"1684:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:7"},"scope":984,"src":"1638:85:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":920,"nodeType":"Block","src":"1841:117:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":908,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"1855:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":910,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"1866:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":919,"nodeType":"IfStatement","src":"1851:101:7","trueBody":{"id":918,"nodeType":"Block","src":"1880:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":914,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"1928:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":913,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"1901:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":917,"nodeType":"RevertStatement","src":"1894:47:7"}]}}]},"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"1729:62:7","text":" @dev Throws if the sender is not the owner."},"id":921,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:7","nodeType":"FunctionDefinition","parameters":{"id":906,"nodeType":"ParameterList","parameters":[],"src":"1816:2:7"},"returnParameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"1841:0:7"},"scope":984,"src":"1796:162:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":934,"nodeType":"Block","src":"2347:47:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:7","typeDescriptions":{}}},"id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":927,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"2357:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"ExpressionStatement","src":"2357:30:7"}]},"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"1964:324:7","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":935,"implemented":true,"kind":"function","modifiers":[{"id":925,"kind":"modifierInvocation","modifierName":{"id":924,"name":"onlyOwner","nameLocations":["2337:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"2337:9:7"},"nodeType":"ModifierInvocation","src":"2337:9:7"}],"name":"renounceOwnership","nameLocation":"2302:17:7","nodeType":"FunctionDefinition","parameters":{"id":923,"nodeType":"ParameterList","parameters":[],"src":"2319:2:7"},"returnParameters":{"id":926,"nodeType":"ParameterList","parameters":[],"src":"2347:0:7"},"scope":984,"src":"2293:101:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":962,"nodeType":"Block","src":"2613:145:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":943,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"2627:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:7","typeDescriptions":{}}},"id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":957,"nodeType":"IfStatement","src":"2623:91:7","trueBody":{"id":956,"nodeType":"Block","src":"2651:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:7","typeDescriptions":{}}},"id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":949,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"2672:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":955,"nodeType":"RevertStatement","src":"2665:38:7"}]}},{"expression":{"arguments":[{"id":959,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"2742:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":958,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"2723:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":961,"nodeType":"ExpressionStatement","src":"2723:28:7"}]},"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"2400:138:7","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":963,"implemented":true,"kind":"function","modifiers":[{"id":941,"kind":"modifierInvocation","modifierName":{"id":940,"name":"onlyOwner","nameLocations":["2603:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"2603:9:7"},"nodeType":"ModifierInvocation","src":"2603:9:7"}],"name":"transferOwnership","nameLocation":"2552:17:7","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:7","nodeType":"VariableDeclaration","scope":963,"src":"2570:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:7"},"returnParameters":{"id":942,"nodeType":"ParameterList","parameters":[],"src":"2613:0:7"},"scope":984,"src":"2543:215:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":982,"nodeType":"Block","src":"2975:124:7","statements":[{"assignments":[970],"declarations":[{"constant":false,"id":970,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:7","nodeType":"VariableDeclaration","scope":982,"src":"2985:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":972,"initialValue":{"id":971,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"3004:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:7"},{"expression":{"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":973,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"3020:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":974,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"3029:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":976,"nodeType":"ExpressionStatement","src":"3020:17:7"},{"eventCall":{"arguments":[{"id":978,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"3073:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":979,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"3083:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":977,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"3052:20:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":981,"nodeType":"EmitStatement","src":"3047:45:7"}]},"documentation":{"id":964,"nodeType":"StructuredDocumentation","src":"2764:143:7","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":983,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:7","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":966,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:7","nodeType":"VariableDeclaration","scope":983,"src":"2940:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":965,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:7"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[],"src":"2975:0:7"},"scope":984,"src":"2912:187:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":985,"src":"663:2438:7","usedErrors":[850,855],"usedEvents":[861]}],"src":"102:3000:7"},"id":7},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[1066],"IERC165":[3546],"IERC20":[1152]},"id":1067,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":986,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:8"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":988,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1067,"sourceUnit":1075,"src":"133:36:8","symbolAliases":[{"foreign":{"id":987,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"141:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":990,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1067,"sourceUnit":1071,"src":"170:38:8","symbolAliases":[{"foreign":{"id":989,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"178:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":992,"name":"IERC20","nameLocations":["590:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"590:6:8"},"id":993,"nodeType":"InheritanceSpecifier","src":"590:6:8"},{"baseName":{"id":994,"name":"IERC165","nameLocations":["598:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":3546,"src":"598:7:8"},"id":995,"nodeType":"InheritanceSpecifier","src":"598:7:8"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":991,"nodeType":"StructuredDocumentation","src":"210:357:8","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":1066,"linearizedBaseContracts":[1066,3546,1152],"name":"IERC1363","nameLocation":"578:8:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"1148:370:8","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":1005,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:8","nodeType":"FunctionDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"to","nameLocation":"1556:2:8","nodeType":"VariableDeclaration","scope":1005,"src":"1548:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"value","nameLocation":"1568:5:8","nodeType":"VariableDeclaration","scope":1005,"src":"1560:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:8"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1005,"src":"1593:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1002,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:8"},"scope":1066,"src":"1523:76:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"1605:453:8","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":1017,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:8","nodeType":"FunctionDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"to","nameLocation":"2096:2:8","nodeType":"VariableDeclaration","scope":1017,"src":"2088:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"value","nameLocation":"2108:5:8","nodeType":"VariableDeclaration","scope":1017,"src":"2100:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"data","nameLocation":"2130:4:8","nodeType":"VariableDeclaration","scope":1017,"src":"2115:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1011,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:8"},"returnParameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1017,"src":"2154:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1014,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:8"},"scope":1066,"src":"2063:97:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1018,"nodeType":"StructuredDocumentation","src":"2166:453:8","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":1029,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:8","nodeType":"FunctionDefinition","parameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1020,"mutability":"mutable","name":"from","nameLocation":"2661:4:8","nodeType":"VariableDeclaration","scope":1029,"src":"2653:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1022,"mutability":"mutable","name":"to","nameLocation":"2675:2:8","nodeType":"VariableDeclaration","scope":1029,"src":"2667:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1024,"mutability":"mutable","name":"value","nameLocation":"2687:5:8","nodeType":"VariableDeclaration","scope":1029,"src":"2679:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:8"},"returnParameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1029,"src":"2712:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1026,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:8"},"scope":1066,"src":"2624:94:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1030,"nodeType":"StructuredDocumentation","src":"2724:536:8","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":1043,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:8","nodeType":"FunctionDefinition","parameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"from","nameLocation":"3302:4:8","nodeType":"VariableDeclaration","scope":1043,"src":"3294:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"to","nameLocation":"3316:2:8","nodeType":"VariableDeclaration","scope":1043,"src":"3308:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"value","nameLocation":"3328:5:8","nodeType":"VariableDeclaration","scope":1043,"src":"3320:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1038,"mutability":"mutable","name":"data","nameLocation":"3350:4:8","nodeType":"VariableDeclaration","scope":1043,"src":"3335:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1037,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:8"},"returnParameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1043,"src":"3374:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1040,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:8"},"scope":1066,"src":"3265:115:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1044,"nodeType":"StructuredDocumentation","src":"3386:390:8","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":1053,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:8","nodeType":"FunctionDefinition","parameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"spender","nameLocation":"3813:7:8","nodeType":"VariableDeclaration","scope":1053,"src":"3805:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"value","nameLocation":"3830:5:8","nodeType":"VariableDeclaration","scope":1053,"src":"3822:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1047,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:8"},"returnParameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1053,"src":"3855:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1050,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:8"},"scope":1066,"src":"3781:80:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"3867:478:8","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":1065,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:8","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"spender","nameLocation":"4382:7:8","nodeType":"VariableDeclaration","scope":1065,"src":"4374:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"value","nameLocation":"4399:5:8","nodeType":"VariableDeclaration","scope":1065,"src":"4391:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1057,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"data","nameLocation":"4421:4:8","nodeType":"VariableDeclaration","scope":1065,"src":"4406:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1059,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:8"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1065,"src":"4445:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1062,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:8"},"scope":1066,"src":"4350:101:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1067,"src":"568:3885:8","usedErrors":[],"usedEvents":[1086,1095]}],"src":"107:4347:8"},"id":8},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3546]},"id":1071,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1068,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":1070,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1071,"sourceUnit":3547,"src":"132:59:9","symbolAliases":[{"foreign":{"id":1069,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"140:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:9"},"id":9},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[1152]},"id":1075,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1072,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":1074,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1075,"sourceUnit":1153,"src":"131:49:10","symbolAliases":[{"foreign":{"id":1073,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"139:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:10"},"id":10},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1152]},"id":1153,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1076,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"132:71:11","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1152,"linearizedBaseContracts":[1152],"name":"IERC20","nameLocation":"214:6:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"227:158:11","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1086,"name":"Transfer","nameLocation":"396:8:11","nodeType":"EventDefinition","parameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:11","nodeType":"VariableDeclaration","scope":1086,"src":"405:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1079,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1082,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:11","nodeType":"VariableDeclaration","scope":1086,"src":"427:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1084,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:11","nodeType":"VariableDeclaration","scope":1086,"src":"447:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:11"},"src":"390:72:11"},{"anonymous":false,"documentation":{"id":1087,"nodeType":"StructuredDocumentation","src":"468:148:11","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1095,"name":"Approval","nameLocation":"627:8:11","nodeType":"EventDefinition","parameters":{"id":1094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:11","nodeType":"VariableDeclaration","scope":1095,"src":"636:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1091,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:11","nodeType":"VariableDeclaration","scope":1095,"src":"659:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1093,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:11","nodeType":"VariableDeclaration","scope":1095,"src":"684:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1092,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:11"},"src":"621:78:11"},{"documentation":{"id":1096,"nodeType":"StructuredDocumentation","src":"705:65:11","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1101,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:11","nodeType":"FunctionDefinition","parameters":{"id":1097,"nodeType":"ParameterList","parameters":[],"src":"795:2:11"},"returnParameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1101,"src":"821:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1098,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:11"},"scope":1152,"src":"775:55:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1102,"nodeType":"StructuredDocumentation","src":"836:71:11","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1109,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:11","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"account","nameLocation":"939:7:11","nodeType":"VariableDeclaration","scope":1109,"src":"931:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:11"},"returnParameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1109,"src":"971:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:11"},"scope":1152,"src":"912:68:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"986:213:11","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1119,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:11","nodeType":"FunctionDefinition","parameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"to","nameLocation":"1230:2:11","nodeType":"VariableDeclaration","scope":1119,"src":"1222:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1111,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1114,"mutability":"mutable","name":"value","nameLocation":"1242:5:11","nodeType":"VariableDeclaration","scope":1119,"src":"1234:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1113,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:11"},"returnParameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1119,"src":"1267:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1116,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:11"},"scope":1152,"src":"1204:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"1279:264:11","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1129,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:11","nodeType":"FunctionDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"owner","nameLocation":"1575:5:11","nodeType":"VariableDeclaration","scope":1129,"src":"1567:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"spender","nameLocation":"1590:7:11","nodeType":"VariableDeclaration","scope":1129,"src":"1582:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:11"},"returnParameters":{"id":1128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1129,"src":"1622:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:11"},"scope":1152,"src":"1548:83:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"1637:667:11","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1139,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:11","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"spender","nameLocation":"2334:7:11","nodeType":"VariableDeclaration","scope":1139,"src":"2326:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"value","nameLocation":"2351:5:11","nodeType":"VariableDeclaration","scope":1139,"src":"2343:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:11"},"returnParameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1139,"src":"2376:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1136,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:11"},"scope":1152,"src":"2309:73:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"2388:297:11","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1151,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:11","nodeType":"FunctionDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"from","nameLocation":"2720:4:11","nodeType":"VariableDeclaration","scope":1151,"src":"2712:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"to","nameLocation":"2734:2:11","nodeType":"VariableDeclaration","scope":1151,"src":"2726:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"value","nameLocation":"2746:5:11","nodeType":"VariableDeclaration","scope":1151,"src":"2738:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:11"},"returnParameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1151,"src":"2771:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1148,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:11"},"scope":1152,"src":"2690:87:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1153,"src":"204:2575:11","usedErrors":[],"usedEvents":[1086,1095]}],"src":"106:2674:11"},"id":11},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[1066],"IERC20":[1152],"SafeERC20":[1616]},"id":1617,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1154,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1156,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1617,"sourceUnit":1153,"src":"141:37:12","symbolAliases":[{"foreign":{"id":1155,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"149:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":1158,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1617,"sourceUnit":1067,"src":"179:58:12","symbolAliases":[{"foreign":{"id":1157,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1066,"src":"187:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1159,"nodeType":"StructuredDocumentation","src":"239:458:12","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1616,"linearizedBaseContracts":[1616],"name":"SafeERC20","nameLocation":"706:9:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"722:65:12","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":1164,"name":"SafeERC20FailedOperation","nameLocation":"798:24:12","nodeType":"ErrorDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"token","nameLocation":"831:5:12","nodeType":"VariableDeclaration","scope":1164,"src":"823:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:12"},"src":"792:46:12"},{"documentation":{"id":1165,"nodeType":"StructuredDocumentation","src":"844:71:12","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1173,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:12","nodeType":"ErrorDefinition","parameters":{"id":1172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"spender","nameLocation":"967:7:12","nodeType":"VariableDeclaration","scope":1173,"src":"959:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1169,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:12","nodeType":"VariableDeclaration","scope":1173,"src":"976:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1171,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:12","nodeType":"VariableDeclaration","scope":1173,"src":"1002:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:12"},"src":"920:109:12"},{"body":{"id":1196,"nodeType":"Block","src":"1291:88:12","statements":[{"expression":{"arguments":[{"id":1185,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"1321:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1188,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"1343:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:12","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1119,"src":"1343:14:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1190,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"1360:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"1364:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1186,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:12","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1184,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"1301:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1152_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1195,"nodeType":"ExpressionStatement","src":"1301:71:12"}]},"documentation":{"id":1174,"nodeType":"StructuredDocumentation","src":"1035:179:12","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1197,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:12","nodeType":"FunctionDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"token","nameLocation":"1248:5:12","nodeType":"VariableDeclaration","scope":1197,"src":"1241:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},"typeName":{"id":1176,"nodeType":"UserDefinedTypeName","pathNode":{"id":1175,"name":"IERC20","nameLocations":["1241:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"1241:6:12"},"referencedDeclaration":1152,"src":"1241:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"to","nameLocation":"1263:2:12","nodeType":"VariableDeclaration","scope":1197,"src":"1255:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"value","nameLocation":"1275:5:12","nodeType":"VariableDeclaration","scope":1197,"src":"1267:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:12"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[],"src":"1291:0:12"},"scope":1616,"src":"1219:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1223,"nodeType":"Block","src":"1708:98:12","statements":[{"expression":{"arguments":[{"id":1211,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"1738:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1214,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"1760:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:12","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1151,"src":"1760:18:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1216,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"1781:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1217,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"1787:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"1791:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1212,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:12","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1210,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"1718:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1152_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1222,"nodeType":"ExpressionStatement","src":"1718:81:12"}]},"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"1385:228:12","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1224,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:12","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"token","nameLocation":"1651:5:12","nodeType":"VariableDeclaration","scope":1224,"src":"1644:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},"typeName":{"id":1200,"nodeType":"UserDefinedTypeName","pathNode":{"id":1199,"name":"IERC20","nameLocations":["1644:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"1644:6:12"},"referencedDeclaration":1152,"src":"1644:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"from","nameLocation":"1666:4:12","nodeType":"VariableDeclaration","scope":1224,"src":"1658:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1205,"mutability":"mutable","name":"to","nameLocation":"1680:2:12","nodeType":"VariableDeclaration","scope":1224,"src":"1672:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1207,"mutability":"mutable","name":"value","nameLocation":"1692:5:12","nodeType":"VariableDeclaration","scope":1224,"src":"1684:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:12"},"returnParameters":{"id":1209,"nodeType":"ParameterList","parameters":[],"src":"1708:0:12"},"scope":1616,"src":"1618:188:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1249,"nodeType":"Block","src":"2033:99:12","statements":[{"expression":{"arguments":[{"id":1238,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"2074:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1241,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"2096:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:12","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1119,"src":"2096:14:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1243,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"2113:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"2117:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1245,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1239,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:12","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1237,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"2050:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1152_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1236,"id":1248,"nodeType":"Return","src":"2043:82:12"}]},"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"1812:126:12","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":1250,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:12","nodeType":"FunctionDefinition","parameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"token","nameLocation":"1975:5:12","nodeType":"VariableDeclaration","scope":1250,"src":"1968:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},"typeName":{"id":1227,"nodeType":"UserDefinedTypeName","pathNode":{"id":1226,"name":"IERC20","nameLocations":["1968:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"1968:6:12"},"referencedDeclaration":1152,"src":"1968:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1230,"mutability":"mutable","name":"to","nameLocation":"1990:2:12","nodeType":"VariableDeclaration","scope":1250,"src":"1982:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1229,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1232,"mutability":"mutable","name":"value","nameLocation":"2002:5:12","nodeType":"VariableDeclaration","scope":1250,"src":"1994:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:12"},"returnParameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1250,"src":"2027:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1234,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:12"},"scope":1616,"src":"1943:189:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1278,"nodeType":"Block","src":"2381:109:12","statements":[{"expression":{"arguments":[{"id":1266,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"2422:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1269,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1254,"src":"2444:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:12","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1151,"src":"2444:18:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1271,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"2465:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1272,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"2471:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"2475:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1274,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1267,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:12","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1265,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"2398:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1152_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1264,"id":1277,"nodeType":"Return","src":"2391:92:12"}]},"documentation":{"id":1251,"nodeType":"StructuredDocumentation","src":"2138:130:12","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":1279,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:12","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"token","nameLocation":"2309:5:12","nodeType":"VariableDeclaration","scope":1279,"src":"2302:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},"typeName":{"id":1253,"nodeType":"UserDefinedTypeName","pathNode":{"id":1252,"name":"IERC20","nameLocations":["2302:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"2302:6:12"},"referencedDeclaration":1152,"src":"2302:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"from","nameLocation":"2324:4:12","nodeType":"VariableDeclaration","scope":1279,"src":"2316:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"to","nameLocation":"2338:2:12","nodeType":"VariableDeclaration","scope":1279,"src":"2330:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1257,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1260,"mutability":"mutable","name":"value","nameLocation":"2350:5:12","nodeType":"VariableDeclaration","scope":1279,"src":"2342:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:12"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1279,"src":"2375:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1262,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:12"},"scope":1616,"src":"2273:217:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1309,"nodeType":"Block","src":"3232:139:12","statements":[{"assignments":[1291],"declarations":[{"constant":false,"id":1291,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:12","nodeType":"VariableDeclaration","scope":1309,"src":"3242:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1300,"initialValue":{"arguments":[{"arguments":[{"id":1296,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1616","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1616","typeString":"library SafeERC20"}],"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1294,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:12","typeDescriptions":{}}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1298,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"3296:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1292,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"3265:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:12","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1129,"src":"3265:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:12"},{"expression":{"arguments":[{"id":1302,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"3327:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},{"id":1303,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"3334:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1304,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"3343:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"3358:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1301,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"3314:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1152_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1308,"nodeType":"ExpressionStatement","src":"3314:50:12"}]},"documentation":{"id":1280,"nodeType":"StructuredDocumentation","src":"2496:645:12","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1310,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:12","nodeType":"FunctionDefinition","parameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"token","nameLocation":"3184:5:12","nodeType":"VariableDeclaration","scope":1310,"src":"3177:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},"typeName":{"id":1282,"nodeType":"UserDefinedTypeName","pathNode":{"id":1281,"name":"IERC20","nameLocations":["3177:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"3177:6:12"},"referencedDeclaration":1152,"src":"3177:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1285,"mutability":"mutable","name":"spender","nameLocation":"3199:7:12","nodeType":"VariableDeclaration","scope":1310,"src":"3191:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1284,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1287,"mutability":"mutable","name":"value","nameLocation":"3216:5:12","nodeType":"VariableDeclaration","scope":1310,"src":"3208:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:12"},"returnParameters":{"id":1289,"nodeType":"ParameterList","parameters":[],"src":"3232:0:12"},"scope":1616,"src":"3146:225:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1352,"nodeType":"Block","src":"4137:370:12","statements":[{"id":1351,"nodeType":"UncheckedBlock","src":"4147:354:12","statements":[{"assignments":[1322],"declarations":[{"constant":false,"id":1322,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:12","nodeType":"VariableDeclaration","scope":1351,"src":"4171:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1331,"initialValue":{"arguments":[{"arguments":[{"id":1327,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1616","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1616","typeString":"library SafeERC20"}],"id":1326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:12","typeDescriptions":{}}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1329,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"4229:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1323,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"4198:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:12","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1129,"src":"4198:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1332,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"4255:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1333,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"4274:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1342,"nodeType":"IfStatement","src":"4251:160:12","trueBody":{"id":1341,"nodeType":"Block","src":"4293:118:12","statements":[{"errorCall":{"arguments":[{"id":1336,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"4351:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1337,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"4360:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1338,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"4378:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1335,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1173,"src":"4318:32:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1340,"nodeType":"RevertStatement","src":"4311:85:12"}]}},{"expression":{"arguments":[{"id":1344,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"4437:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},{"id":1345,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1316,"src":"4444:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1346,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"4453:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1347,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"4472:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1343,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"4424:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1152_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1350,"nodeType":"ExpressionStatement","src":"4424:66:12"}]}]},"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"3377:657:12","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1353,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:12","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1314,"mutability":"mutable","name":"token","nameLocation":"4077:5:12","nodeType":"VariableDeclaration","scope":1353,"src":"4070:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},"typeName":{"id":1313,"nodeType":"UserDefinedTypeName","pathNode":{"id":1312,"name":"IERC20","nameLocations":["4070:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"4070:6:12"},"referencedDeclaration":1152,"src":"4070:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1316,"mutability":"mutable","name":"spender","nameLocation":"4092:7:12","nodeType":"VariableDeclaration","scope":1353,"src":"4084:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:12","nodeType":"VariableDeclaration","scope":1353,"src":"4101:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:12"},"returnParameters":{"id":1320,"nodeType":"ParameterList","parameters":[],"src":"4137:0:12"},"scope":1616,"src":"4039:468:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1399,"nodeType":"Block","src":"5161:303:12","statements":[{"assignments":[1365],"declarations":[{"constant":false,"id":1365,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:12","nodeType":"VariableDeclaration","scope":1399,"src":"5171:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1364,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1374,"initialValue":{"arguments":[{"expression":{"id":1368,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"5214:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:12","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1139,"src":"5214:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1370,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"5230:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"5239:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1366,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:12","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:12"},{"condition":{"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:12","subExpression":{"arguments":[{"id":1376,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"5286:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},{"id":1377,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"5293:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1375,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"5262:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1152_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1398,"nodeType":"IfStatement","src":"5257:201:12","trueBody":{"id":1397,"nodeType":"Block","src":"5308:150:12","statements":[{"expression":{"arguments":[{"id":1381,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"5342:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1384,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"5364:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:12","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1139,"src":"5364:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1386,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"5380:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1382,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:12","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1380,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"5322:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1152_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1391,"nodeType":"ExpressionStatement","src":"5322:71:12"},{"expression":{"arguments":[{"id":1393,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"5427:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},{"id":1394,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"5434:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1392,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"5407:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1152_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1396,"nodeType":"ExpressionStatement","src":"5407:40:12"}]}}]},"documentation":{"id":1354,"nodeType":"StructuredDocumentation","src":"4513:566:12","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":1400,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:12","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"token","nameLocation":"5113:5:12","nodeType":"VariableDeclaration","scope":1400,"src":"5106:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},"typeName":{"id":1356,"nodeType":"UserDefinedTypeName","pathNode":{"id":1355,"name":"IERC20","nameLocations":["5106:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"5106:6:12"},"referencedDeclaration":1152,"src":"5106:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"spender","nameLocation":"5128:7:12","nodeType":"VariableDeclaration","scope":1400,"src":"5120:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"value","nameLocation":"5145:5:12","nodeType":"VariableDeclaration","scope":1400,"src":"5137:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1360,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:12"},"returnParameters":{"id":1363,"nodeType":"ParameterList","parameters":[],"src":"5161:0:12"},"scope":1616,"src":"5084:380:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1442,"nodeType":"Block","src":"5911:219:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1413,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"5925:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:12","memberName":"code","nodeType":"MemberAccess","src":"5925:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:12","memberName":"length","nodeType":"MemberAccess","src":"5925:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:12","subExpression":{"arguments":[{"id":1427,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"6034:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"6038:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1429,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"6045:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1425,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"6012:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:12","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":1017,"src":"6012:21:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1440,"nodeType":"IfStatement","src":"6007:117:12","trueBody":{"id":1439,"nodeType":"Block","src":"6052:72:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1435,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"6106:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"}],"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1433,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:12","typeDescriptions":{}}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1432,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"6073:24:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1438,"nodeType":"RevertStatement","src":"6066:47:12"}]}},"id":1441,"nodeType":"IfStatement","src":"5921:203:12","trueBody":{"id":1424,"nodeType":"Block","src":"5946:55:12","statements":[{"expression":{"arguments":[{"id":1419,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"5973:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"}},{"id":1420,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"5980:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"5984:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1418,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"5960:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1152_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1423,"nodeType":"ExpressionStatement","src":"5960:30:12"}]}}]},"documentation":{"id":1401,"nodeType":"StructuredDocumentation","src":"5470:333:12","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1443,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:12","nodeType":"FunctionDefinition","parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"token","nameLocation":"5849:5:12","nodeType":"VariableDeclaration","scope":1443,"src":"5840:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"},"typeName":{"id":1403,"nodeType":"UserDefinedTypeName","pathNode":{"id":1402,"name":"IERC1363","nameLocations":["5840:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"5840:8:12"},"referencedDeclaration":1066,"src":"5840:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1406,"mutability":"mutable","name":"to","nameLocation":"5864:2:12","nodeType":"VariableDeclaration","scope":1443,"src":"5856:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1408,"mutability":"mutable","name":"value","nameLocation":"5876:5:12","nodeType":"VariableDeclaration","scope":1443,"src":"5868:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1407,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"data","nameLocation":"5896:4:12","nodeType":"VariableDeclaration","scope":1443,"src":"5883:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1409,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:12"},"returnParameters":{"id":1412,"nodeType":"ParameterList","parameters":[],"src":"5911:0:12"},"scope":1616,"src":"5808:322:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1489,"nodeType":"Block","src":"6649:239:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1458,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"6663:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:12","memberName":"code","nodeType":"MemberAccess","src":"6663:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:12","memberName":"length","nodeType":"MemberAccess","src":"6663:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:12","subExpression":{"arguments":[{"id":1473,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"6786:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1474,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"6792:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"6796:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1476,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"6803:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1471,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"6760:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:12","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":1043,"src":"6760:25:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1487,"nodeType":"IfStatement","src":"6755:127:12","trueBody":{"id":1486,"nodeType":"Block","src":"6810:72:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1482,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"6864:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"}],"id":1481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1480,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:12","typeDescriptions":{}}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1479,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"6831:24:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1485,"nodeType":"RevertStatement","src":"6824:47:12"}]}},"id":1488,"nodeType":"IfStatement","src":"6659:223:12","trueBody":{"id":1470,"nodeType":"Block","src":"6684:65:12","statements":[{"expression":{"arguments":[{"id":1464,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"6715:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"}},{"id":1465,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"6722:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1466,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"6728:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"6732:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1463,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"6698:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1152_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1469,"nodeType":"ExpressionStatement","src":"6698:40:12"}]}}]},"documentation":{"id":1444,"nodeType":"StructuredDocumentation","src":"6136:341:12","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:12","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"token","nameLocation":"6536:5:12","nodeType":"VariableDeclaration","scope":1490,"src":"6527:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"},"typeName":{"id":1446,"nodeType":"UserDefinedTypeName","pathNode":{"id":1445,"name":"IERC1363","nameLocations":["6527:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"6527:8:12"},"referencedDeclaration":1066,"src":"6527:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1449,"mutability":"mutable","name":"from","nameLocation":"6559:4:12","nodeType":"VariableDeclaration","scope":1490,"src":"6551:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1448,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"to","nameLocation":"6581:2:12","nodeType":"VariableDeclaration","scope":1490,"src":"6573:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1450,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"value","nameLocation":"6601:5:12","nodeType":"VariableDeclaration","scope":1490,"src":"6593:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1455,"mutability":"mutable","name":"data","nameLocation":"6629:4:12","nodeType":"VariableDeclaration","scope":1490,"src":"6616:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1454,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:12"},"returnParameters":{"id":1457,"nodeType":"ParameterList","parameters":[],"src":"6649:0:12"},"scope":1616,"src":"6482:406:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1532,"nodeType":"Block","src":"7655:218:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1503,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"7669:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:12","memberName":"code","nodeType":"MemberAccess","src":"7669:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:12","memberName":"length","nodeType":"MemberAccess","src":"7669:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:12","subExpression":{"arguments":[{"id":1517,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"7777:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"7781:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1519,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"7788:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1515,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"7756:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:12","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"7756:20:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1530,"nodeType":"IfStatement","src":"7751:116:12","trueBody":{"id":1529,"nodeType":"Block","src":"7795:72:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1525,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"7849:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"}],"id":1524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1523,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:12","typeDescriptions":{}}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1522,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"7816:24:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1528,"nodeType":"RevertStatement","src":"7809:47:12"}]}},"id":1531,"nodeType":"IfStatement","src":"7665:202:12","trueBody":{"id":1514,"nodeType":"Block","src":"7690:55:12","statements":[{"expression":{"arguments":[{"id":1509,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"7717:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"}},{"id":1510,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"7724:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"7728:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1508,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"7704:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1152_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1513,"nodeType":"ExpressionStatement","src":"7704:30:12"}]}}]},"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"6894:654:12","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":1533,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:12","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"token","nameLocation":"7593:5:12","nodeType":"VariableDeclaration","scope":1533,"src":"7584:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"},"typeName":{"id":1493,"nodeType":"UserDefinedTypeName","pathNode":{"id":1492,"name":"IERC1363","nameLocations":["7584:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":1066,"src":"7584:8:12"},"referencedDeclaration":1066,"src":"7584:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$1066","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"to","nameLocation":"7608:2:12","nodeType":"VariableDeclaration","scope":1533,"src":"7600:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1495,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1498,"mutability":"mutable","name":"value","nameLocation":"7620:5:12","nodeType":"VariableDeclaration","scope":1533,"src":"7612:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1500,"mutability":"mutable","name":"data","nameLocation":"7640:4:12","nodeType":"VariableDeclaration","scope":1533,"src":"7627:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1499,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:12"},"returnParameters":{"id":1502,"nodeType":"ParameterList","parameters":[],"src":"7655:0:12"},"scope":1616,"src":"7553:320:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1573,"nodeType":"Block","src":"8440:650:12","statements":[{"assignments":[1543],"declarations":[{"constant":false,"id":1543,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:12","nodeType":"VariableDeclaration","scope":1573,"src":"8450:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1544,"nodeType":"VariableDeclarationStatement","src":"8450:18:12"},{"assignments":[1546],"declarations":[{"constant":false,"id":1546,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:12","nodeType":"VariableDeclaration","scope":1573,"src":"8478:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1545,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1547,"nodeType":"VariableDeclarationStatement","src":"8478:19:12"},{"AST":{"nodeType":"YulBlock","src":"8532:396:12","statements":[{"nodeType":"YulVariableDeclaration","src":"8546:75:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"8566:3:12"},"nodeType":"YulFunctionCall","src":"8566:5:12"},{"name":"token","nodeType":"YulIdentifier","src":"8573:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"8580:1:12","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8587:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"8593:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8583:3:12"},"nodeType":"YulFunctionCall","src":"8583:15:12"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8606:4:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8600:5:12"},"nodeType":"YulFunctionCall","src":"8600:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"8613:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8616:4:12","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"8561:4:12"},"nodeType":"YulFunctionCall","src":"8561:60:12"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"8550:7:12","type":""}]},{"body":{"nodeType":"YulBlock","src":"8682:157:12","statements":[{"nodeType":"YulVariableDeclaration","src":"8700:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8717:4:12","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8711:5:12"},"nodeType":"YulFunctionCall","src":"8711:11:12"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8704:3:12","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8754:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"8759:1:12","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8762:14:12"},"nodeType":"YulFunctionCall","src":"8762:16:12"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"8739:14:12"},"nodeType":"YulFunctionCall","src":"8739:40:12"},"nodeType":"YulExpressionStatement","src":"8739:40:12"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8803:3:12"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8808:14:12"},"nodeType":"YulFunctionCall","src":"8808:16:12"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8796:6:12"},"nodeType":"YulFunctionCall","src":"8796:29:12"},"nodeType":"YulExpressionStatement","src":"8796:29:12"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"8673:7:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8666:6:12"},"nodeType":"YulFunctionCall","src":"8666:15:12"},"nodeType":"YulIf","src":"8663:176:12"},{"nodeType":"YulAssignment","src":"8852:30:12","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8866:14:12"},"nodeType":"YulFunctionCall","src":"8866:16:12"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"8852:10:12"}]},{"nodeType":"YulAssignment","src":"8895:23:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8916:1:12","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8910:5:12"},"nodeType":"YulFunctionCall","src":"8910:8:12"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"8895:11:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1539,"isOffset":false,"isSlot":false,"src":"8587:4:12","valueSize":1},{"declaration":1539,"isOffset":false,"isSlot":false,"src":"8606:4:12","valueSize":1},{"declaration":1543,"isOffset":false,"isSlot":false,"src":"8852:10:12","valueSize":1},{"declaration":1546,"isOffset":false,"isSlot":false,"src":"8895:11:12","valueSize":1},{"declaration":1537,"isOffset":false,"isSlot":false,"src":"8573:5:12","valueSize":1}],"flags":["memory-safe"],"id":1548,"nodeType":"InlineAssembly","src":"8507:421:12"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1549,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"8942:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1560,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"8994:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:12","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1554,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"8968:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}],"id":1553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1552,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:12","typeDescriptions":{}}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:12","memberName":"code","nodeType":"MemberAccess","src":"8960:19:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:12","memberName":"length","nodeType":"MemberAccess","src":"8960:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1572,"nodeType":"IfStatement","src":"8938:146:12","trueBody":{"id":1571,"nodeType":"Block","src":"9012:72:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1567,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"9066:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}],"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1565,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:12","typeDescriptions":{}}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1564,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"9033:24:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1570,"nodeType":"RevertStatement","src":"9026:47:12"}]}}]},"documentation":{"id":1534,"nodeType":"StructuredDocumentation","src":"7879:486:12","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":1574,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:12","nodeType":"FunctionDefinition","parameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1537,"mutability":"mutable","name":"token","nameLocation":"8406:5:12","nodeType":"VariableDeclaration","scope":1574,"src":"8399:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},"typeName":{"id":1536,"nodeType":"UserDefinedTypeName","pathNode":{"id":1535,"name":"IERC20","nameLocations":["8399:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"8399:6:12"},"referencedDeclaration":1152,"src":"8399:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1539,"mutability":"mutable","name":"data","nameLocation":"8426:4:12","nodeType":"VariableDeclaration","scope":1574,"src":"8413:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1538,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:12"},"returnParameters":{"id":1541,"nodeType":"ParameterList","parameters":[],"src":"8440:0:12"},"scope":1616,"src":"8370:720:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1614,"nodeType":"Block","src":"9681:391:12","statements":[{"assignments":[1586],"declarations":[{"constant":false,"id":1586,"mutability":"mutable","name":"success","nameLocation":"9696:7:12","nodeType":"VariableDeclaration","scope":1614,"src":"9691:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1585,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1587,"nodeType":"VariableDeclarationStatement","src":"9691:12:12"},{"assignments":[1589],"declarations":[{"constant":false,"id":1589,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:12","nodeType":"VariableDeclaration","scope":1614,"src":"9713:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1590,"nodeType":"VariableDeclarationStatement","src":"9713:18:12"},{"assignments":[1592],"declarations":[{"constant":false,"id":1592,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:12","nodeType":"VariableDeclaration","scope":1614,"src":"9741:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1591,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1593,"nodeType":"VariableDeclarationStatement","src":"9741:19:12"},{"AST":{"nodeType":"YulBlock","src":"9795:174:12","statements":[{"nodeType":"YulAssignment","src":"9809:71:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"9825:3:12"},"nodeType":"YulFunctionCall","src":"9825:5:12"},{"name":"token","nodeType":"YulIdentifier","src":"9832:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"9839:1:12","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9846:4:12"},{"kind":"number","nodeType":"YulLiteral","src":"9852:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9842:3:12"},"nodeType":"YulFunctionCall","src":"9842:15:12"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9865:4:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9859:5:12"},"nodeType":"YulFunctionCall","src":"9859:11:12"},{"kind":"number","nodeType":"YulLiteral","src":"9872:1:12","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9875:4:12","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"9820:4:12"},"nodeType":"YulFunctionCall","src":"9820:60:12"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"9809:7:12"}]},{"nodeType":"YulAssignment","src":"9893:30:12","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"9907:14:12"},"nodeType":"YulFunctionCall","src":"9907:16:12"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"9893:10:12"}]},{"nodeType":"YulAssignment","src":"9936:23:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9957:1:12","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9951:5:12"},"nodeType":"YulFunctionCall","src":"9951:8:12"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"9936:11:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1580,"isOffset":false,"isSlot":false,"src":"9846:4:12","valueSize":1},{"declaration":1580,"isOffset":false,"isSlot":false,"src":"9865:4:12","valueSize":1},{"declaration":1589,"isOffset":false,"isSlot":false,"src":"9893:10:12","valueSize":1},{"declaration":1592,"isOffset":false,"isSlot":false,"src":"9936:11:12","valueSize":1},{"declaration":1586,"isOffset":false,"isSlot":false,"src":"9809:7:12","valueSize":1},{"declaration":1578,"isOffset":false,"isSlot":false,"src":"9832:5:12","valueSize":1}],"flags":["memory-safe"],"id":1594,"nodeType":"InlineAssembly","src":"9770:199:12"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1595,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1586,"src":"9985:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1596,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"9997:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1607,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"10048:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:12","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1601,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"10023:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}],"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:12","typeDescriptions":{}}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:12","memberName":"code","nodeType":"MemberAccess","src":"10015:19:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:12","memberName":"length","nodeType":"MemberAccess","src":"10015:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1584,"id":1613,"nodeType":"Return","src":"9978:87:12"}]},"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"9096:491:12","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":1615,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:12","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"token","nameLocation":"9632:5:12","nodeType":"VariableDeclaration","scope":1615,"src":"9625:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},"typeName":{"id":1577,"nodeType":"UserDefinedTypeName","pathNode":{"id":1576,"name":"IERC20","nameLocations":["9625:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"9625:6:12"},"referencedDeclaration":1152,"src":"9625:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"data","nameLocation":"9652:4:12","nodeType":"VariableDeclaration","scope":1615,"src":"9639:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1579,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:12"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1615,"src":"9675:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1582,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:12"},"scope":1616,"src":"9592:480:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1617,"src":"698:9376:12","usedErrors":[1164,1173],"usedEvents":[]}],"src":"115:9960:12"},"id":12},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1646]},"id":1647,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1618,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1619,"nodeType":"StructuredDocumentation","src":"127:496:13","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1646,"linearizedBaseContracts":[1646],"name":"Context","nameLocation":"642:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1627,"nodeType":"Block","src":"718:34:13","statements":[{"expression":{"expression":{"id":1624,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:13","memberName":"sender","nodeType":"MemberAccess","src":"735:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1623,"id":1626,"nodeType":"Return","src":"728:17:13"}]},"id":1628,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:13","nodeType":"FunctionDefinition","parameters":{"id":1620,"nodeType":"ParameterList","parameters":[],"src":"675:2:13"},"returnParameters":{"id":1623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1628,"src":"709:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:13"},"scope":1646,"src":"656:96:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1636,"nodeType":"Block","src":"825:32:13","statements":[{"expression":{"expression":{"id":1633,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:13","memberName":"data","nodeType":"MemberAccess","src":"842:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1632,"id":1635,"nodeType":"Return","src":"835:15:13"}]},"id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:13","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[],"src":"775:2:13"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1637,"src":"809:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1630,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:13"},"scope":1646,"src":"758:99:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1644,"nodeType":"Block","src":"935:25:13","statements":[{"expression":{"hexValue":"30","id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1641,"id":1643,"nodeType":"Return","src":"945:8:13"}]},"id":1645,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:13","nodeType":"FunctionDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[],"src":"892:2:13"},"returnParameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1645,"src":"926:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:13"},"scope":1646,"src":"863:97:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1647,"src":"624:338:13","usedErrors":[],"usedEvents":[]}],"src":"101:862:13"},"id":13},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1698]},"id":1699,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1648,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1649,"nodeType":"StructuredDocumentation","src":"125:489:14","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1698,"linearizedBaseContracts":[1698],"name":"Panic","nameLocation":"665:5:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"677:36:14","text":"@dev generic / unspecified error"},"id":1653,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:14","nodeType":"VariableDeclaration","scope":1698,"src":"718:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1651,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"764:37:14","text":"@dev used by the assert() builtin"},"id":1657,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:14","nodeType":"VariableDeclaration","scope":1698,"src":"806:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1655,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"851:41:14","text":"@dev arithmetic underflow or overflow"},"id":1661,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:14","nodeType":"VariableDeclaration","scope":1698,"src":"897:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:14","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"950:35:14","text":"@dev division or modulo by zero"},"id":1665,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:14","nodeType":"VariableDeclaration","scope":1698,"src":"990:49:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"1045:30:14","text":"@dev enum conversion error"},"id":1669,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:14","nodeType":"VariableDeclaration","scope":1698,"src":"1080:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:14","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"1140:36:14","text":"@dev invalid encoding in storage"},"id":1673,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:14","nodeType":"VariableDeclaration","scope":1698,"src":"1181:55:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1674,"nodeType":"StructuredDocumentation","src":"1242:24:14","text":"@dev empty array pop"},"id":1677,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:14","nodeType":"VariableDeclaration","scope":1698,"src":"1271:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:14","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1678,"nodeType":"StructuredDocumentation","src":"1325:35:14","text":"@dev array out of bounds access"},"id":1681,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:14","nodeType":"VariableDeclaration","scope":1698,"src":"1365:52:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:14","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"1423:65:14","text":"@dev resource error (too large allocation or too large array)"},"id":1685,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:14","nodeType":"VariableDeclaration","scope":1698,"src":"1493:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1686,"nodeType":"StructuredDocumentation","src":"1546:42:14","text":"@dev calling invalid internal function"},"id":1689,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:14","nodeType":"VariableDeclaration","scope":1698,"src":"1593:58:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:14","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1696,"nodeType":"Block","src":"1819:151:14","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:14","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:14"},"nodeType":"YulFunctionCall","src":"1868:24:14"},"nodeType":"YulExpressionStatement","src":"1868:24:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:14","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:14"},"nodeType":"YulFunctionCall","src":"1905:18:14"},"nodeType":"YulExpressionStatement","src":"1905:18:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:14","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:14"},"nodeType":"YulFunctionCall","src":"1936:18:14"},"nodeType":"YulExpressionStatement","src":"1936:18:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1692,"isOffset":false,"isSlot":false,"src":"1918:4:14","valueSize":1}],"flags":["memory-safe"],"id":1695,"nodeType":"InlineAssembly","src":"1829:135:14"}]},"documentation":{"id":1690,"nodeType":"StructuredDocumentation","src":"1658:113:14","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1697,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:14","nodeType":"FunctionDefinition","parameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"code","nameLocation":"1799:4:14","nodeType":"VariableDeclaration","scope":1697,"src":"1791:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:14"},"returnParameters":{"id":1694,"nodeType":"ParameterList","parameters":[],"src":"1819:0:14"},"scope":1698,"src":"1776:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1699,"src":"657:1315:14","usedErrors":[],"usedEvents":[]}],"src":"99:1874:14"},"id":14},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5167],"SafeCast":[6932],"SignedMath":[7076],"Strings":[3100]},"id":3101,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1700,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1702,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3101,"sourceUnit":5168,"src":"127:37:15","symbolAliases":[{"foreign":{"id":1701,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"135:4:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1704,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3101,"sourceUnit":6933,"src":"165:45:15","symbolAliases":[{"foreign":{"id":1703,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"173:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1706,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3101,"sourceUnit":7077,"src":"211:49:15","symbolAliases":[{"foreign":{"id":1705,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"219:10:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"262:34:15","text":" @dev String operations."},"fullyImplemented":true,"id":3100,"linearizedBaseContracts":[3100],"name":"Strings","nameLocation":"305:7:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1709,"libraryName":{"id":1708,"name":"SafeCast","nameLocations":["325:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":6932,"src":"325:8:15"},"nodeType":"UsingForDirective","src":"319:21:15"},{"constant":true,"id":1712,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:15","nodeType":"VariableDeclaration","scope":3100,"src":"346:56:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1710,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1715,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:15","nodeType":"VariableDeclaration","scope":3100,"src":"408:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1713,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1751,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:15","nodeType":"VariableDeclaration","scope":3100,"src":"456:302:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1716,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:15","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:15","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:15","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:15","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1729,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:15","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:15","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:15","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:15","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:15","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:15","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:15","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:15","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:15","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:15","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:15","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:15","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:15","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:15","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:15","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"778:81:15","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1758,"name":"StringsInsufficientHexLength","nameLocation":"870:28:15","nodeType":"ErrorDefinition","parameters":{"id":1757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"value","nameLocation":"907:5:15","nodeType":"VariableDeclaration","scope":1758,"src":"899:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1753,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1756,"mutability":"mutable","name":"length","nameLocation":"922:6:15","nodeType":"VariableDeclaration","scope":1758,"src":"914:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1755,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:15"},"src":"864:66:15"},{"documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"936:108:15","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1761,"name":"StringsInvalidChar","nameLocation":"1055:18:15","nodeType":"ErrorDefinition","parameters":{"id":1760,"nodeType":"ParameterList","parameters":[],"src":"1073:2:15"},"src":"1049:27:15"},{"documentation":{"id":1762,"nodeType":"StructuredDocumentation","src":"1082:84:15","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1764,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:15","nodeType":"ErrorDefinition","parameters":{"id":1763,"nodeType":"ParameterList","parameters":[],"src":"1204:2:15"},"src":"1171:36:15"},{"body":{"id":1811,"nodeType":"Block","src":"1379:561:15","statements":[{"id":1810,"nodeType":"UncheckedBlock","src":"1389:545:15","statements":[{"assignments":[1773],"declarations":[{"constant":false,"id":1773,"mutability":"mutable","name":"length","nameLocation":"1421:6:15","nodeType":"VariableDeclaration","scope":1810,"src":"1413:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1780,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"1441:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1774,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"1430:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5167_$","typeString":"type(library Math)"}},"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:15","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4999,"src":"1430:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:15"},{"assignments":[1782],"declarations":[{"constant":false,"id":1782,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:15","nodeType":"VariableDeclaration","scope":1810,"src":"1465:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1781,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1787,"initialValue":{"arguments":[{"id":1785,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"1499:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1783,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:15"},{"assignments":[1789],"declarations":[{"constant":false,"id":1789,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:15","nodeType":"VariableDeclaration","scope":1810,"src":"1520:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1790,"nodeType":"VariableDeclarationStatement","src":"1520:11:15"},{"AST":{"nodeType":"YulBlock","src":"1570:67:15","statements":[{"nodeType":"YulAssignment","src":"1588:35:15","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1599:6:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1611:2:15","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1615:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1607:3:15"},"nodeType":"YulFunctionCall","src":"1607:15:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:15"},"nodeType":"YulFunctionCall","src":"1595:28:15"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1782,"isOffset":false,"isSlot":false,"src":"1599:6:15","valueSize":1},{"declaration":1773,"isOffset":false,"isSlot":false,"src":"1615:6:15","valueSize":1},{"declaration":1789,"isOffset":false,"isSlot":false,"src":"1588:3:15","valueSize":1}],"flags":["memory-safe"],"id":1791,"nodeType":"InlineAssembly","src":"1545:92:15"},{"body":{"id":1806,"nodeType":"Block","src":"1663:234:15","statements":[{"expression":{"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:15","subExpression":{"id":1793,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"1681:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1795,"nodeType":"ExpressionStatement","src":"1681:5:15"},{"AST":{"nodeType":"YulBlock","src":"1729:86:15","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1759:3:15"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"1780:2:15","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1769:3:15"},"nodeType":"YulFunctionCall","src":"1769:14:15"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1785:10:15"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1764:4:15"},"nodeType":"YulFunctionCall","src":"1764:32:15"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1751:7:15"},"nodeType":"YulFunctionCall","src":"1751:46:15"},"nodeType":"YulExpressionStatement","src":"1751:46:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":1712,"isOffset":false,"isSlot":false,"src":"1785:10:15","valueSize":1},{"declaration":1789,"isOffset":false,"isSlot":false,"src":"1759:3:15","valueSize":1},{"declaration":1767,"isOffset":false,"isSlot":false,"src":"1773:5:15","valueSize":1}],"flags":["memory-safe"],"id":1796,"nodeType":"InlineAssembly","src":"1704:111:15"},{"expression":{"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"1832:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1800,"nodeType":"ExpressionStatement","src":"1832:11:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"1865:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1805,"nodeType":"IfStatement","src":"1861:21:15","trueBody":{"id":1804,"nodeType":"Break","src":"1877:5:15"}}]},"condition":{"hexValue":"74727565","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1807,"nodeType":"WhileStatement","src":"1650:247:15"},{"expression":{"id":1808,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"1917:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1771,"id":1809,"nodeType":"Return","src":"1910:13:15"}]}]},"documentation":{"id":1765,"nodeType":"StructuredDocumentation","src":"1213:90:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:15","nodeType":"FunctionDefinition","parameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"value","nameLocation":"1334:5:15","nodeType":"VariableDeclaration","scope":1812,"src":"1326:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:15"},"returnParameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1812,"src":"1364:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1769,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:15"},"scope":3100,"src":"1308:632:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1837,"nodeType":"Block","src":"2116:92:15","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"2147:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:15","trueExpression":{"hexValue":"2d","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"2193:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1830,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7076,"src":"2178:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7076_$","typeString":"type(library SignedMath)"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:15","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7075,"src":"2178:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1829,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"2169:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1820,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:15","typeDescriptions":{}}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:15","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:15","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1819,"id":1836,"nodeType":"Return","src":"2126:75:15"}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"1946:89:15","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1838,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:15","nodeType":"FunctionDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"value","nameLocation":"2071:5:15","nodeType":"VariableDeclaration","scope":1838,"src":"2064:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1814,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:15"},"returnParameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1838,"src":"2101:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1817,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:15"},"scope":3100,"src":"2040:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1857,"nodeType":"Block","src":"2387:100:15","statements":[{"id":1856,"nodeType":"UncheckedBlock","src":"2397:84:15","statements":[{"expression":{"arguments":[{"id":1847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2440:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2459:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1848,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"2447:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5167_$","typeString":"type(library Math)"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:15","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5110,"src":"2447:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1846,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1858,1941,1961],"referencedDeclaration":1941,"src":"2428:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1845,"id":1855,"nodeType":"Return","src":"2421:49:15"}]}]},"documentation":{"id":1839,"nodeType":"StructuredDocumentation","src":"2214:94:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1858,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:15","nodeType":"FunctionDefinition","parameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"value","nameLocation":"2342:5:15","nodeType":"VariableDeclaration","scope":1858,"src":"2334:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:15"},"returnParameters":{"id":1845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1858,"src":"2372:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1843,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:15"},"scope":3100,"src":"2313:174:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1940,"nodeType":"Block","src":"2700:435:15","statements":[{"assignments":[1869],"declarations":[{"constant":false,"id":1869,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:15","nodeType":"VariableDeclaration","scope":1940,"src":"2710:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1868,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1871,"initialValue":{"id":1870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"2731:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:15"},{"assignments":[1873],"declarations":[{"constant":false,"id":1873,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:15","nodeType":"VariableDeclaration","scope":1940,"src":"2746:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1872,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1882,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1877,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"2782:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1874,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:15"},{"expression":{"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1883,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"2803:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1885,"indexExpression":{"hexValue":"30","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1888,"nodeType":"ExpressionStatement","src":"2803:15:15"},{"expression":{"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1889,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"2828:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1891,"indexExpression":{"hexValue":"31","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1894,"nodeType":"ExpressionStatement","src":"2828:15:15"},{"body":{"id":1923,"nodeType":"Block","src":"2898:95:15","statements":[{"expression":{"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1909,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"2912:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1911,"indexExpression":{"id":1910,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"2919:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1912,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"2924:10:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1916,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1913,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"2935:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1918,"nodeType":"ExpressionStatement","src":"2912:40:15"},{"expression":{"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1919,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"2966:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1922,"nodeType":"ExpressionStatement","src":"2966:16:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1903,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"2886:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1924,"initializationExpression":{"assignments":[1896],"declarations":[{"constant":false,"id":1896,"mutability":"mutable","name":"i","nameLocation":"2866:1:15","nodeType":"VariableDeclaration","scope":1924,"src":"2858:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1902,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1898,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"2874:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:15"},"loopExpression":{"expression":{"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:15","subExpression":{"id":1906,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"2895:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1908,"nodeType":"ExpressionStatement","src":"2893:3:15"},"nodeType":"ForStatement","src":"2853:140:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1925,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"3006:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1934,"nodeType":"IfStatement","src":"3002:96:15","trueBody":{"id":1933,"nodeType":"Block","src":"3023:75:15","statements":[{"errorCall":{"arguments":[{"id":1929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"3073:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1930,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"3080:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1928,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1758,"src":"3044:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1932,"nodeType":"RevertStatement","src":"3037:50:15"}]}},{"expression":{"arguments":[{"id":1937,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"3121:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1935,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:15","typeDescriptions":{}}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1867,"id":1939,"nodeType":"Return","src":"3107:21:15"}]},"documentation":{"id":1859,"nodeType":"StructuredDocumentation","src":"2493:112:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1941,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:15","nodeType":"FunctionDefinition","parameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"value","nameLocation":"2639:5:15","nodeType":"VariableDeclaration","scope":1941,"src":"2631:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1860,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1863,"mutability":"mutable","name":"length","nameLocation":"2654:6:15","nodeType":"VariableDeclaration","scope":1941,"src":"2646:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1862,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:15"},"returnParameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1941,"src":"2685:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1865,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:15"},"scope":3100,"src":"2610:525:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1960,"nodeType":"Block","src":"3367:75:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1954,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"3412:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1952,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:15","typeDescriptions":{}}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:15","typeDescriptions":{}}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1957,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"3420:14:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1949,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1858,1941,1961],"referencedDeclaration":1941,"src":"3384:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1948,"id":1959,"nodeType":"Return","src":"3377:58:15"}]},"documentation":{"id":1942,"nodeType":"StructuredDocumentation","src":"3141:148:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1961,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:15","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"addr","nameLocation":"3323:4:15","nodeType":"VariableDeclaration","scope":1961,"src":"3315:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1943,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:15"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1961,"src":"3352:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1946,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:15"},"scope":3100,"src":"3294:148:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2025,"nodeType":"Block","src":"3699:642:15","statements":[{"assignments":[1970],"declarations":[{"constant":false,"id":1970,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:15","nodeType":"VariableDeclaration","scope":2025,"src":"3709:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1969,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1977,"initialValue":{"arguments":[{"arguments":[{"id":1974,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"3749:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1973,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1858,1941,1961],"referencedDeclaration":1961,"src":"3737:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1971,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:15","typeDescriptions":{}}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:15"},{"assignments":[1979],"declarations":[{"constant":false,"id":1979,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:15","nodeType":"VariableDeclaration","scope":2025,"src":"3840:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1978,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1980,"nodeType":"VariableDeclarationStatement","src":"3840:17:15"},{"AST":{"nodeType":"YulBlock","src":"3892:78:15","statements":[{"nodeType":"YulAssignment","src":"3906:54:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3923:2:15","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3941:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"3949:4:15","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:15"},"nodeType":"YulFunctionCall","src":"3937:17:15"},{"kind":"number","nodeType":"YulLiteral","src":"3956:2:15","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3927:9:15"},"nodeType":"YulFunctionCall","src":"3927:32:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3919:3:15"},"nodeType":"YulFunctionCall","src":"3919:41:15"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3906:9:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1970,"isOffset":false,"isSlot":false,"src":"3941:6:15","valueSize":1},{"declaration":1979,"isOffset":false,"isSlot":false,"src":"3906:9:15","valueSize":1}],"flags":["memory-safe"],"id":1981,"nodeType":"InlineAssembly","src":"3867:103:15"},{"body":{"id":2018,"nodeType":"Block","src":"4013:291:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1992,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"4119:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:15","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1999,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"4148:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2001,"indexExpression":{"id":2000,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"4155:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1997,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:15","typeDescriptions":{}}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2013,"nodeType":"IfStatement","src":"4115:150:15","trueBody":{"id":2012,"nodeType":"Block","src":"4165:100:15","statements":[{"expression":{"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2006,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"4233:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2008,"indexExpression":{"id":2007,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"4240:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2011,"nodeType":"ExpressionStatement","src":"4233:17:15"}]}},{"expression":{"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2014,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"4278:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2017,"nodeType":"ExpressionStatement","src":"4278:15:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1986,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"4001:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2019,"initializationExpression":{"assignments":[1983],"declarations":[{"constant":false,"id":1983,"mutability":"mutable","name":"i","nameLocation":"3993:1:15","nodeType":"VariableDeclaration","scope":2019,"src":"3985:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1985,"initialValue":{"hexValue":"3431","id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:15","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:15"},"loopExpression":{"expression":{"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:15","subExpression":{"id":1989,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"4010:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1991,"nodeType":"ExpressionStatement","src":"4008:3:15"},"nodeType":"ForStatement","src":"3980:324:15"},{"expression":{"arguments":[{"id":2022,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"4327:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2020,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:15","typeDescriptions":{}}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1968,"id":2024,"nodeType":"Return","src":"4313:21:15"}]},"documentation":{"id":1962,"nodeType":"StructuredDocumentation","src":"3448:165:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2026,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:15","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1964,"mutability":"mutable","name":"addr","nameLocation":"3655:4:15","nodeType":"VariableDeclaration","scope":2026,"src":"3647:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1963,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:15"},"returnParameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2026,"src":"3684:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1966,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:15"},"scope":3100,"src":"3618:723:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2062,"nodeType":"Block","src":"4496:104:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2038,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"4519:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2036,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:15","typeDescriptions":{}}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:15","memberName":"length","nodeType":"MemberAccess","src":"4513:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2043,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"4538:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2041,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:15","typeDescriptions":{}}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:15","memberName":"length","nodeType":"MemberAccess","src":"4532:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2050,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"4567:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2048,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:15","typeDescriptions":{}}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2047,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2056,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"4590:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2054,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:15","typeDescriptions":{}}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2053,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2035,"id":2061,"nodeType":"Return","src":"4506:87:15"}]},"documentation":{"id":2027,"nodeType":"StructuredDocumentation","src":"4347:66:15","text":" @dev Returns true if the two strings are equal."},"id":2063,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:15","nodeType":"FunctionDefinition","parameters":{"id":2032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"mutability":"mutable","name":"a","nameLocation":"4447:1:15","nodeType":"VariableDeclaration","scope":2063,"src":"4433:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2028,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2031,"mutability":"mutable","name":"b","nameLocation":"4464:1:15","nodeType":"VariableDeclaration","scope":2063,"src":"4450:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2030,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:15"},"returnParameters":{"id":2035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2063,"src":"4490:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2033,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:15"},"scope":3100,"src":"4418:182:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2081,"nodeType":"Block","src":"4897:64:15","statements":[{"expression":{"arguments":[{"id":2072,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"4924:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2076,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"4940:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2074,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:15","typeDescriptions":{}}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:15","memberName":"length","nodeType":"MemberAccess","src":"4934:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2071,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2082,2113],"referencedDeclaration":2113,"src":"4914:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2070,"id":2080,"nodeType":"Return","src":"4907:47:15"}]},"documentation":{"id":2064,"nodeType":"StructuredDocumentation","src":"4606:214:15","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2082,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:15","nodeType":"FunctionDefinition","parameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"input","nameLocation":"4858:5:15","nodeType":"VariableDeclaration","scope":2082,"src":"4844:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2065,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:15"},"returnParameters":{"id":2070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2082,"src":"4888:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2068,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:15"},"scope":3100,"src":"4825:136:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2112,"nodeType":"Block","src":"5366:153:15","statements":[{"assignments":[2095,2097],"declarations":[{"constant":false,"id":2095,"mutability":"mutable","name":"success","nameLocation":"5382:7:15","nodeType":"VariableDeclaration","scope":2112,"src":"5377:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2094,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2097,"mutability":"mutable","name":"value","nameLocation":"5399:5:15","nodeType":"VariableDeclaration","scope":2112,"src":"5391:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2096,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2103,"initialValue":{"arguments":[{"id":2099,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"5421:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2100,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"5428:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2101,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"5435:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2098,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2134,2171],"referencedDeclaration":2171,"src":"5408:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:15"},{"condition":{"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:15","subExpression":{"id":2104,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"5454:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2109,"nodeType":"IfStatement","src":"5449:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2106,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"5470:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2108,"nodeType":"RevertStatement","src":"5463:27:15"}},{"expression":{"id":2110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"5507:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2093,"id":2111,"nodeType":"Return","src":"5500:12:15"}]},"documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"4967:294:15","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2113,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:15","nodeType":"FunctionDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"input","nameLocation":"5299:5:15","nodeType":"VariableDeclaration","scope":2113,"src":"5285:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2084,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2087,"mutability":"mutable","name":"begin","nameLocation":"5314:5:15","nodeType":"VariableDeclaration","scope":2113,"src":"5306:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2086,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2089,"mutability":"mutable","name":"end","nameLocation":"5329:3:15","nodeType":"VariableDeclaration","scope":2113,"src":"5321:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2088,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:15"},"returnParameters":{"id":2093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2113,"src":"5357:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2091,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:15"},"scope":3100,"src":"5266:253:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2133,"nodeType":"Block","src":"5840:83:15","statements":[{"expression":{"arguments":[{"id":2124,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5886:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2128,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5902:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2126,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:15","typeDescriptions":{}}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:15","memberName":"length","nodeType":"MemberAccess","src":"5896:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2123,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"5857:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2122,"id":2132,"nodeType":"Return","src":"5850:66:15"}]},"documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"5525:215:15","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2134,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:15","nodeType":"FunctionDefinition","parameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"input","nameLocation":"5781:5:15","nodeType":"VariableDeclaration","scope":2134,"src":"5767:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2115,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:15"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2119,"mutability":"mutable","name":"success","nameLocation":"5816:7:15","nodeType":"VariableDeclaration","scope":2134,"src":"5811:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2118,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2121,"mutability":"mutable","name":"value","nameLocation":"5833:5:15","nodeType":"VariableDeclaration","scope":2134,"src":"5825:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:15"},"scope":3100,"src":"5745:178:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2170,"nodeType":"Block","src":"6325:144:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2148,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"6339:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2151,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"6351:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2149,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:15","typeDescriptions":{}}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:15","memberName":"length","nodeType":"MemberAccess","src":"6345:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2155,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"6368:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2156,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"6376:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2163,"nodeType":"IfStatement","src":"6335:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2161,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2147,"id":2162,"nodeType":"Return","src":"6381:17:15"}},{"expression":{"arguments":[{"id":2165,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"6444:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2166,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"6451:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2167,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"6458:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2164,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"6415:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2147,"id":2169,"nodeType":"Return","src":"6408:54:15"}]},"documentation":{"id":2135,"nodeType":"StructuredDocumentation","src":"5929:238:15","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2171,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:15","nodeType":"FunctionDefinition","parameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2137,"mutability":"mutable","name":"input","nameLocation":"6217:5:15","nodeType":"VariableDeclaration","scope":2171,"src":"6203:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2136,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2139,"mutability":"mutable","name":"begin","nameLocation":"6240:5:15","nodeType":"VariableDeclaration","scope":2171,"src":"6232:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2138,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2141,"mutability":"mutable","name":"end","nameLocation":"6263:3:15","nodeType":"VariableDeclaration","scope":2171,"src":"6255:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2140,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:15"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"success","nameLocation":"6301:7:15","nodeType":"VariableDeclaration","scope":2171,"src":"6296:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2143,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2146,"mutability":"mutable","name":"value","nameLocation":"6318:5:15","nodeType":"VariableDeclaration","scope":2171,"src":"6310:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:15"},"scope":3100,"src":"6172:297:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2240,"nodeType":"Block","src":"6872:347:15","statements":[{"assignments":[2186],"declarations":[{"constant":false,"id":2186,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:15","nodeType":"VariableDeclaration","scope":2240,"src":"6882:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2185,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2191,"initialValue":{"arguments":[{"id":2189,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"6910:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2187,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:15","typeDescriptions":{}}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:15"},{"assignments":[2193],"declarations":[{"constant":false,"id":2193,"mutability":"mutable","name":"result","nameLocation":"6935:6:15","nodeType":"VariableDeclaration","scope":2240,"src":"6927:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2195,"initialValue":{"hexValue":"30","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:15"},{"body":{"id":2234,"nodeType":"Block","src":"6993:189:15","statements":[{"assignments":[2207],"declarations":[{"constant":false,"id":2207,"mutability":"mutable","name":"chr","nameLocation":"7013:3:15","nodeType":"VariableDeclaration","scope":2234,"src":"7007:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2206,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2217,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2212,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"7062:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2213,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"7070:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2211,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"7039:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2209,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:15","typeDescriptions":{}}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2208,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"7019:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2218,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"7092:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2225,"nodeType":"IfStatement","src":"7088:30:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2184,"id":2224,"nodeType":"Return","src":"7101:17:15"}},{"expression":{"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2226,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"7132:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2229,"nodeType":"ExpressionStatement","src":"7132:12:15"},{"expression":{"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"7158:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2231,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"7168:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2233,"nodeType":"ExpressionStatement","src":"7158:13:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2200,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"6979:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2201,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"6983:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2235,"initializationExpression":{"assignments":[2197],"declarations":[{"constant":false,"id":2197,"mutability":"mutable","name":"i","nameLocation":"6968:1:15","nodeType":"VariableDeclaration","scope":2235,"src":"6960:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2199,"initialValue":{"id":2198,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"6972:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:15"},"loopExpression":{"expression":{"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:15","subExpression":{"id":2203,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"6990:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2205,"nodeType":"ExpressionStatement","src":"6988:3:15"},"nodeType":"ForStatement","src":"6955:227:15"},{"expression":{"components":[{"hexValue":"74727565","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"7205:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2184,"id":2239,"nodeType":"Return","src":"7191:21:15"}]},"documentation":{"id":2172,"nodeType":"StructuredDocumentation","src":"6475:224:15","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2241,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:15","nodeType":"FunctionDefinition","parameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"input","nameLocation":"6765:5:15","nodeType":"VariableDeclaration","scope":2241,"src":"6751:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2173,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2176,"mutability":"mutable","name":"begin","nameLocation":"6788:5:15","nodeType":"VariableDeclaration","scope":2241,"src":"6780:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2175,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"end","nameLocation":"6811:3:15","nodeType":"VariableDeclaration","scope":2241,"src":"6803:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2177,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:15"},"returnParameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2181,"mutability":"mutable","name":"success","nameLocation":"6848:7:15","nodeType":"VariableDeclaration","scope":2241,"src":"6843:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2180,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2183,"mutability":"mutable","name":"value","nameLocation":"6865:5:15","nodeType":"VariableDeclaration","scope":2241,"src":"6857:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:15"},"scope":3100,"src":"6704:515:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2259,"nodeType":"Block","src":"7516:63:15","statements":[{"expression":{"arguments":[{"id":2250,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"7542:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2254,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"7558:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2252,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:15","typeDescriptions":{}}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:15","memberName":"length","nodeType":"MemberAccess","src":"7552:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2249,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2260,2291],"referencedDeclaration":2291,"src":"7533:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2248,"id":2258,"nodeType":"Return","src":"7526:46:15"}]},"documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"7225:216:15","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2260,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:15","nodeType":"FunctionDefinition","parameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"input","nameLocation":"7478:5:15","nodeType":"VariableDeclaration","scope":2260,"src":"7464:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2243,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:15"},"returnParameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2260,"src":"7508:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2246,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:15"},"scope":3100,"src":"7446:133:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2290,"nodeType":"Block","src":"7984:151:15","statements":[{"assignments":[2273,2275],"declarations":[{"constant":false,"id":2273,"mutability":"mutable","name":"success","nameLocation":"8000:7:15","nodeType":"VariableDeclaration","scope":2290,"src":"7995:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2272,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"value","nameLocation":"8016:5:15","nodeType":"VariableDeclaration","scope":2290,"src":"8009:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2274,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2281,"initialValue":{"arguments":[{"id":2277,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"8037:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2278,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"8044:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2279,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"8051:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2276,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2312,2354],"referencedDeclaration":2354,"src":"8025:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:15"},{"condition":{"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:15","subExpression":{"id":2282,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"8070:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2287,"nodeType":"IfStatement","src":"8065:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2284,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"8086:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2286,"nodeType":"RevertStatement","src":"8079:27:15"}},{"expression":{"id":2288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"8123:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2271,"id":2289,"nodeType":"Return","src":"8116:12:15"}]},"documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"7585:296:15","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2291,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:15","nodeType":"FunctionDefinition","parameters":{"id":2268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"input","nameLocation":"7918:5:15","nodeType":"VariableDeclaration","scope":2291,"src":"7904:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2262,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2265,"mutability":"mutable","name":"begin","nameLocation":"7933:5:15","nodeType":"VariableDeclaration","scope":2291,"src":"7925:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2264,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2267,"mutability":"mutable","name":"end","nameLocation":"7948:3:15","nodeType":"VariableDeclaration","scope":2291,"src":"7940:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:15"},"returnParameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2291,"src":"7976:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2269,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:15"},"scope":3100,"src":"7886:249:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2311,"nodeType":"Block","src":"8526:82:15","statements":[{"expression":{"arguments":[{"id":2302,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"8571:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2306,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"8587:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2304,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:15","typeDescriptions":{}}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:15","memberName":"length","nodeType":"MemberAccess","src":"8581:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2301,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"8543:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2300,"id":2310,"nodeType":"Return","src":"8536:65:15"}]},"documentation":{"id":2292,"nodeType":"StructuredDocumentation","src":"8141:287:15","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2312,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:15","nodeType":"FunctionDefinition","parameters":{"id":2295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"input","nameLocation":"8468:5:15","nodeType":"VariableDeclaration","scope":2312,"src":"8454:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2293,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:15"},"returnParameters":{"id":2300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"mutability":"mutable","name":"success","nameLocation":"8503:7:15","nodeType":"VariableDeclaration","scope":2312,"src":"8498:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2296,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2299,"mutability":"mutable","name":"value","nameLocation":"8519:5:15","nodeType":"VariableDeclaration","scope":2312,"src":"8512:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2298,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:15"},"scope":3100,"src":"8433:175:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2317,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:15","nodeType":"VariableDeclaration","scope":3100,"src":"8614:50:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2313,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2353,"nodeType":"Block","src":"9130:143:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2331,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"9144:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2334,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"9156:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2332,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:15","typeDescriptions":{}}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:15","memberName":"length","nodeType":"MemberAccess","src":"9150:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2338,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"9173:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2339,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"9181:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2346,"nodeType":"IfStatement","src":"9140:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2330,"id":2345,"nodeType":"Return","src":"9186:17:15"}},{"expression":{"arguments":[{"id":2348,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2320,"src":"9248:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2349,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"9255:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2350,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"9262:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2347,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"9220:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2330,"id":2352,"nodeType":"Return","src":"9213:53:15"}]},"documentation":{"id":2318,"nodeType":"StructuredDocumentation","src":"8671:303:15","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2354,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:15","nodeType":"FunctionDefinition","parameters":{"id":2325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"input","nameLocation":"9023:5:15","nodeType":"VariableDeclaration","scope":2354,"src":"9009:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2319,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2322,"mutability":"mutable","name":"begin","nameLocation":"9046:5:15","nodeType":"VariableDeclaration","scope":2354,"src":"9038:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2321,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2324,"mutability":"mutable","name":"end","nameLocation":"9069:3:15","nodeType":"VariableDeclaration","scope":2354,"src":"9061:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2323,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:15"},"returnParameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"success","nameLocation":"9107:7:15","nodeType":"VariableDeclaration","scope":2354,"src":"9102:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2326,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2329,"mutability":"mutable","name":"value","nameLocation":"9123:5:15","nodeType":"VariableDeclaration","scope":2354,"src":"9116:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2328,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:15"},"scope":3100,"src":"8979:294:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2474,"nodeType":"Block","src":"9673:812:15","statements":[{"assignments":[2369],"declarations":[{"constant":false,"id":2369,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:15","nodeType":"VariableDeclaration","scope":2474,"src":"9683:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2368,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2374,"initialValue":{"arguments":[{"id":2372,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"9711:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2370,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:15","typeDescriptions":{}}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:15"},{"assignments":[2376],"declarations":[{"constant":false,"id":2376,"mutability":"mutable","name":"sign","nameLocation":"9781:4:15","nodeType":"VariableDeclaration","scope":2474,"src":"9774:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2375,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2392,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2377,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"9788:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2378,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"9797:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2387,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"9845:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2388,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"9853:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2386,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"9822:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2384,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:15","typeDescriptions":{}}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:15","trueExpression":{"arguments":[{"hexValue":"30","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2380,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:15","typeDescriptions":{}}},"id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:15"},{"assignments":[2394],"declarations":[{"constant":false,"id":2394,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:15","nodeType":"VariableDeclaration","scope":2474,"src":"9941:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2393,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2401,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2395,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"9961:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2396,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:15","typeDescriptions":{}}},"id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:15"},{"assignments":[2403],"declarations":[{"constant":false,"id":2403,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:15","nodeType":"VariableDeclaration","scope":2474,"src":"9990:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2402,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2410,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2404,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"10010:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2405,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:15","typeDescriptions":{}}},"id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:15"},{"assignments":[2412],"declarations":[{"constant":false,"id":2412,"mutability":"mutable","name":"offset","nameLocation":"10047:6:15","nodeType":"VariableDeclaration","scope":2474,"src":"10039:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2411,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2419,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2413,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"10057:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2414,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"10073:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2416,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"10056:37:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:15"},{"assignments":[2421,2423],"declarations":[{"constant":false,"id":2421,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:15","nodeType":"VariableDeclaration","scope":2474,"src":"10107:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2420,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:15","nodeType":"VariableDeclaration","scope":2474,"src":"10124:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2431,"initialValue":{"arguments":[{"id":2425,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"10157:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2426,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"10164:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2427,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"10172:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2429,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"10180:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2424,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2134,2171],"referencedDeclaration":2171,"src":"10144:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2432,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"10199:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2433,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"10213:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2434,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"10224:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2452,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"10341:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2453,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"10355:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2455,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"10371:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2456,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"10383:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2470,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2367,"id":2471,"nodeType":"Return","src":"10461:17:15"},"id":2472,"nodeType":"IfStatement","src":"10337:141:15","trueBody":{"id":2467,"nodeType":"Block","src":"10399:56:15","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2461,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:15","memberName":"min","nodeType":"MemberAccess","src":"10427:16:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2465,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2367,"id":2466,"nodeType":"Return","src":"10413:31:15"}]}},"id":2473,"nodeType":"IfStatement","src":"10195:283:15","trueBody":{"id":2451,"nodeType":"Block","src":"10240:91:15","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2438,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"10268:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2446,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"10310:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2444,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:15","typeDescriptions":{}}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:15","trueExpression":{"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:15","subExpression":{"arguments":[{"id":2441,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"10291:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2439,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:15","typeDescriptions":{}}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2367,"id":2450,"nodeType":"Return","src":"10254:66:15"}]}}]},"documentation":{"id":2355,"nodeType":"StructuredDocumentation","src":"9279:223:15","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2475,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:15","nodeType":"FunctionDefinition","parameters":{"id":2362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2357,"mutability":"mutable","name":"input","nameLocation":"9567:5:15","nodeType":"VariableDeclaration","scope":2475,"src":"9553:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2356,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2359,"mutability":"mutable","name":"begin","nameLocation":"9590:5:15","nodeType":"VariableDeclaration","scope":2475,"src":"9582:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2358,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2361,"mutability":"mutable","name":"end","nameLocation":"9613:3:15","nodeType":"VariableDeclaration","scope":2475,"src":"9605:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2360,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:15"},"returnParameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"success","nameLocation":"9650:7:15","nodeType":"VariableDeclaration","scope":2475,"src":"9645:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2363,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"value","nameLocation":"9666:5:15","nodeType":"VariableDeclaration","scope":2475,"src":"9659:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2365,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:15"},"scope":3100,"src":"9507:978:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2493,"nodeType":"Block","src":"10830:67:15","statements":[{"expression":{"arguments":[{"id":2484,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"10860:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2488,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"10876:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2486,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:15","typeDescriptions":{}}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:15","memberName":"length","nodeType":"MemberAccess","src":"10870:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2483,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2494,2525],"referencedDeclaration":2525,"src":"10847:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2482,"id":2492,"nodeType":"Return","src":"10840:50:15"}]},"documentation":{"id":2476,"nodeType":"StructuredDocumentation","src":"10491:259:15","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2494,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:15","nodeType":"FunctionDefinition","parameters":{"id":2479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"input","nameLocation":"10791:5:15","nodeType":"VariableDeclaration","scope":2494,"src":"10777:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2477,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:15"},"returnParameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2494,"src":"10821:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:15"},"scope":3100,"src":"10755:142:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2524,"nodeType":"Block","src":"11318:156:15","statements":[{"assignments":[2507,2509],"declarations":[{"constant":false,"id":2507,"mutability":"mutable","name":"success","nameLocation":"11334:7:15","nodeType":"VariableDeclaration","scope":2524,"src":"11329:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2506,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2509,"mutability":"mutable","name":"value","nameLocation":"11351:5:15","nodeType":"VariableDeclaration","scope":2524,"src":"11343:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2515,"initialValue":{"arguments":[{"id":2511,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"11376:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2512,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"11383:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2513,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"11390:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2510,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2546,2583],"referencedDeclaration":2583,"src":"11360:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:15"},{"condition":{"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:15","subExpression":{"id":2516,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"11409:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2521,"nodeType":"IfStatement","src":"11404:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2518,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"11425:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2520,"nodeType":"RevertStatement","src":"11418:27:15"}},{"expression":{"id":2522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"11462:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2505,"id":2523,"nodeType":"Return","src":"11455:12:15"}]},"documentation":{"id":2495,"nodeType":"StructuredDocumentation","src":"10903:307:15","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2525,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:15","nodeType":"FunctionDefinition","parameters":{"id":2502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"input","nameLocation":"11251:5:15","nodeType":"VariableDeclaration","scope":2525,"src":"11237:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2496,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2499,"mutability":"mutable","name":"begin","nameLocation":"11266:5:15","nodeType":"VariableDeclaration","scope":2525,"src":"11258:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2498,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2501,"mutability":"mutable","name":"end","nameLocation":"11281:3:15","nodeType":"VariableDeclaration","scope":2525,"src":"11273:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:15"},"returnParameters":{"id":2505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2525,"src":"11309:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:15"},"scope":3100,"src":"11215:259:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2545,"nodeType":"Block","src":"11801:86:15","statements":[{"expression":{"arguments":[{"id":2536,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"11850:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2540,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"11866:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2538,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:15","typeDescriptions":{}}},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:15","memberName":"length","nodeType":"MemberAccess","src":"11860:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2535,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"11818:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2534,"id":2544,"nodeType":"Return","src":"11811:69:15"}]},"documentation":{"id":2526,"nodeType":"StructuredDocumentation","src":"11480:218:15","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2546,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:15","nodeType":"FunctionDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"input","nameLocation":"11742:5:15","nodeType":"VariableDeclaration","scope":2546,"src":"11728:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2527,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:15"},"returnParameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"success","nameLocation":"11777:7:15","nodeType":"VariableDeclaration","scope":2546,"src":"11772:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2530,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2533,"mutability":"mutable","name":"value","nameLocation":"11794:5:15","nodeType":"VariableDeclaration","scope":2546,"src":"11786:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:15"},"scope":3100,"src":"11703:184:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2582,"nodeType":"Block","src":"12295:147:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2560,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"12309:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2563,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"12321:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2561,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:15","typeDescriptions":{}}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:15","memberName":"length","nodeType":"MemberAccess","src":"12315:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2567,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"12338:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2568,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"12346:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2575,"nodeType":"IfStatement","src":"12305:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2559,"id":2574,"nodeType":"Return","src":"12351:17:15"}},{"expression":{"arguments":[{"id":2577,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"12417:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2578,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"12424:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2579,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"12431:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2576,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"12385:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2559,"id":2581,"nodeType":"Return","src":"12378:57:15"}]},"documentation":{"id":2547,"nodeType":"StructuredDocumentation","src":"11893:241:15","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2583,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:15","nodeType":"FunctionDefinition","parameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2549,"mutability":"mutable","name":"input","nameLocation":"12187:5:15","nodeType":"VariableDeclaration","scope":2583,"src":"12173:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2548,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2551,"mutability":"mutable","name":"begin","nameLocation":"12210:5:15","nodeType":"VariableDeclaration","scope":2583,"src":"12202:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2550,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2553,"mutability":"mutable","name":"end","nameLocation":"12233:3:15","nodeType":"VariableDeclaration","scope":2583,"src":"12225:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:15"},"returnParameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"success","nameLocation":"12271:7:15","nodeType":"VariableDeclaration","scope":2583,"src":"12266:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2555,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2558,"mutability":"mutable","name":"value","nameLocation":"12288:5:15","nodeType":"VariableDeclaration","scope":2583,"src":"12280:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:15"},"scope":3100,"src":"12139:303:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2685,"nodeType":"Block","src":"12851:881:15","statements":[{"assignments":[2598],"declarations":[{"constant":false,"id":2598,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:15","nodeType":"VariableDeclaration","scope":2685,"src":"12861:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2597,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2603,"initialValue":{"arguments":[{"id":2601,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"12889:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2599,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:15","typeDescriptions":{}}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:15"},{"assignments":[2605],"declarations":[{"constant":false,"id":2605,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:15","nodeType":"VariableDeclaration","scope":2685,"src":"12943:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2604,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2625,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2606,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"12961:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2607,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"12967:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2611,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2615,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"13011:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2616,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"13019:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2614,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"12988:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2612,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:15","typeDescriptions":{}}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2619,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:15","typeDescriptions":{}}},"id":2622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:15"},{"assignments":[2627],"declarations":[{"constant":false,"id":2627,"mutability":"mutable","name":"offset","nameLocation":"13131:6:15","nodeType":"VariableDeclaration","scope":2685,"src":"13123:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2626,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2633,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2628,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"13140:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"13140:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:15"},{"assignments":[2635],"declarations":[{"constant":false,"id":2635,"mutability":"mutable","name":"result","nameLocation":"13181:6:15","nodeType":"VariableDeclaration","scope":2685,"src":"13173:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2634,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2637,"initialValue":{"hexValue":"30","id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:15"},{"body":{"id":2679,"nodeType":"Block","src":"13248:447:15","statements":[{"assignments":[2651],"declarations":[{"constant":false,"id":2651,"mutability":"mutable","name":"chr","nameLocation":"13268:3:15","nodeType":"VariableDeclaration","scope":2679,"src":"13262:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2650,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2661,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2656,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"13317:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2657,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"13325:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2655,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"13294:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2653,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:15","typeDescriptions":{}}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2652,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2921,"src":"13274:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2662,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"13347:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2669,"nodeType":"IfStatement","src":"13343:31:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2667,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2596,"id":2668,"nodeType":"Return","src":"13357:17:15"}},{"expression":{"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"13388:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2673,"nodeType":"ExpressionStatement","src":"13388:12:15"},{"id":2678,"nodeType":"UncheckedBlock","src":"13414:271:15","statements":[{"expression":{"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2674,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"13657:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2675,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"13667:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2677,"nodeType":"ExpressionStatement","src":"13657:13:15"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2644,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"13234:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2645,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"13238:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2680,"initializationExpression":{"assignments":[2639],"declarations":[{"constant":false,"id":2639,"mutability":"mutable","name":"i","nameLocation":"13214:1:15","nodeType":"VariableDeclaration","scope":2680,"src":"13206:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2643,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2640,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"13218:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2641,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"13226:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:15"},"loopExpression":{"expression":{"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:15","subExpression":{"id":2647,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"13245:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2649,"nodeType":"ExpressionStatement","src":"13243:3:15"},"nodeType":"ForStatement","src":"13201:494:15"},{"expression":{"components":[{"hexValue":"74727565","id":2681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2682,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"13718:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2596,"id":2684,"nodeType":"Return","src":"13704:21:15"}]},"documentation":{"id":2584,"nodeType":"StructuredDocumentation","src":"12448:227:15","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2686,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:15","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"input","nameLocation":"12744:5:15","nodeType":"VariableDeclaration","scope":2686,"src":"12730:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2585,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2588,"mutability":"mutable","name":"begin","nameLocation":"12767:5:15","nodeType":"VariableDeclaration","scope":2686,"src":"12759:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"end","nameLocation":"12790:3:15","nodeType":"VariableDeclaration","scope":2686,"src":"12782:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2589,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:15"},"returnParameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"success","nameLocation":"12827:7:15","nodeType":"VariableDeclaration","scope":2686,"src":"12822:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2592,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"value","nameLocation":"12844:5:15","nodeType":"VariableDeclaration","scope":2686,"src":"12836:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:15"},"scope":3100,"src":"12680:1052:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2704,"nodeType":"Block","src":"14030:67:15","statements":[{"expression":{"arguments":[{"id":2695,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"14060:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2699,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2689,"src":"14076:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2697,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:15","typeDescriptions":{}}},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:15","memberName":"length","nodeType":"MemberAccess","src":"14070:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2694,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2705,2736],"referencedDeclaration":2736,"src":"14047:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2693,"id":2703,"nodeType":"Return","src":"14040:50:15"}]},"documentation":{"id":2687,"nodeType":"StructuredDocumentation","src":"13738:212:15","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2705,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:15","nodeType":"FunctionDefinition","parameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"input","nameLocation":"13991:5:15","nodeType":"VariableDeclaration","scope":2705,"src":"13977:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2688,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:15"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2705,"src":"14021:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2691,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:15"},"scope":3100,"src":"13955:142:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2735,"nodeType":"Block","src":"14470:165:15","statements":[{"assignments":[2718,2720],"declarations":[{"constant":false,"id":2718,"mutability":"mutable","name":"success","nameLocation":"14486:7:15","nodeType":"VariableDeclaration","scope":2735,"src":"14481:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2717,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2720,"mutability":"mutable","name":"value","nameLocation":"14503:5:15","nodeType":"VariableDeclaration","scope":2735,"src":"14495:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2719,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2726,"initialValue":{"arguments":[{"id":2722,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"14528:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2723,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"14535:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2724,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"14542:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2721,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2757,2861],"referencedDeclaration":2861,"src":"14512:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:15"},{"condition":{"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:15","subExpression":{"id":2727,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"14561:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2732,"nodeType":"IfStatement","src":"14556:50:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2729,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"14577:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2731,"nodeType":"RevertStatement","src":"14570:36:15"}},{"expression":{"id":2733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"14623:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2716,"id":2734,"nodeType":"Return","src":"14616:12:15"}]},"documentation":{"id":2706,"nodeType":"StructuredDocumentation","src":"14103:259:15","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2736,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:15","nodeType":"FunctionDefinition","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2708,"mutability":"mutable","name":"input","nameLocation":"14403:5:15","nodeType":"VariableDeclaration","scope":2736,"src":"14389:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2707,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2710,"mutability":"mutable","name":"begin","nameLocation":"14418:5:15","nodeType":"VariableDeclaration","scope":2736,"src":"14410:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2709,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2712,"mutability":"mutable","name":"end","nameLocation":"14433:3:15","nodeType":"VariableDeclaration","scope":2736,"src":"14425:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2711,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:15"},"returnParameters":{"id":2716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2736,"src":"14461:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2714,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:15"},"scope":3100,"src":"14367:268:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2756,"nodeType":"Block","src":"14942:70:15","statements":[{"expression":{"arguments":[{"id":2747,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"14975:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2751,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"14991:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2749,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:15","typeDescriptions":{}}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:15","memberName":"length","nodeType":"MemberAccess","src":"14985:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2746,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2757,2861],"referencedDeclaration":2861,"src":"14959:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2745,"id":2755,"nodeType":"Return","src":"14952:53:15"}]},"documentation":{"id":2737,"nodeType":"StructuredDocumentation","src":"14641:198:15","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2757,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:15","nodeType":"FunctionDefinition","parameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"input","nameLocation":"14883:5:15","nodeType":"VariableDeclaration","scope":2757,"src":"14869:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2738,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:15"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2742,"mutability":"mutable","name":"success","nameLocation":"14918:7:15","nodeType":"VariableDeclaration","scope":2757,"src":"14913:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2741,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2744,"mutability":"mutable","name":"value","nameLocation":"14935:5:15","nodeType":"VariableDeclaration","scope":2757,"src":"14927:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2743,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:15"},"scope":3100,"src":"14844:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2860,"nodeType":"Block","src":"15405:733:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2771,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"15419:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2774,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"15431:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2772,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:15","typeDescriptions":{}}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:15","memberName":"length","nodeType":"MemberAccess","src":"15425:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2778,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"15448:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2779,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"15456:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2789,"nodeType":"IfStatement","src":"15415:72:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2783,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:15","typeDescriptions":{}}},"id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2787,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2770,"id":2788,"nodeType":"Return","src":"15461:26:15"}},{"assignments":[2791],"declarations":[{"constant":false,"id":2791,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:15","nodeType":"VariableDeclaration","scope":2860,"src":"15498:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2790,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2814,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2792,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"15516:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2793,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"15522:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2803,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"15572:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2801,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:15","typeDescriptions":{}}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2805,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"15580:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2800,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"15543:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2798,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:15","typeDescriptions":{}}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2808,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:15","typeDescriptions":{}}},"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:15"},{"assignments":[2816],"declarations":[{"constant":false,"id":2816,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:15","nodeType":"VariableDeclaration","scope":2860,"src":"15684:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2824,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:15","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2818,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"15714:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"15714:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2825,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"15801:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2826,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"15807:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2828,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"15816:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2858,"nodeType":"Block","src":"16081:51:15","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2852,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:15","typeDescriptions":{}}},"id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2856,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2770,"id":2857,"nodeType":"Return","src":"16095:26:15"}]},"id":2859,"nodeType":"IfStatement","src":"15797:335:15","trueBody":{"id":2850,"nodeType":"Block","src":"15832:243:15","statements":[{"assignments":[2831,2833],"declarations":[{"constant":false,"id":2831,"mutability":"mutable","name":"s","nameLocation":"15953:1:15","nodeType":"VariableDeclaration","scope":2850,"src":"15948:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2830,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2833,"mutability":"mutable","name":"v","nameLocation":"15964:1:15","nodeType":"VariableDeclaration","scope":2850,"src":"15956:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2832,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2839,"initialValue":{"arguments":[{"id":2835,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"16001:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2836,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"16008:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2837,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"16015:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2834,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"15969:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:15"},{"expression":{"components":[{"id":2840,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"16041:1:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2845,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"16060:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2843,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:15","typeDescriptions":{}}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2841,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:15","typeDescriptions":{}}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2848,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2770,"id":2849,"nodeType":"Return","src":"16033:31:15"}]}}]},"documentation":{"id":2758,"nodeType":"StructuredDocumentation","src":"15018:226:15","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2861,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:15","nodeType":"FunctionDefinition","parameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2760,"mutability":"mutable","name":"input","nameLocation":"15297:5:15","nodeType":"VariableDeclaration","scope":2861,"src":"15283:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2759,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2762,"mutability":"mutable","name":"begin","nameLocation":"15320:5:15","nodeType":"VariableDeclaration","scope":2861,"src":"15312:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2761,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2764,"mutability":"mutable","name":"end","nameLocation":"15343:3:15","nodeType":"VariableDeclaration","scope":2861,"src":"15335:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2763,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:15"},"returnParameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2767,"mutability":"mutable","name":"success","nameLocation":"15381:7:15","nodeType":"VariableDeclaration","scope":2861,"src":"15376:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2766,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2769,"mutability":"mutable","name":"value","nameLocation":"15398:5:15","nodeType":"VariableDeclaration","scope":2861,"src":"15390:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2768,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:15"},"scope":3100,"src":"15249:889:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2920,"nodeType":"Block","src":"16207:461:15","statements":[{"assignments":[2869],"declarations":[{"constant":false,"id":2869,"mutability":"mutable","name":"value","nameLocation":"16223:5:15","nodeType":"VariableDeclaration","scope":2920,"src":"16217:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2868,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2874,"initialValue":{"arguments":[{"id":2872,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"16237:3:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2870,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:15","typeDescriptions":{}}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:15"},{"id":2917,"nodeType":"UncheckedBlock","src":"16401:238:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"16429:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:15","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"16443:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:15","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"16489:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"16503:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:15","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"16550:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"16564:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:15","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2909,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2908,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:15","memberName":"max","nodeType":"MemberAccess","src":"16613:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2867,"id":2913,"nodeType":"Return","src":"16606:22:15"},"id":2914,"nodeType":"IfStatement","src":"16546:82:15","trueBody":{"expression":{"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"16576:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:15","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2907,"nodeType":"ExpressionStatement","src":"16576:11:15"}},"id":2915,"nodeType":"IfStatement","src":"16485:143:15","trueBody":{"expression":{"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"16516:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:15","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2896,"nodeType":"ExpressionStatement","src":"16516:11:15"}},"id":2916,"nodeType":"IfStatement","src":"16425:203:15","trueBody":{"expression":{"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"16455:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2885,"nodeType":"ExpressionStatement","src":"16455:11:15"}}]},{"expression":{"id":2918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"16656:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2867,"id":2919,"nodeType":"Return","src":"16649:12:15"}]},"id":2921,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:15","nodeType":"FunctionDefinition","parameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"chr","nameLocation":"16173:3:15","nodeType":"VariableDeclaration","scope":2921,"src":"16166:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2862,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:15"},"returnParameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2921,"src":"16200:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2865,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:15"},"scope":3100,"src":"16144:524:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3086,"nodeType":"Block","src":"17334:1331:15","statements":[{"assignments":[2930],"declarations":[{"constant":false,"id":2930,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:15","nodeType":"VariableDeclaration","scope":3086,"src":"17344:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2929,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2935,"initialValue":{"arguments":[{"id":2933,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"17372:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2931,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:15","typeDescriptions":{}}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:15"},{"assignments":[2937],"declarations":[{"constant":false,"id":2937,"mutability":"mutable","name":"output","nameLocation":"17401:6:15","nodeType":"VariableDeclaration","scope":3086,"src":"17388:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2936,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2945,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2941,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"17424:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:15","memberName":"length","nodeType":"MemberAccess","src":"17424:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2938,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:15"},{"assignments":[2947],"declarations":[{"constant":false,"id":2947,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:15","nodeType":"VariableDeclaration","scope":3086,"src":"17471:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2946,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2949,"initialValue":{"hexValue":"30","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:15"},{"body":{"id":3078,"nodeType":"Block","src":"17546:854:15","statements":[{"assignments":[2961],"declarations":[{"constant":false,"id":2961,"mutability":"mutable","name":"char","nameLocation":"17567:4:15","nodeType":"VariableDeclaration","scope":3078,"src":"17560:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2960,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2969,"initialValue":{"arguments":[{"arguments":[{"id":2965,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"17604:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2966,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"17612:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2964,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"17581:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2962,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:15","typeDescriptions":{}}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:15"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2970,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"17635:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":2974,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"17670:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2972,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:15","typeDescriptions":{}}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3076,"nodeType":"Block","src":"18328:62:15","statements":[{"expression":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3069,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"18346:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3072,"indexExpression":{"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:15","subExpression":{"id":3070,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"18353:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3073,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"18371:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3075,"nodeType":"ExpressionStatement","src":"18346:29:15"}]},"id":3077,"nodeType":"IfStatement","src":"17629:761:15","trueBody":{"id":3068,"nodeType":"Block","src":"17685:637:15","statements":[{"expression":{"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2983,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"17703:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2986,"indexExpression":{"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:15","subExpression":{"id":2984,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"17710:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2989,"nodeType":"ExpressionStatement","src":"17703:29:15"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2990,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"17754:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3000,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"17823:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3010,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"17892:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3020,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"17961:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:15","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3030,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"18030:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:15","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3040,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"18099:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:15","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3050,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"18169:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3061,"nodeType":"IfStatement","src":"18165:143:15","trueBody":{"id":3060,"nodeType":"Block","src":"18183:125:15","statements":[{"expression":{"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3053,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"18261:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3056,"indexExpression":{"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:15","subExpression":{"id":3054,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"18268:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3059,"nodeType":"ExpressionStatement","src":"18261:28:15"}]}},"id":3062,"nodeType":"IfStatement","src":"18095:213:15","trueBody":{"expression":{"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3043,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"18113:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3046,"indexExpression":{"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:15","subExpression":{"id":3044,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"18120:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3049,"nodeType":"ExpressionStatement","src":"18113:29:15"}},"id":3063,"nodeType":"IfStatement","src":"18026:282:15","trueBody":{"expression":{"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3033,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"18044:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3036,"indexExpression":{"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:15","subExpression":{"id":3034,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"18051:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3039,"nodeType":"ExpressionStatement","src":"18044:28:15"}},"id":3064,"nodeType":"IfStatement","src":"17957:351:15","trueBody":{"expression":{"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3023,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"17975:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3026,"indexExpression":{"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:15","subExpression":{"id":3024,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"17982:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3029,"nodeType":"ExpressionStatement","src":"17975:28:15"}},"id":3065,"nodeType":"IfStatement","src":"17888:420:15","trueBody":{"expression":{"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3013,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"17906:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3016,"indexExpression":{"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:15","subExpression":{"id":3014,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"17913:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3019,"nodeType":"ExpressionStatement","src":"17906:28:15"}},"id":3066,"nodeType":"IfStatement","src":"17819:489:15","trueBody":{"expression":{"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3003,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"17837:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3006,"indexExpression":{"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:15","subExpression":{"id":3004,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"17844:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3009,"nodeType":"ExpressionStatement","src":"17837:28:15"}},"id":3067,"nodeType":"IfStatement","src":"17750:558:15","trueBody":{"expression":{"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2993,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"17768:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2996,"indexExpression":{"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:15","subExpression":{"id":2994,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"17775:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2999,"nodeType":"ExpressionStatement","src":"17768:28:15"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2953,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"17522:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2954,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"17526:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:15","memberName":"length","nodeType":"MemberAccess","src":"17526:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3079,"initializationExpression":{"assignments":[2951],"declarations":[{"constant":false,"id":2951,"mutability":"mutable","name":"i","nameLocation":"17519:1:15","nodeType":"VariableDeclaration","scope":3079,"src":"17511:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2950,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2952,"nodeType":"VariableDeclarationStatement","src":"17511:9:15"},"loopExpression":{"expression":{"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:15","subExpression":{"id":2957,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"17543:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2959,"nodeType":"ExpressionStatement","src":"17541:3:15"},"nodeType":"ForStatement","src":"17506:894:15"},{"AST":{"nodeType":"YulBlock","src":"18498:129:15","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18519:6:15"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18527:12:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18512:6:15"},"nodeType":"YulFunctionCall","src":"18512:28:15"},"nodeType":"YulExpressionStatement","src":"18512:28:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:4:15","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18570:6:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18582:1:15","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18589:1:15","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18596:12:15"},{"kind":"number","nodeType":"YulLiteral","src":"18610:2:15","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18592:3:15"},"nodeType":"YulFunctionCall","src":"18592:21:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18585:3:15"},"nodeType":"YulFunctionCall","src":"18585:29:15"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18578:3:15"},"nodeType":"YulFunctionCall","src":"18578:37:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18566:3:15"},"nodeType":"YulFunctionCall","src":"18566:50:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18553:6:15"},"nodeType":"YulFunctionCall","src":"18553:64:15"},"nodeType":"YulExpressionStatement","src":"18553:64:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":2937,"isOffset":false,"isSlot":false,"src":"18519:6:15","valueSize":1},{"declaration":2937,"isOffset":false,"isSlot":false,"src":"18570:6:15","valueSize":1},{"declaration":2947,"isOffset":false,"isSlot":false,"src":"18527:12:15","valueSize":1},{"declaration":2947,"isOffset":false,"isSlot":false,"src":"18596:12:15","valueSize":1}],"flags":["memory-safe"],"id":3080,"nodeType":"InlineAssembly","src":"18473:154:15"},{"expression":{"arguments":[{"id":3083,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"18651:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3081,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:15","typeDescriptions":{}}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2928,"id":3085,"nodeType":"Return","src":"18637:21:15"}]},"documentation":{"id":2922,"nodeType":"StructuredDocumentation","src":"16674:576:15","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3087,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:15","nodeType":"FunctionDefinition","parameters":{"id":2925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2924,"mutability":"mutable","name":"input","nameLocation":"17289:5:15","nodeType":"VariableDeclaration","scope":3087,"src":"17275:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2923,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:15"},"returnParameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3087,"src":"17319:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2926,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:15"},"scope":3100,"src":"17255:1410:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3098,"nodeType":"Block","src":"19050:225:15","statements":[{"AST":{"nodeType":"YulBlock","src":"19199:70:15","statements":[{"nodeType":"YulAssignment","src":"19213:46:15","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19232:6:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19244:4:15","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"19250:6:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19240:3:15"},"nodeType":"YulFunctionCall","src":"19240:17:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19228:3:15"},"nodeType":"YulFunctionCall","src":"19228:30:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19222:5:15"},"nodeType":"YulFunctionCall","src":"19222:37:15"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19213:5:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3090,"isOffset":false,"isSlot":false,"src":"19232:6:15","valueSize":1},{"declaration":3092,"isOffset":false,"isSlot":false,"src":"19250:6:15","valueSize":1},{"declaration":3095,"isOffset":false,"isSlot":false,"src":"19213:5:15","valueSize":1}],"flags":["memory-safe"],"id":3097,"nodeType":"InlineAssembly","src":"19174:95:15"}]},"documentation":{"id":3088,"nodeType":"StructuredDocumentation","src":"18671:268:15","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3099,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:15","nodeType":"FunctionDefinition","parameters":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3090,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:15","nodeType":"VariableDeclaration","scope":3099,"src":"18976:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3089,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3092,"mutability":"mutable","name":"offset","nameLocation":"19005:6:15","nodeType":"VariableDeclaration","scope":3099,"src":"18997:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3091,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:15"},"returnParameters":{"id":3096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3095,"mutability":"mutable","name":"value","nameLocation":"19043:5:15","nodeType":"VariableDeclaration","scope":3099,"src":"19035:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:15"},"scope":3100,"src":"18944:331:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3101,"src":"297:18980:15","usedErrors":[1758,1761,1764],"usedEvents":[]}],"src":"101:19177:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3448]},"id":3449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3102,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3103,"nodeType":"StructuredDocumentation","src":"138:205:16","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3448,"linearizedBaseContracts":[3448],"name":"ECDSA","nameLocation":"352:5:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3108,"members":[{"id":3104,"name":"NoError","nameLocation":"392:7:16","nodeType":"EnumValue","src":"392:7:16"},{"id":3105,"name":"InvalidSignature","nameLocation":"409:16:16","nodeType":"EnumValue","src":"409:16:16"},{"id":3106,"name":"InvalidSignatureLength","nameLocation":"435:22:16","nodeType":"EnumValue","src":"435:22:16"},{"id":3107,"name":"InvalidSignatureS","nameLocation":"467:17:16","nodeType":"EnumValue","src":"467:17:16"}],"name":"RecoverError","nameLocation":"369:12:16","nodeType":"EnumDefinition","src":"364:126:16"},{"documentation":{"id":3109,"nodeType":"StructuredDocumentation","src":"496:63:16","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3111,"name":"ECDSAInvalidSignature","nameLocation":"570:21:16","nodeType":"ErrorDefinition","parameters":{"id":3110,"nodeType":"ParameterList","parameters":[],"src":"591:2:16"},"src":"564:30:16"},{"documentation":{"id":3112,"nodeType":"StructuredDocumentation","src":"600:60:16","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3116,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:16","nodeType":"ErrorDefinition","parameters":{"id":3115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3114,"mutability":"mutable","name":"length","nameLocation":"707:6:16","nodeType":"VariableDeclaration","scope":3116,"src":"699:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:16"},"src":"665:50:16"},{"documentation":{"id":3117,"nodeType":"StructuredDocumentation","src":"721:85:16","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3121,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:16","nodeType":"ErrorDefinition","parameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"s","nameLocation":"848:1:16","nodeType":"VariableDeclaration","scope":3121,"src":"840:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:16"},"src":"811:40:16"},{"body":{"id":3173,"nodeType":"Block","src":"2285:622:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3136,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"2299:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:16","memberName":"length","nodeType":"MemberAccess","src":"2299:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3171,"nodeType":"Block","src":"2793:108:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3158,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:16","typeDescriptions":{}}},"id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3162,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"2827:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3108_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3106,"src":"2827:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3166,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"2872:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:16","memberName":"length","nodeType":"MemberAccess","src":"2872:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:16","typeDescriptions":{}}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3108_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3135,"id":3170,"nodeType":"Return","src":"2807:83:16"}]},"id":3172,"nodeType":"IfStatement","src":"2295:606:16","trueBody":{"id":3157,"nodeType":"Block","src":"2323:464:16","statements":[{"assignments":[3141],"declarations":[{"constant":false,"id":3141,"mutability":"mutable","name":"r","nameLocation":"2345:1:16","nodeType":"VariableDeclaration","scope":3157,"src":"2337:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3142,"nodeType":"VariableDeclarationStatement","src":"2337:9:16"},{"assignments":[3144],"declarations":[{"constant":false,"id":3144,"mutability":"mutable","name":"s","nameLocation":"2368:1:16","nodeType":"VariableDeclaration","scope":3157,"src":"2360:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3145,"nodeType":"VariableDeclarationStatement","src":"2360:9:16"},{"assignments":[3147],"declarations":[{"constant":false,"id":3147,"mutability":"mutable","name":"v","nameLocation":"2389:1:16","nodeType":"VariableDeclaration","scope":3157,"src":"2383:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3146,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3148,"nodeType":"VariableDeclarationStatement","src":"2383:7:16"},{"AST":{"nodeType":"YulBlock","src":"2560:171:16","statements":[{"nodeType":"YulAssignment","src":"2578:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:16"},"nodeType":"YulFunctionCall","src":"2589:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:16"},"nodeType":"YulFunctionCall","src":"2583:27:16"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:16"}]},{"nodeType":"YulAssignment","src":"2627:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:16"},"nodeType":"YulFunctionCall","src":"2638:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:16"},"nodeType":"YulFunctionCall","src":"2632:27:16"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:16"}]},{"nodeType":"YulAssignment","src":"2676:41:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:16","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:16"},"nodeType":"YulFunctionCall","src":"2695:20:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:16"},"nodeType":"YulFunctionCall","src":"2689:27:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:16"},"nodeType":"YulFunctionCall","src":"2681:36:16"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3141,"isOffset":false,"isSlot":false,"src":"2578:1:16","valueSize":1},{"declaration":3144,"isOffset":false,"isSlot":false,"src":"2627:1:16","valueSize":1},{"declaration":3126,"isOffset":false,"isSlot":false,"src":"2593:9:16","valueSize":1},{"declaration":3126,"isOffset":false,"isSlot":false,"src":"2642:9:16","valueSize":1},{"declaration":3126,"isOffset":false,"isSlot":false,"src":"2699:9:16","valueSize":1},{"declaration":3147,"isOffset":false,"isSlot":false,"src":"2676:1:16","valueSize":1}],"flags":["memory-safe"],"id":3149,"nodeType":"InlineAssembly","src":"2535:196:16"},{"expression":{"arguments":[{"id":3151,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"2762:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3152,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"2768:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3153,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"2771:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3154,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"2774:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3150,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3174,3254,3362],"referencedDeclaration":3362,"src":"2751:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3108_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3108_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3135,"id":3156,"nodeType":"Return","src":"2744:32:16"}]}}]},"documentation":{"id":3122,"nodeType":"StructuredDocumentation","src":"857:1267:16","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3174,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:16","nodeType":"FunctionDefinition","parameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"hash","nameLocation":"2166:4:16","nodeType":"VariableDeclaration","scope":3174,"src":"2158:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3126,"mutability":"mutable","name":"signature","nameLocation":"2193:9:16","nodeType":"VariableDeclaration","scope":3174,"src":"2180:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3125,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:16"},"returnParameters":{"id":3135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3129,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:16","nodeType":"VariableDeclaration","scope":3174,"src":"2232:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3128,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3132,"mutability":"mutable","name":"err","nameLocation":"2264:3:16","nodeType":"VariableDeclaration","scope":3174,"src":"2251:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3131,"nodeType":"UserDefinedTypeName","pathNode":{"id":3130,"name":"RecoverError","nameLocations":["2251:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3108,"src":"2251:12:16"},"referencedDeclaration":3108,"src":"2251:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3134,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:16","nodeType":"VariableDeclaration","scope":3174,"src":"2269:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:16"},"scope":3448,"src":"2129:778:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3203,"nodeType":"Block","src":"3801:168:16","statements":[{"assignments":[3185,3188,3190],"declarations":[{"constant":false,"id":3185,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:16","nodeType":"VariableDeclaration","scope":3203,"src":"3812:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3184,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3188,"mutability":"mutable","name":"error","nameLocation":"3844:5:16","nodeType":"VariableDeclaration","scope":3203,"src":"3831:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3187,"nodeType":"UserDefinedTypeName","pathNode":{"id":3186,"name":"RecoverError","nameLocations":["3831:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3108,"src":"3831:12:16"},"referencedDeclaration":3108,"src":"3831:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3190,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:16","nodeType":"VariableDeclaration","scope":3203,"src":"3851:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3195,"initialValue":{"arguments":[{"id":3192,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"3882:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3193,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"3888:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3191,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3174,3254,3362],"referencedDeclaration":3174,"src":"3871:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3108_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3108_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:16"},{"expression":{"arguments":[{"id":3197,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"3920:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},{"id":3198,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"3927:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3196,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"3908:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3108_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3200,"nodeType":"ExpressionStatement","src":"3908:28:16"},{"expression":{"id":3201,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"3953:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3183,"id":3202,"nodeType":"Return","src":"3946:16:16"}]},"documentation":{"id":3175,"nodeType":"StructuredDocumentation","src":"2913:796:16","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3204,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:16","nodeType":"FunctionDefinition","parameters":{"id":3180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3177,"mutability":"mutable","name":"hash","nameLocation":"3739:4:16","nodeType":"VariableDeclaration","scope":3204,"src":"3731:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3176,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3179,"mutability":"mutable","name":"signature","nameLocation":"3758:9:16","nodeType":"VariableDeclaration","scope":3204,"src":"3745:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3178,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:16"},"returnParameters":{"id":3183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3204,"src":"3792:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3181,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:16"},"scope":3448,"src":"3714:255:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3253,"nodeType":"Block","src":"4348:342:16","statements":[{"id":3252,"nodeType":"UncheckedBlock","src":"4358:326:16","statements":[{"assignments":[3222],"declarations":[{"constant":false,"id":3222,"mutability":"mutable","name":"s","nameLocation":"4390:1:16","nodeType":"VariableDeclaration","scope":3252,"src":"4382:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3229,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3223,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"4394:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:16","typeDescriptions":{}}},"id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:16"},{"assignments":[3231],"declarations":[{"constant":false,"id":3231,"mutability":"mutable","name":"v","nameLocation":"4591:1:16","nodeType":"VariableDeclaration","scope":3252,"src":"4585:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3230,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3244,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3236,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"4610:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3234,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:16","typeDescriptions":{}}},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:16","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3232,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:16","typeDescriptions":{}}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:16"},{"expression":{"arguments":[{"id":3246,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"4659:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3247,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"4665:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3248,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"4668:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3249,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"4671:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3245,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3174,3254,3362],"referencedDeclaration":3362,"src":"4648:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3108_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3108_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3220,"id":3251,"nodeType":"Return","src":"4641:32:16"}]}]},"documentation":{"id":3205,"nodeType":"StructuredDocumentation","src":"3975:205:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3254,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:16","nodeType":"FunctionDefinition","parameters":{"id":3212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"mutability":"mutable","name":"hash","nameLocation":"4222:4:16","nodeType":"VariableDeclaration","scope":3254,"src":"4214:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3209,"mutability":"mutable","name":"r","nameLocation":"4244:1:16","nodeType":"VariableDeclaration","scope":3254,"src":"4236:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3211,"mutability":"mutable","name":"vs","nameLocation":"4263:2:16","nodeType":"VariableDeclaration","scope":3254,"src":"4255:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:16"},"returnParameters":{"id":3220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:16","nodeType":"VariableDeclaration","scope":3254,"src":"4295:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3213,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3217,"mutability":"mutable","name":"err","nameLocation":"4327:3:16","nodeType":"VariableDeclaration","scope":3254,"src":"4314:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3216,"nodeType":"UserDefinedTypeName","pathNode":{"id":3215,"name":"RecoverError","nameLocations":["4314:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3108,"src":"4314:12:16"},"referencedDeclaration":3108,"src":"4314:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3219,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:16","nodeType":"VariableDeclaration","scope":3254,"src":"4332:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:16"},"scope":3448,"src":"4185:505:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3286,"nodeType":"Block","src":"4903:164:16","statements":[{"assignments":[3267,3270,3272],"declarations":[{"constant":false,"id":3267,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:16","nodeType":"VariableDeclaration","scope":3286,"src":"4914:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3266,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3270,"mutability":"mutable","name":"error","nameLocation":"4946:5:16","nodeType":"VariableDeclaration","scope":3286,"src":"4933:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3269,"nodeType":"UserDefinedTypeName","pathNode":{"id":3268,"name":"RecoverError","nameLocations":["4933:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3108,"src":"4933:12:16"},"referencedDeclaration":3108,"src":"4933:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:16","nodeType":"VariableDeclaration","scope":3286,"src":"4953:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3271,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3278,"initialValue":{"arguments":[{"id":3274,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"4984:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3275,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"4990:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3276,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"4993:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3273,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3174,3254,3362],"referencedDeclaration":3254,"src":"4973:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3108_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3108_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:16"},{"expression":{"arguments":[{"id":3280,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"5018:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},{"id":3281,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"5025:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3279,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"5006:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3108_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3283,"nodeType":"ExpressionStatement","src":"5006:28:16"},{"expression":{"id":3284,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"5051:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3265,"id":3285,"nodeType":"Return","src":"5044:16:16"}]},"documentation":{"id":3255,"nodeType":"StructuredDocumentation","src":"4696:116:16","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3287,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:16","nodeType":"FunctionDefinition","parameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"hash","nameLocation":"4842:4:16","nodeType":"VariableDeclaration","scope":3287,"src":"4834:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3256,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3259,"mutability":"mutable","name":"r","nameLocation":"4856:1:16","nodeType":"VariableDeclaration","scope":3287,"src":"4848:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3261,"mutability":"mutable","name":"vs","nameLocation":"4867:2:16","nodeType":"VariableDeclaration","scope":3287,"src":"4859:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:16"},"returnParameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3287,"src":"4894:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3263,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:16"},"scope":3448,"src":"4817:250:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3361,"nodeType":"Block","src":"5382:1372:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3308,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"6278:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3306,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:16","typeDescriptions":{}}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3322,"nodeType":"IfStatement","src":"6266:164:16","trueBody":{"id":3321,"nodeType":"Block","src":"6351:79:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3312,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:16","typeDescriptions":{}}},"id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3316,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"6385:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3108_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3107,"src":"6385:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},{"id":3318,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"6417:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3108_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3305,"id":3320,"nodeType":"Return","src":"6365:54:16"}]}},{"assignments":[3324],"declarations":[{"constant":false,"id":3324,"mutability":"mutable","name":"signer","nameLocation":"6532:6:16","nodeType":"VariableDeclaration","scope":3361,"src":"6524:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3323,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3331,"initialValue":{"arguments":[{"id":3326,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"6551:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3327,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"6557:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3328,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"6560:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3329,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"6563:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3325,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:16","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3332,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"6579:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3333,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:16","typeDescriptions":{}}},"id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3351,"nodeType":"IfStatement","src":"6575:113:16","trueBody":{"id":3350,"nodeType":"Block","src":"6601:87:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3338,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:16","typeDescriptions":{}}},"id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3342,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"6635:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3108_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3105,"src":"6635:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:16","typeDescriptions":{}}},"id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3108_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3305,"id":3349,"nodeType":"Return","src":"6615:62:16"}]}},{"expression":{"components":[{"id":3352,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3324,"src":"6706:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3353,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"6714:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3108_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3104,"src":"6714:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:16","typeDescriptions":{}}},"id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3108_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3305,"id":3360,"nodeType":"Return","src":"6698:49:16"}]},"documentation":{"id":3288,"nodeType":"StructuredDocumentation","src":"5073:125:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3362,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:16","nodeType":"FunctionDefinition","parameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"hash","nameLocation":"5240:4:16","nodeType":"VariableDeclaration","scope":3362,"src":"5232:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3292,"mutability":"mutable","name":"v","nameLocation":"5260:1:16","nodeType":"VariableDeclaration","scope":3362,"src":"5254:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3291,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3294,"mutability":"mutable","name":"r","nameLocation":"5279:1:16","nodeType":"VariableDeclaration","scope":3362,"src":"5271:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3296,"mutability":"mutable","name":"s","nameLocation":"5298:1:16","nodeType":"VariableDeclaration","scope":3362,"src":"5290:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:16"},"returnParameters":{"id":3305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3299,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:16","nodeType":"VariableDeclaration","scope":3362,"src":"5329:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3298,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3302,"mutability":"mutable","name":"err","nameLocation":"5361:3:16","nodeType":"VariableDeclaration","scope":3362,"src":"5348:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3301,"nodeType":"UserDefinedTypeName","pathNode":{"id":3300,"name":"RecoverError","nameLocations":["5348:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3108,"src":"5348:12:16"},"referencedDeclaration":3108,"src":"5348:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3304,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:16","nodeType":"VariableDeclaration","scope":3362,"src":"5366:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:16"},"scope":3448,"src":"5203:1551:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3397,"nodeType":"Block","src":"6981:166:16","statements":[{"assignments":[3377,3380,3382],"declarations":[{"constant":false,"id":3377,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:16","nodeType":"VariableDeclaration","scope":3397,"src":"6992:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3376,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3380,"mutability":"mutable","name":"error","nameLocation":"7024:5:16","nodeType":"VariableDeclaration","scope":3397,"src":"7011:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3379,"nodeType":"UserDefinedTypeName","pathNode":{"id":3378,"name":"RecoverError","nameLocations":["7011:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3108,"src":"7011:12:16"},"referencedDeclaration":3108,"src":"7011:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3382,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:16","nodeType":"VariableDeclaration","scope":3397,"src":"7031:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3389,"initialValue":{"arguments":[{"id":3384,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"7062:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3385,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"7068:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3386,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"7071:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3387,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"7074:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3383,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3174,3254,3362],"referencedDeclaration":3362,"src":"7051:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3108_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3108_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:16"},{"expression":{"arguments":[{"id":3391,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"7098:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},{"id":3392,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"7105:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3390,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"7086:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3108_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3394,"nodeType":"ExpressionStatement","src":"7086:28:16"},{"expression":{"id":3395,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"7131:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3375,"id":3396,"nodeType":"Return","src":"7124:16:16"}]},"documentation":{"id":3363,"nodeType":"StructuredDocumentation","src":"6760:122:16","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3398,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:16","nodeType":"FunctionDefinition","parameters":{"id":3372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"mutability":"mutable","name":"hash","nameLocation":"6912:4:16","nodeType":"VariableDeclaration","scope":3398,"src":"6904:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3367,"mutability":"mutable","name":"v","nameLocation":"6924:1:16","nodeType":"VariableDeclaration","scope":3398,"src":"6918:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3366,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3369,"mutability":"mutable","name":"r","nameLocation":"6935:1:16","nodeType":"VariableDeclaration","scope":3398,"src":"6927:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3371,"mutability":"mutable","name":"s","nameLocation":"6946:1:16","nodeType":"VariableDeclaration","scope":3398,"src":"6938:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:16"},"returnParameters":{"id":3375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3398,"src":"6972:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3373,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:16"},"scope":3448,"src":"6887:260:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3446,"nodeType":"Block","src":"7352:460:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3407,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"7366:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3408,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"7375:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3108_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3104,"src":"7375:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3413,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"7462:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3414,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"7471:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3108_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3105,"src":"7471:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3421,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"7567:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3422,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"7576:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3108_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3106,"src":"7576:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3433,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"7701:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3434,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"7710:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3108_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3107,"src":"7710:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3442,"nodeType":"IfStatement","src":"7697:109:16","trueBody":{"id":3441,"nodeType":"Block","src":"7742:64:16","statements":[{"errorCall":{"arguments":[{"id":3438,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"7786:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3437,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"7763:22:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3440,"nodeType":"RevertStatement","src":"7756:39:16"}]}},"id":3443,"nodeType":"IfStatement","src":"7563:243:16","trueBody":{"id":3432,"nodeType":"Block","src":"7613:78:16","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3428,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"7670:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3426,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:16","typeDescriptions":{}}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3425,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"7634:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3431,"nodeType":"RevertStatement","src":"7627:53:16"}]}},"id":3444,"nodeType":"IfStatement","src":"7458:348:16","trueBody":{"id":3420,"nodeType":"Block","src":"7502:55:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3417,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"7523:21:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3419,"nodeType":"RevertStatement","src":"7516:30:16"}]}},"id":3445,"nodeType":"IfStatement","src":"7362:444:16","trueBody":{"id":3412,"nodeType":"Block","src":"7397:55:16","statements":[{"functionReturnParameters":3406,"id":3411,"nodeType":"Return","src":"7411:7:16"}]}}]},"documentation":{"id":3399,"nodeType":"StructuredDocumentation","src":"7153:122:16","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3447,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:16","nodeType":"FunctionDefinition","parameters":{"id":3405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"error","nameLocation":"7314:5:16","nodeType":"VariableDeclaration","scope":3447,"src":"7301:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3401,"nodeType":"UserDefinedTypeName","pathNode":{"id":3400,"name":"RecoverError","nameLocations":["7301:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3108,"src":"7301:12:16"},"referencedDeclaration":3108,"src":"7301:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3108","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3404,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:16","nodeType":"VariableDeclaration","scope":3447,"src":"7321:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:16"},"returnParameters":{"id":3406,"nodeType":"ParameterList","parameters":[],"src":"7352:0:16"},"scope":3448,"src":"7280:532:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3449,"src":"344:7470:16","usedErrors":[3111,3116,3121],"usedEvents":[]}],"src":"112:7703:16"},"id":16},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3534],"Strings":[3100]},"id":3535,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3535,"sourceUnit":3101,"src":"149:39:17","symbolAliases":[{"foreign":{"id":3451,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"157:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3453,"nodeType":"StructuredDocumentation","src":"190:330:17","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3534,"linearizedBaseContracts":[3534],"name":"MessageHashUtils","nameLocation":"529:16:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3462,"nodeType":"Block","src":"1339:341:17","statements":[{"AST":{"nodeType":"YulBlock","src":"1374:300:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1395:4:17","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1401:34:17","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:17"},"nodeType":"YulFunctionCall","src":"1388:48:17"},"nodeType":"YulExpressionStatement","src":"1388:48:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:4:17","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1503:11:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1490:6:17"},"nodeType":"YulFunctionCall","src":"1490:25:17"},"nodeType":"YulExpressionStatement","src":"1490:25:17"},{"nodeType":"YulAssignment","src":"1569:31:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1589:4:17","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1595:4:17","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1579:9:17"},"nodeType":"YulFunctionCall","src":"1579:21:17"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1569:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3459,"isOffset":false,"isSlot":false,"src":"1569:6:17","valueSize":1},{"declaration":3456,"isOffset":false,"isSlot":false,"src":"1503:11:17","valueSize":1}],"flags":["memory-safe"],"id":3461,"nodeType":"InlineAssembly","src":"1349:325:17"}]},"documentation":{"id":3454,"nodeType":"StructuredDocumentation","src":"552:690:17","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3463,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:17","nodeType":"FunctionDefinition","parameters":{"id":3457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:17","nodeType":"VariableDeclaration","scope":3463,"src":"1279:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:17"},"returnParameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"digest","nameLocation":"1331:6:17","nodeType":"VariableDeclaration","scope":3463,"src":"1323:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:17"},"scope":3534,"src":"1247:433:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3488,"nodeType":"Block","src":"2257:143:17","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3480,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"2366:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:17","memberName":"length","nodeType":"MemberAccess","src":"2366:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3478,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"2349:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3100_$","typeString":"type(library Strings)"}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:17","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"2349:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3476,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:17","typeDescriptions":{}}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3484,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"2384:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3472,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:17","typeDescriptions":{}}},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:17","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:17","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3471,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3470,"id":3487,"nodeType":"Return","src":"2267:126:17"}]},"documentation":{"id":3464,"nodeType":"StructuredDocumentation","src":"1686:480:17","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3489,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:17","nodeType":"FunctionDefinition","parameters":{"id":3467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3466,"mutability":"mutable","name":"message","nameLocation":"2216:7:17","nodeType":"VariableDeclaration","scope":3489,"src":"2203:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3465,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:17"},"returnParameters":{"id":3470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3489,"src":"2248:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:17"},"scope":3534,"src":"2171:229:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3508,"nodeType":"Block","src":"2854:80:17","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3503,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"2910:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3504,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3494,"src":"2921:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3500,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3499,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3498,"id":3507,"nodeType":"Return","src":"2864:63:17"}]},"documentation":{"id":3490,"nodeType":"StructuredDocumentation","src":"2406:332:17","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3509,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:17","nodeType":"FunctionDefinition","parameters":{"id":3495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"mutability":"mutable","name":"validator","nameLocation":"2792:9:17","nodeType":"VariableDeclaration","scope":3509,"src":"2784:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3491,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3494,"mutability":"mutable","name":"data","nameLocation":"2816:4:17","nodeType":"VariableDeclaration","scope":3509,"src":"2803:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3493,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:17"},"returnParameters":{"id":3498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3509,"src":"2845:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:17"},"scope":3534,"src":"2743:191:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3520,"nodeType":"Block","src":"3216:216:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3251:175:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:4:17","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nodeType":"YulLiteral","src":"3278:10:17","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:17"},"nodeType":"YulFunctionCall","src":"3265:24:17"},"nodeType":"YulExpressionStatement","src":"3265:24:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3309:4:17","type":"","value":"0x02"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:17","type":"","value":"96"},{"name":"validator","nodeType":"YulIdentifier","src":"3323:9:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3315:3:17"},"nodeType":"YulFunctionCall","src":"3315:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:17"},"nodeType":"YulFunctionCall","src":"3302:32:17"},"nodeType":"YulExpressionStatement","src":"3302:32:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3354:4:17","type":"","value":"0x16"},{"name":"messageHash","nodeType":"YulIdentifier","src":"3360:11:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3347:6:17"},"nodeType":"YulFunctionCall","src":"3347:25:17"},"nodeType":"YulExpressionStatement","src":"3347:25:17"},{"nodeType":"YulAssignment","src":"3385:31:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3405:4:17","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:17","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3395:9:17"},"nodeType":"YulFunctionCall","src":"3395:21:17"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3385:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3517,"isOffset":false,"isSlot":false,"src":"3385:6:17","valueSize":1},{"declaration":3514,"isOffset":false,"isSlot":false,"src":"3360:11:17","valueSize":1},{"declaration":3512,"isOffset":false,"isSlot":false,"src":"3323:9:17","valueSize":1}],"flags":["memory-safe"],"id":3519,"nodeType":"InlineAssembly","src":"3226:200:17"}]},"documentation":{"id":3510,"nodeType":"StructuredDocumentation","src":"2940:129:17","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":3521,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:17","nodeType":"FunctionDefinition","parameters":{"id":3515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3512,"mutability":"mutable","name":"validator","nameLocation":"3132:9:17","nodeType":"VariableDeclaration","scope":3521,"src":"3124:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3511,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3514,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:17","nodeType":"VariableDeclaration","scope":3521,"src":"3151:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:17"},"returnParameters":{"id":3518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3517,"mutability":"mutable","name":"digest","nameLocation":"3208:6:17","nodeType":"VariableDeclaration","scope":3521,"src":"3200:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:17"},"scope":3534,"src":"3074:358:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3532,"nodeType":"Block","src":"3983:265:17","statements":[{"AST":{"nodeType":"YulBlock","src":"4018:224:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4032:22:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4049:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4043:5:17"},"nodeType":"YulFunctionCall","src":"4043:11:17"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"4036:3:17","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4074:3:17"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"4079:10:17","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:17"},"nodeType":"YulFunctionCall","src":"4067:23:17"},"nodeType":"YulExpressionStatement","src":"4067:23:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4114:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4119:4:17","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:17"},"nodeType":"YulFunctionCall","src":"4110:14:17"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"4126:15:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:17"},"nodeType":"YulFunctionCall","src":"4103:39:17"},"nodeType":"YulExpressionStatement","src":"4103:39:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4166:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4171:4:17","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:17"},"nodeType":"YulFunctionCall","src":"4162:14:17"},{"name":"structHash","nodeType":"YulIdentifier","src":"4178:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:17"},"nodeType":"YulFunctionCall","src":"4155:34:17"},"nodeType":"YulExpressionStatement","src":"4155:34:17"},{"nodeType":"YulAssignment","src":"4202:30:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4222:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"4227:4:17","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4212:9:17"},"nodeType":"YulFunctionCall","src":"4212:20:17"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"4202:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3529,"isOffset":false,"isSlot":false,"src":"4202:6:17","valueSize":1},{"declaration":3524,"isOffset":false,"isSlot":false,"src":"4126:15:17","valueSize":1},{"declaration":3526,"isOffset":false,"isSlot":false,"src":"4178:10:17","valueSize":1}],"flags":["memory-safe"],"id":3531,"nodeType":"InlineAssembly","src":"3993:249:17"}]},"documentation":{"id":3522,"nodeType":"StructuredDocumentation","src":"3438:431:17","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3533,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:17","nodeType":"FunctionDefinition","parameters":{"id":3527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3524,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:17","nodeType":"VariableDeclaration","scope":3533,"src":"3899:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3523,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3526,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:17","nodeType":"VariableDeclaration","scope":3533,"src":"3924:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:17"},"returnParameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"digest","nameLocation":"3975:6:17","nodeType":"VariableDeclaration","scope":3533,"src":"3967:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:17"},"scope":3534,"src":"3874:374:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3535,"src":"521:3729:17","usedErrors":[],"usedEvents":[]}],"src":"123:4128:17"},"id":17},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3546]},"id":3547,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3536,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3537,"nodeType":"StructuredDocumentation","src":"141:280:18","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3546,"linearizedBaseContracts":[3546],"name":"IERC165","nameLocation":"432:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3538,"nodeType":"StructuredDocumentation","src":"446:340:18","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3545,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:18","nodeType":"FunctionDefinition","parameters":{"id":3541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3540,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:18","nodeType":"VariableDeclaration","scope":3545,"src":"818:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3539,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:18"},"returnParameters":{"id":3544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3545,"src":"861:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3542,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:18"},"scope":3546,"src":"791:76:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3547,"src":"422:447:18","usedErrors":[],"usedEvents":[]}],"src":"115:755:18"},"id":18},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5167],"Panic":[1698],"SafeCast":[6932]},"id":5168,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3548,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3550,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5168,"sourceUnit":1699,"src":"129:35:19","symbolAliases":[{"foreign":{"id":3549,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"137:5:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3552,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5168,"sourceUnit":6933,"src":"165:40:19","symbolAliases":[{"foreign":{"id":3551,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"173:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3553,"nodeType":"StructuredDocumentation","src":"207:73:19","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5167,"linearizedBaseContracts":[5167],"name":"Math","nameLocation":"289:4:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3558,"members":[{"id":3554,"name":"Floor","nameLocation":"324:5:19","nodeType":"EnumValue","src":"324:5:19"},{"id":3555,"name":"Ceil","nameLocation":"367:4:19","nodeType":"EnumValue","src":"367:4:19"},{"id":3556,"name":"Trunc","nameLocation":"409:5:19","nodeType":"EnumValue","src":"409:5:19"},{"id":3557,"name":"Expand","nameLocation":"439:6:19","nodeType":"EnumValue","src":"439:6:19"}],"name":"Rounding","nameLocation":"305:8:19","nodeType":"EnumDefinition","src":"300:169:19"},{"body":{"id":3571,"nodeType":"Block","src":"731:112:19","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:19","statements":[{"nodeType":"YulAssignment","src":"780:16:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:19"},"nodeType":"YulFunctionCall","src":"787:9:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:19"}]},{"nodeType":"YulAssignment","src":"809:18:19","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:19"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:19"},"nodeType":"YulFunctionCall","src":"817:10:19"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3561,"isOffset":false,"isSlot":false,"src":"791:1:19","valueSize":1},{"declaration":3561,"isOffset":false,"isSlot":false,"src":"825:1:19","valueSize":1},{"declaration":3563,"isOffset":false,"isSlot":false,"src":"794:1:19","valueSize":1},{"declaration":3566,"isOffset":false,"isSlot":false,"src":"809:4:19","valueSize":1},{"declaration":3568,"isOffset":false,"isSlot":false,"src":"780:3:19","valueSize":1},{"declaration":3568,"isOffset":false,"isSlot":false,"src":"820:3:19","valueSize":1}],"flags":["memory-safe"],"id":3570,"nodeType":"InlineAssembly","src":"741:96:19"}]},"documentation":{"id":3559,"nodeType":"StructuredDocumentation","src":"475:163:19","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3572,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:19","nodeType":"FunctionDefinition","parameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3561,"mutability":"mutable","name":"a","nameLocation":"667:1:19","nodeType":"VariableDeclaration","scope":3572,"src":"659:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3560,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3563,"mutability":"mutable","name":"b","nameLocation":"678:1:19","nodeType":"VariableDeclaration","scope":3572,"src":"670:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:19"},"returnParameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"high","nameLocation":"712:4:19","nodeType":"VariableDeclaration","scope":3572,"src":"704:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3568,"mutability":"mutable","name":"low","nameLocation":"726:3:19","nodeType":"VariableDeclaration","scope":3572,"src":"718:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:19"},"scope":5167,"src":"643:200:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3585,"nodeType":"Block","src":"1115:462:19","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:19"},"nodeType":"YulFunctionCall","src":"1474:6:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:19"},"nodeType":"YulFunctionCall","src":"1461:20:19"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:19","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:19"},"nodeType":"YulFunctionCall","src":"1501:9:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:19"}]},{"nodeType":"YulAssignment","src":"1523:38:19","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:19"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:19"},"nodeType":"YulFunctionCall","src":"1535:12:19"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:19"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:19"},"nodeType":"YulFunctionCall","src":"1549:11:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:19"},"nodeType":"YulFunctionCall","src":"1531:30:19"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3575,"isOffset":false,"isSlot":false,"src":"1468:1:19","valueSize":1},{"declaration":3575,"isOffset":false,"isSlot":false,"src":"1505:1:19","valueSize":1},{"declaration":3577,"isOffset":false,"isSlot":false,"src":"1471:1:19","valueSize":1},{"declaration":3577,"isOffset":false,"isSlot":false,"src":"1508:1:19","valueSize":1},{"declaration":3580,"isOffset":false,"isSlot":false,"src":"1523:4:19","valueSize":1},{"declaration":3582,"isOffset":false,"isSlot":false,"src":"1494:3:19","valueSize":1},{"declaration":3582,"isOffset":false,"isSlot":false,"src":"1543:3:19","valueSize":1},{"declaration":3582,"isOffset":false,"isSlot":false,"src":"1556:3:19","valueSize":1}],"flags":["memory-safe"],"id":3584,"nodeType":"InlineAssembly","src":"1412:159:19"}]},"documentation":{"id":3573,"nodeType":"StructuredDocumentation","src":"849:173:19","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3586,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:19","nodeType":"FunctionDefinition","parameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"a","nameLocation":"1051:1:19","nodeType":"VariableDeclaration","scope":3586,"src":"1043:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3577,"mutability":"mutable","name":"b","nameLocation":"1062:1:19","nodeType":"VariableDeclaration","scope":3586,"src":"1054:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:19"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"high","nameLocation":"1096:4:19","nodeType":"VariableDeclaration","scope":3586,"src":"1088:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"low","nameLocation":"1110:3:19","nodeType":"VariableDeclaration","scope":3586,"src":"1102:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3581,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:19"},"scope":5167,"src":"1027:550:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3620,"nodeType":"Block","src":"1784:149:19","statements":[{"id":3619,"nodeType":"UncheckedBlock","src":"1794:133:19","statements":[{"assignments":[3599],"declarations":[{"constant":false,"id":3599,"mutability":"mutable","name":"c","nameLocation":"1826:1:19","nodeType":"VariableDeclaration","scope":3619,"src":"1818:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3598,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3603,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3600,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"1830:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3601,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"1834:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:19"},{"expression":{"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3604,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"1849:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3605,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"1859:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3606,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"1864:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3609,"nodeType":"ExpressionStatement","src":"1849:16:19"},{"expression":{"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3610,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3596,"src":"1879:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3611,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"1888:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3614,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3594,"src":"1908:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3612,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"1892:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"1892:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3618,"nodeType":"ExpressionStatement","src":"1879:37:19"}]}]},"documentation":{"id":3587,"nodeType":"StructuredDocumentation","src":"1583:105:19","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3621,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:19","nodeType":"FunctionDefinition","parameters":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3589,"mutability":"mutable","name":"a","nameLocation":"1717:1:19","nodeType":"VariableDeclaration","scope":3621,"src":"1709:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3591,"mutability":"mutable","name":"b","nameLocation":"1728:1:19","nodeType":"VariableDeclaration","scope":3621,"src":"1720:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3590,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:19"},"returnParameters":{"id":3597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3594,"mutability":"mutable","name":"success","nameLocation":"1759:7:19","nodeType":"VariableDeclaration","scope":3621,"src":"1754:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3593,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3596,"mutability":"mutable","name":"result","nameLocation":"1776:6:19","nodeType":"VariableDeclaration","scope":3621,"src":"1768:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3595,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:19"},"scope":5167,"src":"1693:240:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3655,"nodeType":"Block","src":"2143:149:19","statements":[{"id":3654,"nodeType":"UncheckedBlock","src":"2153:133:19","statements":[{"assignments":[3634],"declarations":[{"constant":false,"id":3634,"mutability":"mutable","name":"c","nameLocation":"2185:1:19","nodeType":"VariableDeclaration","scope":3654,"src":"2177:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3633,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3638,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3635,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"2189:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3636,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"2193:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:19"},{"expression":{"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3639,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"2208:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3640,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"2218:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"2223:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3644,"nodeType":"ExpressionStatement","src":"2208:16:19"},{"expression":{"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3645,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"2238:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3646,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"2247:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3649,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"2267:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3647,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"2251:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"2251:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3653,"nodeType":"ExpressionStatement","src":"2238:37:19"}]}]},"documentation":{"id":3622,"nodeType":"StructuredDocumentation","src":"1939:108:19","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3656,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:19","nodeType":"FunctionDefinition","parameters":{"id":3627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"a","nameLocation":"2076:1:19","nodeType":"VariableDeclaration","scope":3656,"src":"2068:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3626,"mutability":"mutable","name":"b","nameLocation":"2087:1:19","nodeType":"VariableDeclaration","scope":3656,"src":"2079:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3625,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:19"},"returnParameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3629,"mutability":"mutable","name":"success","nameLocation":"2118:7:19","nodeType":"VariableDeclaration","scope":3656,"src":"2113:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3628,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3631,"mutability":"mutable","name":"result","nameLocation":"2135:6:19","nodeType":"VariableDeclaration","scope":3656,"src":"2127:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3630,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:19"},"scope":5167,"src":"2052:240:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3685,"nodeType":"Block","src":"2505:391:19","statements":[{"id":3684,"nodeType":"UncheckedBlock","src":"2515:375:19","statements":[{"assignments":[3669],"declarations":[{"constant":false,"id":3669,"mutability":"mutable","name":"c","nameLocation":"2547:1:19","nodeType":"VariableDeclaration","scope":3684,"src":"2539:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3673,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3670,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"2551:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3671,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3661,"src":"2555:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:19"},{"AST":{"nodeType":"YulBlock","src":"2595:188:19","statements":[{"nodeType":"YulAssignment","src":"2727:42:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:19"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:19"},"nodeType":"YulFunctionCall","src":"2744:9:19"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:19"},"nodeType":"YulFunctionCall","src":"2741:16:19"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:19"},"nodeType":"YulFunctionCall","src":"2759:9:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:19"},"nodeType":"YulFunctionCall","src":"2738:31:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3659,"isOffset":false,"isSlot":false,"src":"2751:1:19","valueSize":1},{"declaration":3659,"isOffset":false,"isSlot":false,"src":"2766:1:19","valueSize":1},{"declaration":3661,"isOffset":false,"isSlot":false,"src":"2755:1:19","valueSize":1},{"declaration":3669,"isOffset":false,"isSlot":false,"src":"2748:1:19","valueSize":1},{"declaration":3664,"isOffset":false,"isSlot":false,"src":"2727:7:19","valueSize":1}],"flags":["memory-safe"],"id":3674,"nodeType":"InlineAssembly","src":"2570:213:19"},{"expression":{"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3675,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"2842:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3676,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"2851:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3679,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"2871:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3677,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"2855:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"2855:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3683,"nodeType":"ExpressionStatement","src":"2842:37:19"}]}]},"documentation":{"id":3657,"nodeType":"StructuredDocumentation","src":"2298:111:19","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3686,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:19","nodeType":"FunctionDefinition","parameters":{"id":3662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3659,"mutability":"mutable","name":"a","nameLocation":"2438:1:19","nodeType":"VariableDeclaration","scope":3686,"src":"2430:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3661,"mutability":"mutable","name":"b","nameLocation":"2449:1:19","nodeType":"VariableDeclaration","scope":3686,"src":"2441:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:19"},"returnParameters":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3664,"mutability":"mutable","name":"success","nameLocation":"2480:7:19","nodeType":"VariableDeclaration","scope":3686,"src":"2475:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3663,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3666,"mutability":"mutable","name":"result","nameLocation":"2497:6:19","nodeType":"VariableDeclaration","scope":3686,"src":"2489:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3665,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:19"},"scope":5167,"src":"2414:482:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3706,"nodeType":"Block","src":"3111:231:19","statements":[{"id":3705,"nodeType":"UncheckedBlock","src":"3121:215:19","statements":[{"expression":{"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3698,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"3145:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3699,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"3155:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3703,"nodeType":"ExpressionStatement","src":"3145:15:19"},{"AST":{"nodeType":"YulBlock","src":"3199:127:19","statements":[{"nodeType":"YulAssignment","src":"3293:19:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:19"},"nodeType":"YulFunctionCall","src":"3303:9:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3689,"isOffset":false,"isSlot":false,"src":"3307:1:19","valueSize":1},{"declaration":3691,"isOffset":false,"isSlot":false,"src":"3310:1:19","valueSize":1},{"declaration":3696,"isOffset":false,"isSlot":false,"src":"3293:6:19","valueSize":1}],"flags":["memory-safe"],"id":3704,"nodeType":"InlineAssembly","src":"3174:152:19"}]}]},"documentation":{"id":3687,"nodeType":"StructuredDocumentation","src":"2902:113:19","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3707,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:19","nodeType":"FunctionDefinition","parameters":{"id":3692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3689,"mutability":"mutable","name":"a","nameLocation":"3044:1:19","nodeType":"VariableDeclaration","scope":3707,"src":"3036:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3688,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3691,"mutability":"mutable","name":"b","nameLocation":"3055:1:19","nodeType":"VariableDeclaration","scope":3707,"src":"3047:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3690,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:19"},"returnParameters":{"id":3697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"success","nameLocation":"3086:7:19","nodeType":"VariableDeclaration","scope":3707,"src":"3081:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3693,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3696,"mutability":"mutable","name":"result","nameLocation":"3103:6:19","nodeType":"VariableDeclaration","scope":3707,"src":"3095:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3695,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:19"},"scope":5167,"src":"3020:322:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3727,"nodeType":"Block","src":"3567:231:19","statements":[{"id":3726,"nodeType":"UncheckedBlock","src":"3577:215:19","statements":[{"expression":{"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3719,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"3601:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3720,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"3611:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3724,"nodeType":"ExpressionStatement","src":"3601:15:19"},{"AST":{"nodeType":"YulBlock","src":"3655:127:19","statements":[{"nodeType":"YulAssignment","src":"3749:19:19","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:19"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:19"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:19"},"nodeType":"YulFunctionCall","src":"3759:9:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3710,"isOffset":false,"isSlot":false,"src":"3763:1:19","valueSize":1},{"declaration":3712,"isOffset":false,"isSlot":false,"src":"3766:1:19","valueSize":1},{"declaration":3717,"isOffset":false,"isSlot":false,"src":"3749:6:19","valueSize":1}],"flags":["memory-safe"],"id":3725,"nodeType":"InlineAssembly","src":"3630:152:19"}]}]},"documentation":{"id":3708,"nodeType":"StructuredDocumentation","src":"3348:123:19","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3728,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:19","nodeType":"FunctionDefinition","parameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3710,"mutability":"mutable","name":"a","nameLocation":"3500:1:19","nodeType":"VariableDeclaration","scope":3728,"src":"3492:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3709,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3712,"mutability":"mutable","name":"b","nameLocation":"3511:1:19","nodeType":"VariableDeclaration","scope":3728,"src":"3503:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:19"},"returnParameters":{"id":3718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"success","nameLocation":"3542:7:19","nodeType":"VariableDeclaration","scope":3728,"src":"3537:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3714,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3717,"mutability":"mutable","name":"result","nameLocation":"3559:6:19","nodeType":"VariableDeclaration","scope":3728,"src":"3551:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3716,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:19"},"scope":5167,"src":"3476:322:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3757,"nodeType":"Block","src":"3989:122:19","statements":[{"assignments":[3739,3741],"declarations":[{"constant":false,"id":3739,"mutability":"mutable","name":"success","nameLocation":"4005:7:19","nodeType":"VariableDeclaration","scope":3757,"src":"4000:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3738,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3741,"mutability":"mutable","name":"result","nameLocation":"4022:6:19","nodeType":"VariableDeclaration","scope":3757,"src":"4014:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3740,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3746,"initialValue":{"arguments":[{"id":3743,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3731,"src":"4039:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3744,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"4042:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3742,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"4032:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:19"},{"expression":{"arguments":[{"id":3748,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"4069:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3749,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"4078:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3751,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3750,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:19","memberName":"max","nodeType":"MemberAccess","src":"4086:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3747,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"4061:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3737,"id":3756,"nodeType":"Return","src":"4054:50:19"}]},"documentation":{"id":3729,"nodeType":"StructuredDocumentation","src":"3804:103:19","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3758,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:19","nodeType":"FunctionDefinition","parameters":{"id":3734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3731,"mutability":"mutable","name":"a","nameLocation":"3943:1:19","nodeType":"VariableDeclaration","scope":3758,"src":"3935:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3730,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3733,"mutability":"mutable","name":"b","nameLocation":"3954:1:19","nodeType":"VariableDeclaration","scope":3758,"src":"3946:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3732,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:19"},"returnParameters":{"id":3737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3758,"src":"3980:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3735,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:19"},"scope":5167,"src":"3912:199:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3777,"nodeType":"Block","src":"4294:73:19","statements":[{"assignments":[null,3769],"declarations":[null,{"constant":false,"id":3769,"mutability":"mutable","name":"result","nameLocation":"4315:6:19","nodeType":"VariableDeclaration","scope":3777,"src":"4307:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3768,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3774,"initialValue":{"arguments":[{"id":3771,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3761,"src":"4332:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3772,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"4335:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3770,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3656,"src":"4325:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:19"},{"expression":{"id":3775,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"4354:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3767,"id":3776,"nodeType":"Return","src":"4347:13:19"}]},"documentation":{"id":3759,"nodeType":"StructuredDocumentation","src":"4117:95:19","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3778,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:19","nodeType":"FunctionDefinition","parameters":{"id":3764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3761,"mutability":"mutable","name":"a","nameLocation":"4248:1:19","nodeType":"VariableDeclaration","scope":3778,"src":"4240:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3760,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3763,"mutability":"mutable","name":"b","nameLocation":"4259:1:19","nodeType":"VariableDeclaration","scope":3778,"src":"4251:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3762,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:19"},"returnParameters":{"id":3767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3778,"src":"4285:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3765,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:19"},"scope":5167,"src":"4217:150:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3807,"nodeType":"Block","src":"4564:122:19","statements":[{"assignments":[3789,3791],"declarations":[{"constant":false,"id":3789,"mutability":"mutable","name":"success","nameLocation":"4580:7:19","nodeType":"VariableDeclaration","scope":3807,"src":"4575:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3788,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3791,"mutability":"mutable","name":"result","nameLocation":"4597:6:19","nodeType":"VariableDeclaration","scope":3807,"src":"4589:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3796,"initialValue":{"arguments":[{"id":3793,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"4614:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3794,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3783,"src":"4617:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3792,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"4607:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:19"},{"expression":{"arguments":[{"id":3798,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"4644:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3799,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3791,"src":"4653:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3800,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:19","memberName":"max","nodeType":"MemberAccess","src":"4661:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3797,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"4636:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3787,"id":3806,"nodeType":"Return","src":"4629:50:19"}]},"documentation":{"id":3779,"nodeType":"StructuredDocumentation","src":"4373:109:19","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3808,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:19","nodeType":"FunctionDefinition","parameters":{"id":3784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3781,"mutability":"mutable","name":"a","nameLocation":"4518:1:19","nodeType":"VariableDeclaration","scope":3808,"src":"4510:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3780,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3783,"mutability":"mutable","name":"b","nameLocation":"4529:1:19","nodeType":"VariableDeclaration","scope":3808,"src":"4521:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3782,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:19"},"returnParameters":{"id":3787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3808,"src":"4555:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3785,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:19"},"scope":5167,"src":"4487:199:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3834,"nodeType":"Block","src":"5158:207:19","statements":[{"id":3833,"nodeType":"UncheckedBlock","src":"5168:191:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3820,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"5306:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3821,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"5312:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3822,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"5316:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3827,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"5337:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3825,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"5321:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"5321:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3830,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3819,"id":3832,"nodeType":"Return","src":"5299:49:19"}]}]},"documentation":{"id":3809,"nodeType":"StructuredDocumentation","src":"4692:374:19","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3835,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:19","nodeType":"FunctionDefinition","parameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3811,"mutability":"mutable","name":"condition","nameLocation":"5093:9:19","nodeType":"VariableDeclaration","scope":3835,"src":"5088:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3810,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"a","nameLocation":"5112:1:19","nodeType":"VariableDeclaration","scope":3835,"src":"5104:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3812,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3815,"mutability":"mutable","name":"b","nameLocation":"5123:1:19","nodeType":"VariableDeclaration","scope":3835,"src":"5115:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3814,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:19"},"returnParameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3835,"src":"5149:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:19"},"scope":5167,"src":"5071:294:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3853,"nodeType":"Block","src":"5502:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3846,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"5527:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3847,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"5531:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3849,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"5534:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3850,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"5537:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3845,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"5519:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3844,"id":3852,"nodeType":"Return","src":"5512:27:19"}]},"documentation":{"id":3836,"nodeType":"StructuredDocumentation","src":"5371:59:19","text":" @dev Returns the largest of two numbers."},"id":3854,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:19","nodeType":"FunctionDefinition","parameters":{"id":3841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3838,"mutability":"mutable","name":"a","nameLocation":"5456:1:19","nodeType":"VariableDeclaration","scope":3854,"src":"5448:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3837,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3840,"mutability":"mutable","name":"b","nameLocation":"5467:1:19","nodeType":"VariableDeclaration","scope":3854,"src":"5459:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3839,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:19"},"returnParameters":{"id":3844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3854,"src":"5493:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:19"},"scope":5167,"src":"5435:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3872,"nodeType":"Block","src":"5684:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3865,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"5709:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3866,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"5713:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3868,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"5716:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3869,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"5719:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3864,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"5701:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3863,"id":3871,"nodeType":"Return","src":"5694:27:19"}]},"documentation":{"id":3855,"nodeType":"StructuredDocumentation","src":"5552:60:19","text":" @dev Returns the smallest of two numbers."},"id":3873,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:19","nodeType":"FunctionDefinition","parameters":{"id":3860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3857,"mutability":"mutable","name":"a","nameLocation":"5638:1:19","nodeType":"VariableDeclaration","scope":3873,"src":"5630:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3856,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3859,"mutability":"mutable","name":"b","nameLocation":"5649:1:19","nodeType":"VariableDeclaration","scope":3873,"src":"5641:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3858,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:19"},"returnParameters":{"id":3863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3873,"src":"5675:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3861,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:19"},"scope":5167,"src":"5617:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3895,"nodeType":"Block","src":"5912:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3883,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"5967:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3884,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"5971:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3887,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"5977:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3888,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"5981:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3882,"id":3894,"nodeType":"Return","src":"5959:28:19"}]},"documentation":{"id":3874,"nodeType":"StructuredDocumentation","src":"5734:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3896,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:19","nodeType":"FunctionDefinition","parameters":{"id":3879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"a","nameLocation":"5866:1:19","nodeType":"VariableDeclaration","scope":3896,"src":"5858:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3878,"mutability":"mutable","name":"b","nameLocation":"5877:1:19","nodeType":"VariableDeclaration","scope":3896,"src":"5869:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3877,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:19"},"returnParameters":{"id":3882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3896,"src":"5903:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3880,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:19"},"scope":5167,"src":"5841:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3936,"nodeType":"Block","src":"6286:633:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3906,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"6300:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3917,"nodeType":"IfStatement","src":"6296:150:19","trueBody":{"id":3916,"nodeType":"Block","src":"6308:138:19","statements":[{"expression":{"arguments":[{"expression":{"id":3912,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"6412:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1698_$","typeString":"type(library Panic)"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1665,"src":"6412:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3909,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"6400:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1698_$","typeString":"type(library Panic)"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1697,"src":"6400:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3915,"nodeType":"ExpressionStatement","src":"6400:35:19"}]}},{"id":3935,"nodeType":"UncheckedBlock","src":"6829:84:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3920,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"6876:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3918,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"6860:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"6860:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3924,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"6887:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3927,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3928,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"6896:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3905,"id":3934,"nodeType":"Return","src":"6853:49:19"}]}]},"documentation":{"id":3897,"nodeType":"StructuredDocumentation","src":"6000:210:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3937,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:19","nodeType":"FunctionDefinition","parameters":{"id":3902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3899,"mutability":"mutable","name":"a","nameLocation":"6240:1:19","nodeType":"VariableDeclaration","scope":3937,"src":"6232:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3898,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3901,"mutability":"mutable","name":"b","nameLocation":"6251:1:19","nodeType":"VariableDeclaration","scope":3937,"src":"6243:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:19"},"returnParameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3937,"src":"6277:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3903,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:19"},"scope":5167,"src":"6215:704:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4072,"nodeType":"Block","src":"7340:3585:19","statements":[{"id":4071,"nodeType":"UncheckedBlock","src":"7350:3569:19","statements":[{"assignments":[3950,3952],"declarations":[{"constant":false,"id":3950,"mutability":"mutable","name":"high","nameLocation":"7383:4:19","nodeType":"VariableDeclaration","scope":4071,"src":"7375:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3949,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3952,"mutability":"mutable","name":"low","nameLocation":"7397:3:19","nodeType":"VariableDeclaration","scope":4071,"src":"7389:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3951,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3957,"initialValue":{"arguments":[{"id":3954,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3940,"src":"7411:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3955,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3942,"src":"7414:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3953,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"7404:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3958,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"7498:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3966,"nodeType":"IfStatement","src":"7494:365:19","trueBody":{"id":3965,"nodeType":"Block","src":"7509:350:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3961,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"7827:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3962,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"7833:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3948,"id":3964,"nodeType":"Return","src":"7820:24:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3967,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"7969:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3968,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"7984:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3985,"nodeType":"IfStatement","src":"7965:142:19","trueBody":{"id":3984,"nodeType":"Block","src":"7990:117:19","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3974,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"8028:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3977,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"8046:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1698_$","typeString":"type(library Panic)"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1665,"src":"8046:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3979,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"8070:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1698_$","typeString":"type(library Panic)"}},"id":3980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:19","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1661,"src":"8070:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3973,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"8020:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3970,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"8008:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1698_$","typeString":"type(library Panic)"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1697,"src":"8008:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3983,"nodeType":"ExpressionStatement","src":"8008:84:19"}]}},{"assignments":[3987],"declarations":[{"constant":false,"id":3987,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:19","nodeType":"VariableDeclaration","scope":4071,"src":"8359:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3986,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3988,"nodeType":"VariableDeclarationStatement","src":"8359:17:19"},{"AST":{"nodeType":"YulBlock","src":"8415:283:19","statements":[{"nodeType":"YulAssignment","src":"8484:38:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:19"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:19"},"nodeType":"YulFunctionCall","src":"8497:25:19"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:19"}]},{"nodeType":"YulAssignment","src":"8604:37:19","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:19"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:19"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:19"},"nodeType":"YulFunctionCall","src":"8622:18:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:19"},"nodeType":"YulFunctionCall","src":"8612:29:19"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:19"}]},{"nodeType":"YulAssignment","src":"8658:26:19","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:19"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:19"},"nodeType":"YulFunctionCall","src":"8665:19:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3944,"isOffset":false,"isSlot":false,"src":"8510:11:19","valueSize":1},{"declaration":3950,"isOffset":false,"isSlot":false,"src":"8604:4:19","valueSize":1},{"declaration":3950,"isOffset":false,"isSlot":false,"src":"8616:4:19","valueSize":1},{"declaration":3952,"isOffset":false,"isSlot":false,"src":"8636:3:19","valueSize":1},{"declaration":3952,"isOffset":false,"isSlot":false,"src":"8658:3:19","valueSize":1},{"declaration":3952,"isOffset":false,"isSlot":false,"src":"8669:3:19","valueSize":1},{"declaration":3987,"isOffset":false,"isSlot":false,"src":"8484:9:19","valueSize":1},{"declaration":3987,"isOffset":false,"isSlot":false,"src":"8625:9:19","valueSize":1},{"declaration":3987,"isOffset":false,"isSlot":false,"src":"8674:9:19","valueSize":1},{"declaration":3940,"isOffset":false,"isSlot":false,"src":"8504:1:19","valueSize":1},{"declaration":3942,"isOffset":false,"isSlot":false,"src":"8507:1:19","valueSize":1}],"flags":["memory-safe"],"id":3989,"nodeType":"InlineAssembly","src":"8390:308:19"},{"assignments":[3991],"declarations":[{"constant":false,"id":3991,"mutability":"mutable","name":"twos","nameLocation":"8910:4:19","nodeType":"VariableDeclaration","scope":4071,"src":"8902:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3990,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3998,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3992,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"8917:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3994,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"8936:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:19"},{"AST":{"nodeType":"YulBlock","src":"8987:359:19","statements":[{"nodeType":"YulAssignment","src":"9052:37:19","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:19"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:19"},"nodeType":"YulFunctionCall","src":"9067:22:19"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:19"}]},{"nodeType":"YulAssignment","src":"9153:21:19","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:19"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:19"},"nodeType":"YulFunctionCall","src":"9160:14:19"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:19"}]},{"nodeType":"YulAssignment","src":"9293:39:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:19","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:19"},"nodeType":"YulFunctionCall","src":"9309:12:19"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:19"},"nodeType":"YulFunctionCall","src":"9305:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:19"},"nodeType":"YulFunctionCall","src":"9301:31:19"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3944,"isOffset":false,"isSlot":false,"src":"9052:11:19","valueSize":1},{"declaration":3944,"isOffset":false,"isSlot":false,"src":"9071:11:19","valueSize":1},{"declaration":3952,"isOffset":false,"isSlot":false,"src":"9153:3:19","valueSize":1},{"declaration":3952,"isOffset":false,"isSlot":false,"src":"9164:3:19","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"9084:4:19","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"9169:4:19","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"9293:4:19","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"9316:4:19","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"9323:4:19","valueSize":1}],"flags":["memory-safe"],"id":3999,"nodeType":"InlineAssembly","src":"8962:384:19"},{"expression":{"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4000,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"9409:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4001,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"9416:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4002,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"9423:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4005,"nodeType":"ExpressionStatement","src":"9409:18:19"},{"assignments":[4007],"declarations":[{"constant":false,"id":4007,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:19","nodeType":"VariableDeclaration","scope":4071,"src":"9762:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4014,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4009,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"9785:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:19"},{"expression":{"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4015,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"10018:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4017,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"10033:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4018,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"10047:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4022,"nodeType":"ExpressionStatement","src":"10018:36:19"},{"expression":{"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4023,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"10088:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"10103:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4026,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"10117:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4030,"nodeType":"ExpressionStatement","src":"10088:36:19"},{"expression":{"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4031,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"10160:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4033,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"10175:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4034,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"10189:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4038,"nodeType":"ExpressionStatement","src":"10160:36:19"},{"expression":{"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4039,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"10231:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4041,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"10246:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4042,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"10260:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4046,"nodeType":"ExpressionStatement","src":"10231:36:19"},{"expression":{"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4047,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"10304:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4049,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"10319:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4050,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"10333:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4054,"nodeType":"ExpressionStatement","src":"10304:36:19"},{"expression":{"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4055,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"10378:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4057,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"10393:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4058,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"10407:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4062,"nodeType":"ExpressionStatement","src":"10378:36:19"},{"expression":{"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4063,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"10859:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4064,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"10868:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4065,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"10874:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4068,"nodeType":"ExpressionStatement","src":"10859:22:19"},{"expression":{"id":4069,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"10902:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3948,"id":4070,"nodeType":"Return","src":"10895:13:19"}]}]},"documentation":{"id":3938,"nodeType":"StructuredDocumentation","src":"6925:312:19","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4073,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:19","nodeType":"FunctionDefinition","parameters":{"id":3945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3940,"mutability":"mutable","name":"x","nameLocation":"7266:1:19","nodeType":"VariableDeclaration","scope":4073,"src":"7258:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3939,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3942,"mutability":"mutable","name":"y","nameLocation":"7277:1:19","nodeType":"VariableDeclaration","scope":4073,"src":"7269:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3941,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3944,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:19","nodeType":"VariableDeclaration","scope":4073,"src":"7280:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3943,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:19"},"returnParameters":{"id":3948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3947,"mutability":"mutable","name":"result","nameLocation":"7332:6:19","nodeType":"VariableDeclaration","scope":4073,"src":"7324:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:19"},"scope":5167,"src":"7242:3683:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4109,"nodeType":"Block","src":"11164:128:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4089,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"11188:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4090,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"11191:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4091,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"11194:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4088,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4073,4110],"referencedDeclaration":4073,"src":"11181:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4096,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"11242:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}],"id":4095,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"11225:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3558_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4099,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"11262:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4100,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"11265:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4101,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4080,"src":"11268:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4098,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4093,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"11209:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"11209:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4087,"id":4108,"nodeType":"Return","src":"11174:111:19"}]},"documentation":{"id":4074,"nodeType":"StructuredDocumentation","src":"10931:118:19","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4110,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:19","nodeType":"FunctionDefinition","parameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4076,"mutability":"mutable","name":"x","nameLocation":"11078:1:19","nodeType":"VariableDeclaration","scope":4110,"src":"11070:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4075,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4078,"mutability":"mutable","name":"y","nameLocation":"11089:1:19","nodeType":"VariableDeclaration","scope":4110,"src":"11081:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4077,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4080,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:19","nodeType":"VariableDeclaration","scope":4110,"src":"11092:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4079,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4083,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:19","nodeType":"VariableDeclaration","scope":4110,"src":"11113:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"},"typeName":{"id":4082,"nodeType":"UserDefinedTypeName","pathNode":{"id":4081,"name":"Rounding","nameLocations":["11113:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3558,"src":"11113:8:19"},"referencedDeclaration":3558,"src":"11113:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:19"},"returnParameters":{"id":4087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4110,"src":"11155:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4085,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:19"},"scope":5167,"src":"11054:238:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4159,"nodeType":"Block","src":"11500:245:19","statements":[{"id":4158,"nodeType":"UncheckedBlock","src":"11510:229:19","statements":[{"assignments":[4123,4125],"declarations":[{"constant":false,"id":4123,"mutability":"mutable","name":"high","nameLocation":"11543:4:19","nodeType":"VariableDeclaration","scope":4158,"src":"11535:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4122,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4125,"mutability":"mutable","name":"low","nameLocation":"11557:3:19","nodeType":"VariableDeclaration","scope":4158,"src":"11549:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4124,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4130,"initialValue":{"arguments":[{"id":4127,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"11571:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4128,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4115,"src":"11574:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4126,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"11564:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4131,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"11594:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4133,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"11607:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4144,"nodeType":"IfStatement","src":"11590:86:19","trueBody":{"id":4143,"nodeType":"Block","src":"11610:66:19","statements":[{"expression":{"arguments":[{"expression":{"id":4139,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"11640:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1698_$","typeString":"type(library Panic)"}},"id":4140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:19","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1661,"src":"11640:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4136,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"11628:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1698_$","typeString":"type(library Panic)"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1697,"src":"11628:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4142,"nodeType":"ExpressionStatement","src":"11628:33:19"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4145,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4123,"src":"11697:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4147,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"11712:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4152,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"11719:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4153,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"11726:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4121,"id":4157,"nodeType":"Return","src":"11689:39:19"}]}]},"documentation":{"id":4111,"nodeType":"StructuredDocumentation","src":"11298:111:19","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4160,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:19","nodeType":"FunctionDefinition","parameters":{"id":4118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4113,"mutability":"mutable","name":"x","nameLocation":"11438:1:19","nodeType":"VariableDeclaration","scope":4160,"src":"11430:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4112,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4115,"mutability":"mutable","name":"y","nameLocation":"11449:1:19","nodeType":"VariableDeclaration","scope":4160,"src":"11441:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4114,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4117,"mutability":"mutable","name":"n","nameLocation":"11458:1:19","nodeType":"VariableDeclaration","scope":4160,"src":"11452:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4116,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:19"},"returnParameters":{"id":4121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4120,"mutability":"mutable","name":"result","nameLocation":"11492:6:19","nodeType":"VariableDeclaration","scope":4160,"src":"11484:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4119,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:19"},"scope":5167,"src":"11414:331:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4198,"nodeType":"Block","src":"11963:113:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4176,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"11987:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4177,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"11990:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4178,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"11993:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4175,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4160,4199],"referencedDeclaration":4160,"src":"11980:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4183,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"12031:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}],"id":4182,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"12014:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3558_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4186,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"12051:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4187,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"12054:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4189,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"12062:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4185,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4180,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"11998:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"11998:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4174,"id":4197,"nodeType":"Return","src":"11973:96:19"}]},"documentation":{"id":4161,"nodeType":"StructuredDocumentation","src":"11751:109:19","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4199,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:19","nodeType":"FunctionDefinition","parameters":{"id":4171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4163,"mutability":"mutable","name":"x","nameLocation":"11889:1:19","nodeType":"VariableDeclaration","scope":4199,"src":"11881:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4162,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4165,"mutability":"mutable","name":"y","nameLocation":"11900:1:19","nodeType":"VariableDeclaration","scope":4199,"src":"11892:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4164,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4167,"mutability":"mutable","name":"n","nameLocation":"11909:1:19","nodeType":"VariableDeclaration","scope":4199,"src":"11903:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4166,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4170,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:19","nodeType":"VariableDeclaration","scope":4199,"src":"11912:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"},"typeName":{"id":4169,"nodeType":"UserDefinedTypeName","pathNode":{"id":4168,"name":"Rounding","nameLocations":["11912:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3558,"src":"11912:8:19"},"referencedDeclaration":3558,"src":"11912:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:19"},"returnParameters":{"id":4174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4199,"src":"11954:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4172,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:19"},"scope":5167,"src":"11865:211:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4295,"nodeType":"Block","src":"12710:1849:19","statements":[{"id":4294,"nodeType":"UncheckedBlock","src":"12720:1833:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4209,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"12748:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4214,"nodeType":"IfStatement","src":"12744:20:19","trueBody":{"expression":{"hexValue":"30","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4208,"id":4213,"nodeType":"Return","src":"12756:8:19"}},{"assignments":[4216],"declarations":[{"constant":false,"id":4216,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:19","nodeType":"VariableDeclaration","scope":4294,"src":"13235:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4215,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4220,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4217,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"13255:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4218,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"13259:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:19"},{"assignments":[4222],"declarations":[{"constant":false,"id":4222,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:19","nodeType":"VariableDeclaration","scope":4294,"src":"13274:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4221,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4224,"initialValue":{"id":4223,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"13288:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:19"},{"assignments":[4226],"declarations":[{"constant":false,"id":4226,"mutability":"mutable","name":"x","nameLocation":"13432:1:19","nodeType":"VariableDeclaration","scope":4294,"src":"13425:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4225,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4228,"initialValue":{"hexValue":"30","id":4227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:19"},{"assignments":[4230],"declarations":[{"constant":false,"id":4230,"mutability":"mutable","name":"y","nameLocation":"13458:1:19","nodeType":"VariableDeclaration","scope":4294,"src":"13451:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4229,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4232,"initialValue":{"hexValue":"31","id":4231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:19"},{"body":{"id":4269,"nodeType":"Block","src":"13501:882:19","statements":[{"assignments":[4237],"declarations":[{"constant":false,"id":4237,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:19","nodeType":"VariableDeclaration","scope":4269,"src":"13519:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4236,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4241,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4238,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"13538:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4239,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"13544:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:19"},{"expression":{"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4242,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"13573:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4243,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"13578:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4244,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4245,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"13678:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4246,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"13923:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4247,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"13929:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4248,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"13941:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4253,"nodeType":"ExpressionStatement","src":"13572:395:19"},{"expression":{"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4254,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"13987:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4255,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"13990:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4256,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4257,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"14072:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4258,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"14326:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4259,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"14330:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4262,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4237,"src":"14341:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4260,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:19","typeDescriptions":{}}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4266,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4268,"nodeType":"ExpressionStatement","src":"13986:382:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4233,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"13485:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4270,"nodeType":"WhileStatement","src":"13478:905:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4271,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"14401:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4276,"nodeType":"IfStatement","src":"14397:22:19","trueBody":{"expression":{"hexValue":"30","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4208,"id":4275,"nodeType":"Return","src":"14411:8:19"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4278,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"14470:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4281,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4204,"src":"14477:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:19","subExpression":{"id":4284,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"14490:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4282,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:19","typeDescriptions":{}}},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4290,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4226,"src":"14502:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4288,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:19","typeDescriptions":{}}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4277,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"14462:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4208,"id":4293,"nodeType":"Return","src":"14455:50:19"}]}]},"documentation":{"id":4200,"nodeType":"StructuredDocumentation","src":"12082:553:19","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4296,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:19","nodeType":"FunctionDefinition","parameters":{"id":4205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4202,"mutability":"mutable","name":"a","nameLocation":"12664:1:19","nodeType":"VariableDeclaration","scope":4296,"src":"12656:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4201,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4204,"mutability":"mutable","name":"n","nameLocation":"12675:1:19","nodeType":"VariableDeclaration","scope":4296,"src":"12667:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4203,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:19"},"returnParameters":{"id":4208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4296,"src":"12701:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4206,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:19"},"scope":5167,"src":"12640:1919:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4316,"nodeType":"Block","src":"15159:82:19","statements":[{"id":4315,"nodeType":"UncheckedBlock","src":"15169:66:19","statements":[{"expression":{"arguments":[{"id":4308,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"15212:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4309,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"15215:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4312,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"15222:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4306,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5167,"src":"15200:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5167_$","typeString":"type(library Math)"}},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:19","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4353,"src":"15200:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4305,"id":4314,"nodeType":"Return","src":"15193:31:19"}]}]},"documentation":{"id":4297,"nodeType":"StructuredDocumentation","src":"14565:514:19","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4317,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:19","nodeType":"FunctionDefinition","parameters":{"id":4302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4299,"mutability":"mutable","name":"a","nameLocation":"15113:1:19","nodeType":"VariableDeclaration","scope":4317,"src":"15105:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4298,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4301,"mutability":"mutable","name":"p","nameLocation":"15124:1:19","nodeType":"VariableDeclaration","scope":4317,"src":"15116:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4300,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:19"},"returnParameters":{"id":4305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4317,"src":"15150:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:19"},"scope":5167,"src":"15084:157:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4352,"nodeType":"Block","src":"16011:174:19","statements":[{"assignments":[4330,4332],"declarations":[{"constant":false,"id":4330,"mutability":"mutable","name":"success","nameLocation":"16027:7:19","nodeType":"VariableDeclaration","scope":4352,"src":"16022:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4329,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4332,"mutability":"mutable","name":"result","nameLocation":"16044:6:19","nodeType":"VariableDeclaration","scope":4352,"src":"16036:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4331,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4338,"initialValue":{"arguments":[{"id":4334,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"16064:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4335,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4322,"src":"16067:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4336,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"16070:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4333,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4377,4459],"referencedDeclaration":4377,"src":"16054:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:19"},{"condition":{"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:19","subExpression":{"id":4339,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"16087:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4349,"nodeType":"IfStatement","src":"16082:74:19","trueBody":{"id":4348,"nodeType":"Block","src":"16096:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":4344,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"16122:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1698_$","typeString":"type(library Panic)"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1665,"src":"16122:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4341,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"16110:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1698_$","typeString":"type(library Panic)"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1697,"src":"16110:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4347,"nodeType":"ExpressionStatement","src":"16110:35:19"}]}},{"expression":{"id":4350,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"16172:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4328,"id":4351,"nodeType":"Return","src":"16165:13:19"}]},"documentation":{"id":4318,"nodeType":"StructuredDocumentation","src":"15247:678:19","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4353,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:19","nodeType":"FunctionDefinition","parameters":{"id":4325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"b","nameLocation":"15954:1:19","nodeType":"VariableDeclaration","scope":4353,"src":"15946:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4319,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4322,"mutability":"mutable","name":"e","nameLocation":"15965:1:19","nodeType":"VariableDeclaration","scope":4353,"src":"15957:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4324,"mutability":"mutable","name":"m","nameLocation":"15976:1:19","nodeType":"VariableDeclaration","scope":4353,"src":"15968:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4323,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:19"},"returnParameters":{"id":4328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4353,"src":"16002:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4326,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:19"},"scope":5167,"src":"15930:255:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4376,"nodeType":"Block","src":"17039:1493:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4367,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"17053:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4374,"nodeType":"IfStatement","src":"17049:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4366,"id":4373,"nodeType":"Return","src":"17061:17:19"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:19","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:19"},"nodeType":"YulFunctionCall","src":"17138:11:19"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:19","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:19"},"nodeType":"YulFunctionCall","src":"18050:17:19"},"nodeType":"YulExpressionStatement","src":"18050:17:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:19"},"nodeType":"YulFunctionCall","src":"18087:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:19"},"nodeType":"YulFunctionCall","src":"18080:28:19"},"nodeType":"YulExpressionStatement","src":"18080:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:19"},"nodeType":"YulFunctionCall","src":"18128:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:19"},"nodeType":"YulFunctionCall","src":"18121:28:19"},"nodeType":"YulExpressionStatement","src":"18121:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:19"},"nodeType":"YulFunctionCall","src":"18169:14:19"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:19"},"nodeType":"YulFunctionCall","src":"18162:25:19"},"nodeType":"YulExpressionStatement","src":"18162:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:19"},"nodeType":"YulFunctionCall","src":"18207:14:19"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:19"},"nodeType":"YulFunctionCall","src":"18200:25:19"},"nodeType":"YulExpressionStatement","src":"18200:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:19"},"nodeType":"YulFunctionCall","src":"18245:14:19"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:19"},"nodeType":"YulFunctionCall","src":"18238:25:19"},"nodeType":"YulExpressionStatement","src":"18238:25:19"},{"nodeType":"YulAssignment","src":"18425:57:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:19"},"nodeType":"YulFunctionCall","src":"18447:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:19","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:19","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:19","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:19"},"nodeType":"YulFunctionCall","src":"18436:46:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:19"}]},{"nodeType":"YulAssignment","src":"18495:21:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:19","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:19"},"nodeType":"YulFunctionCall","src":"18505:11:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4356,"isOffset":false,"isSlot":false,"src":"18185:1:19","valueSize":1},{"declaration":4358,"isOffset":false,"isSlot":false,"src":"18223:1:19","valueSize":1},{"declaration":4360,"isOffset":false,"isSlot":false,"src":"18261:1:19","valueSize":1},{"declaration":4365,"isOffset":false,"isSlot":false,"src":"18495:6:19","valueSize":1},{"declaration":4363,"isOffset":false,"isSlot":false,"src":"18425:7:19","valueSize":1}],"flags":["memory-safe"],"id":4375,"nodeType":"InlineAssembly","src":"17088:1438:19"}]},"documentation":{"id":4354,"nodeType":"StructuredDocumentation","src":"16191:738:19","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4377,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:19","nodeType":"FunctionDefinition","parameters":{"id":4361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4356,"mutability":"mutable","name":"b","nameLocation":"16961:1:19","nodeType":"VariableDeclaration","scope":4377,"src":"16953:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4355,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4358,"mutability":"mutable","name":"e","nameLocation":"16972:1:19","nodeType":"VariableDeclaration","scope":4377,"src":"16964:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4357,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4360,"mutability":"mutable","name":"m","nameLocation":"16983:1:19","nodeType":"VariableDeclaration","scope":4377,"src":"16975:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:19"},"returnParameters":{"id":4366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4363,"mutability":"mutable","name":"success","nameLocation":"17014:7:19","nodeType":"VariableDeclaration","scope":4377,"src":"17009:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4362,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4365,"mutability":"mutable","name":"result","nameLocation":"17031:6:19","nodeType":"VariableDeclaration","scope":4377,"src":"17023:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4364,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:19"},"scope":5167,"src":"16934:1598:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4412,"nodeType":"Block","src":"18729:179:19","statements":[{"assignments":[4390,4392],"declarations":[{"constant":false,"id":4390,"mutability":"mutable","name":"success","nameLocation":"18745:7:19","nodeType":"VariableDeclaration","scope":4412,"src":"18740:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4389,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4392,"mutability":"mutable","name":"result","nameLocation":"18767:6:19","nodeType":"VariableDeclaration","scope":4412,"src":"18754:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4391,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4398,"initialValue":{"arguments":[{"id":4394,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"18787:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4395,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"18790:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4396,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"18793:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4393,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4377,4459],"referencedDeclaration":4459,"src":"18777:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:19"},{"condition":{"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:19","subExpression":{"id":4399,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4390,"src":"18810:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4409,"nodeType":"IfStatement","src":"18805:74:19","trueBody":{"id":4408,"nodeType":"Block","src":"18819:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":4404,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"18845:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1698_$","typeString":"type(library Panic)"}},"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1665,"src":"18845:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4401,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"18833:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1698_$","typeString":"type(library Panic)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1697,"src":"18833:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4407,"nodeType":"ExpressionStatement","src":"18833:35:19"}]}},{"expression":{"id":4410,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"18895:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4388,"id":4411,"nodeType":"Return","src":"18888:13:19"}]},"documentation":{"id":4378,"nodeType":"StructuredDocumentation","src":"18538:85:19","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4413,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:19","nodeType":"FunctionDefinition","parameters":{"id":4385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4380,"mutability":"mutable","name":"b","nameLocation":"18657:1:19","nodeType":"VariableDeclaration","scope":4413,"src":"18644:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4379,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4382,"mutability":"mutable","name":"e","nameLocation":"18673:1:19","nodeType":"VariableDeclaration","scope":4413,"src":"18660:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4381,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4384,"mutability":"mutable","name":"m","nameLocation":"18689:1:19","nodeType":"VariableDeclaration","scope":4413,"src":"18676:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4383,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:19"},"returnParameters":{"id":4388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4413,"src":"18715:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4386,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:19"},"scope":5167,"src":"18628:280:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4458,"nodeType":"Block","src":"19162:771:19","statements":[{"condition":{"arguments":[{"id":4428,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"19187:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4427,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"19176:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4437,"nodeType":"IfStatement","src":"19172:47:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4431,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4426,"id":4436,"nodeType":"Return","src":"19191:28:19"}},{"assignments":[4439],"declarations":[{"constant":false,"id":4439,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:19","nodeType":"VariableDeclaration","scope":4458,"src":"19230:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4438,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4442,"initialValue":{"expression":{"id":4440,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"19245:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:19","memberName":"length","nodeType":"MemberAccess","src":"19245:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:19"},{"expression":{"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4443,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"19335:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4446,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"19361:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:19","memberName":"length","nodeType":"MemberAccess","src":"19361:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4448,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"19371:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:19","memberName":"length","nodeType":"MemberAccess","src":"19371:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4450,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"19381:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4451,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"19387:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4452,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"19390:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4453,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"19393:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4444,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4456,"nodeType":"ExpressionStatement","src":"19335:60:19"},{"AST":{"nodeType":"YulBlock","src":"19431:496:19","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:19","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:19"},"nodeType":"YulFunctionCall","src":"19460:17:19"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:19","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:19"},"nodeType":"YulFunctionCall","src":"19589:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:19","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:19"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:19"},"nodeType":"YulFunctionCall","src":"19611:13:19"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:19"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:19"},"nodeType":"YulFunctionCall","src":"19578:62:19"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:19"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:19"},"nodeType":"YulFunctionCall","src":"19789:20:19"},"nodeType":"YulExpressionStatement","src":"19789:20:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:19","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:19"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:19"},"nodeType":"YulFunctionCall","src":"19898:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:19"},"nodeType":"YulFunctionCall","src":"19885:32:19"},"nodeType":"YulExpressionStatement","src":"19885:32:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4439,"isOffset":false,"isSlot":false,"src":"19635:4:19","valueSize":1},{"declaration":4439,"isOffset":false,"isSlot":false,"src":"19804:4:19","valueSize":1},{"declaration":4439,"isOffset":false,"isSlot":false,"src":"19911:4:19","valueSize":1},{"declaration":4425,"isOffset":false,"isSlot":false,"src":"19464:6:19","valueSize":1},{"declaration":4425,"isOffset":false,"isSlot":false,"src":"19617:6:19","valueSize":1},{"declaration":4425,"isOffset":false,"isSlot":false,"src":"19796:6:19","valueSize":1},{"declaration":4423,"isOffset":false,"isSlot":false,"src":"19567:7:19","valueSize":1}],"flags":["memory-safe"],"id":4457,"nodeType":"InlineAssembly","src":"19406:521:19"}]},"documentation":{"id":4414,"nodeType":"StructuredDocumentation","src":"18914:88:19","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4459,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:19","nodeType":"FunctionDefinition","parameters":{"id":4421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"b","nameLocation":"19048:1:19","nodeType":"VariableDeclaration","scope":4459,"src":"19035:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4415,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4418,"mutability":"mutable","name":"e","nameLocation":"19072:1:19","nodeType":"VariableDeclaration","scope":4459,"src":"19059:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4417,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4420,"mutability":"mutable","name":"m","nameLocation":"19096:1:19","nodeType":"VariableDeclaration","scope":4459,"src":"19083:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4419,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:19"},"returnParameters":{"id":4426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4423,"mutability":"mutable","name":"success","nameLocation":"19132:7:19","nodeType":"VariableDeclaration","scope":4459,"src":"19127:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4422,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4425,"mutability":"mutable","name":"result","nameLocation":"19154:6:19","nodeType":"VariableDeclaration","scope":4459,"src":"19141:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4424,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:19"},"scope":5167,"src":"19007:926:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4491,"nodeType":"Block","src":"20088:176:19","statements":[{"body":{"id":4487,"nodeType":"Block","src":"20145:92:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4478,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"20163:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4480,"indexExpression":{"id":4479,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"20173:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4486,"nodeType":"IfStatement","src":"20159:68:19","trueBody":{"id":4485,"nodeType":"Block","src":"20182:45:19","statements":[{"expression":{"hexValue":"66616c7365","id":4483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4466,"id":4484,"nodeType":"Return","src":"20200:12:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4471,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"20118:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4472,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"20122:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:19","memberName":"length","nodeType":"MemberAccess","src":"20122:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4488,"initializationExpression":{"assignments":[4468],"declarations":[{"constant":false,"id":4468,"mutability":"mutable","name":"i","nameLocation":"20111:1:19","nodeType":"VariableDeclaration","scope":4488,"src":"20103:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4467,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4470,"initialValue":{"hexValue":"30","id":4469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:19"},"loopExpression":{"expression":{"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:19","subExpression":{"id":4475,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"20142:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4477,"nodeType":"ExpressionStatement","src":"20140:3:19"},"nodeType":"ForStatement","src":"20098:139:19"},{"expression":{"hexValue":"74727565","id":4489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4466,"id":4490,"nodeType":"Return","src":"20246:11:19"}]},"documentation":{"id":4460,"nodeType":"StructuredDocumentation","src":"19939:72:19","text":" @dev Returns whether the provided byte array is zero."},"id":4492,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:19","nodeType":"FunctionDefinition","parameters":{"id":4463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4462,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:19","nodeType":"VariableDeclaration","scope":4492,"src":"20036:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4461,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:19"},"returnParameters":{"id":4466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4492,"src":"20082:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4464,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:19"},"scope":5167,"src":"20016:248:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4710,"nodeType":"Block","src":"20624:5124:19","statements":[{"id":4709,"nodeType":"UncheckedBlock","src":"20634:5108:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4500,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"20728:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4506,"nodeType":"IfStatement","src":"20724:53:19","trueBody":{"id":4505,"nodeType":"Block","src":"20736:41:19","statements":[{"expression":{"id":4503,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"20761:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4499,"id":4504,"nodeType":"Return","src":"20754:8:19"}]}},{"assignments":[4508],"declarations":[{"constant":false,"id":4508,"mutability":"mutable","name":"aa","nameLocation":"21712:2:19","nodeType":"VariableDeclaration","scope":4709,"src":"21704:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4507,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4510,"initialValue":{"id":4509,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"21717:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:19"},{"assignments":[4512],"declarations":[{"constant":false,"id":4512,"mutability":"mutable","name":"xn","nameLocation":"21740:2:19","nodeType":"VariableDeclaration","scope":4709,"src":"21732:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4511,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4514,"initialValue":{"hexValue":"31","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4515,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"21765:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4530,"nodeType":"IfStatement","src":"21761:92:19","trueBody":{"id":4529,"nodeType":"Block","src":"21783:70:19","statements":[{"expression":{"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4521,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"21801:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4524,"nodeType":"ExpressionStatement","src":"21801:10:19"},{"expression":{"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4525,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"21829:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4528,"nodeType":"ExpressionStatement","src":"21829:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4531,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"21870:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4546,"nodeType":"IfStatement","src":"21866:90:19","trueBody":{"id":4545,"nodeType":"Block","src":"21887:69:19","statements":[{"expression":{"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4537,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"21905:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4540,"nodeType":"ExpressionStatement","src":"21905:9:19"},{"expression":{"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4541,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"21932:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4544,"nodeType":"ExpressionStatement","src":"21932:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4547,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"21973:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4562,"nodeType":"IfStatement","src":"21969:90:19","trueBody":{"id":4561,"nodeType":"Block","src":"21990:69:19","statements":[{"expression":{"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4553,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"22008:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4556,"nodeType":"ExpressionStatement","src":"22008:9:19"},{"expression":{"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4557,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"22035:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4560,"nodeType":"ExpressionStatement","src":"22035:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4563,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"22076:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4567,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4578,"nodeType":"IfStatement","src":"22072:89:19","trueBody":{"id":4577,"nodeType":"Block","src":"22093:68:19","statements":[{"expression":{"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4569,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"22111:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4572,"nodeType":"ExpressionStatement","src":"22111:9:19"},{"expression":{"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4573,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"22138:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4576,"nodeType":"ExpressionStatement","src":"22138:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"22178:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4594,"nodeType":"IfStatement","src":"22174:87:19","trueBody":{"id":4593,"nodeType":"Block","src":"22194:67:19","statements":[{"expression":{"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4585,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"22212:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4588,"nodeType":"ExpressionStatement","src":"22212:8:19"},{"expression":{"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4589,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"22238:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4592,"nodeType":"ExpressionStatement","src":"22238:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4595,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"22278:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4599,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4610,"nodeType":"IfStatement","src":"22274:87:19","trueBody":{"id":4609,"nodeType":"Block","src":"22294:67:19","statements":[{"expression":{"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4601,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"22312:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4604,"nodeType":"ExpressionStatement","src":"22312:8:19"},{"expression":{"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4605,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"22338:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4608,"nodeType":"ExpressionStatement","src":"22338:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4611,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"22378:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4622,"nodeType":"IfStatement","src":"22374:61:19","trueBody":{"id":4621,"nodeType":"Block","src":"22394:41:19","statements":[{"expression":{"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4617,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"22412:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4620,"nodeType":"ExpressionStatement","src":"22412:8:19"}]}},{"expression":{"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4623,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"22855:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4625,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"22865:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4627,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4631,"nodeType":"ExpressionStatement","src":"22855:18:19"},{"expression":{"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4632,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"24760:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4633,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"24766:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4634,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"24771:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4635,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"24775:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4638,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4642,"nodeType":"ExpressionStatement","src":"24760:23:19"},{"expression":{"id":4652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4643,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"24869:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4644,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"24875:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4645,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"24880:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4646,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"24884:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4649,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4653,"nodeType":"ExpressionStatement","src":"24869:23:19"},{"expression":{"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4654,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"24980:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4655,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"24986:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4656,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"24991:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4657,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"24995:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4664,"nodeType":"ExpressionStatement","src":"24980:23:19"},{"expression":{"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4665,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"25089:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4666,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"25095:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4667,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"25100:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4668,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"25104:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4675,"nodeType":"ExpressionStatement","src":"25089:23:19"},{"expression":{"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4676,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"25199:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4677,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"25205:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4678,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"25210:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4679,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"25214:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4686,"nodeType":"ExpressionStatement","src":"25199:23:19"},{"expression":{"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4687,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"25309:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4688,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"25315:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4689,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"25320:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4690,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"25324:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4697,"nodeType":"ExpressionStatement","src":"25309:23:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"25698:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4701,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"25719:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4702,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"25724:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4703,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4512,"src":"25728:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4699,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"25703:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"25703:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4499,"id":4708,"nodeType":"Return","src":"25691:40:19"}]}]},"documentation":{"id":4493,"nodeType":"StructuredDocumentation","src":"20270:292:19","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4711,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:19","nodeType":"FunctionDefinition","parameters":{"id":4496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4495,"mutability":"mutable","name":"a","nameLocation":"20589:1:19","nodeType":"VariableDeclaration","scope":4711,"src":"20581:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:19"},"returnParameters":{"id":4499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4711,"src":"20615:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:19"},"scope":5167,"src":"20567:5181:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4744,"nodeType":"Block","src":"25921:171:19","statements":[{"id":4743,"nodeType":"UncheckedBlock","src":"25931:155:19","statements":[{"assignments":[4723],"declarations":[{"constant":false,"id":4723,"mutability":"mutable","name":"result","nameLocation":"25963:6:19","nodeType":"VariableDeclaration","scope":4743,"src":"25955:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4722,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4727,"initialValue":{"arguments":[{"id":4725,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"25977:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4724,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4711,4745],"referencedDeclaration":4711,"src":"25972:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"26000:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4732,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"26042:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}],"id":4731,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"26025:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3558_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"26055:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4735,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"26064:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4737,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"26073:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4729,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"26009:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"26009:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4721,"id":4742,"nodeType":"Return","src":"25993:82:19"}]}]},"documentation":{"id":4712,"nodeType":"StructuredDocumentation","src":"25754:86:19","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4745,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:19","nodeType":"FunctionDefinition","parameters":{"id":4718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4714,"mutability":"mutable","name":"a","nameLocation":"25867:1:19","nodeType":"VariableDeclaration","scope":4745,"src":"25859:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4717,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:19","nodeType":"VariableDeclaration","scope":4745,"src":"25870:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"},"typeName":{"id":4716,"nodeType":"UserDefinedTypeName","pathNode":{"id":4715,"name":"Rounding","nameLocations":["25870:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3558,"src":"25870:8:19"},"referencedDeclaration":3558,"src":"25870:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:19"},"returnParameters":{"id":4721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4745,"src":"25912:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4719,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:19"},"scope":5167,"src":"25845:247:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4835,"nodeType":"Block","src":"26281:2334:19","statements":[{"expression":{"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4753,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"26363:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4756,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"26383:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4754,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"26367:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"26367:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4763,"nodeType":"ExpressionStatement","src":"26363:64:19"},{"expression":{"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4764,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"26503:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4767,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"26525:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4768,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"26530:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4770,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4765,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"26508:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"26508:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4777,"nodeType":"ExpressionStatement","src":"26503:56:19"},{"expression":{"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4778,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"26634:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4781,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"26656:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4782,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"26661:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4779,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"26639:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"26639:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4791,"nodeType":"ExpressionStatement","src":"26634:48:19"},{"expression":{"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4792,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"26757:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4795,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"26779:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4796,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"26784:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:19","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4793,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"26762:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"26762:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4805,"nodeType":"ExpressionStatement","src":"26757:44:19"},{"expression":{"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4806,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"26874:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4809,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"26896:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4810,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"26901:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4812,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4807,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"26879:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"26879:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4819,"nodeType":"ExpressionStatement","src":"26874:42:19"},{"expression":{"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4820,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"26988:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4823,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"27010:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4824,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4751,"src":"27015:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4826,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4821,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"26993:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"26993:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4833,"nodeType":"ExpressionStatement","src":"26988:41:19"},{"AST":{"nodeType":"YulBlock","src":"28490:119:19","statements":[{"nodeType":"YulAssignment","src":"28504:95:19","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:19"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:19"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:19"},"nodeType":"YulFunctionCall","src":"28520:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:19","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:19"},"nodeType":"YulFunctionCall","src":"28515:83:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:19"},"nodeType":"YulFunctionCall","src":"28509:90:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4751,"isOffset":false,"isSlot":false,"src":"28504:1:19","valueSize":1},{"declaration":4751,"isOffset":false,"isSlot":false,"src":"28512:1:19","valueSize":1},{"declaration":4751,"isOffset":false,"isSlot":false,"src":"28524:1:19","valueSize":1},{"declaration":4748,"isOffset":false,"isSlot":false,"src":"28527:1:19","valueSize":1}],"flags":["memory-safe"],"id":4834,"nodeType":"InlineAssembly","src":"28465:144:19"}]},"documentation":{"id":4746,"nodeType":"StructuredDocumentation","src":"26098:119:19","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4836,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:19","nodeType":"FunctionDefinition","parameters":{"id":4749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4748,"mutability":"mutable","name":"x","nameLocation":"26244:1:19","nodeType":"VariableDeclaration","scope":4836,"src":"26236:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4747,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:19"},"returnParameters":{"id":4752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4751,"mutability":"mutable","name":"r","nameLocation":"26278:1:19","nodeType":"VariableDeclaration","scope":4836,"src":"26270:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4750,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:19"},"scope":5167,"src":"26222:2393:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4869,"nodeType":"Block","src":"28848:175:19","statements":[{"id":4868,"nodeType":"UncheckedBlock","src":"28858:159:19","statements":[{"assignments":[4848],"declarations":[{"constant":false,"id":4848,"mutability":"mutable","name":"result","nameLocation":"28890:6:19","nodeType":"VariableDeclaration","scope":4868,"src":"28882:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4847,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4852,"initialValue":{"arguments":[{"id":4850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"28904:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4849,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4836,4870],"referencedDeclaration":4836,"src":"28899:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4853,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"28931:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4857,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"28973:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}],"id":4856,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"28956:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3558_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4860,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"28991:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"29000:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4854,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"28940:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"28940:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4846,"id":4867,"nodeType":"Return","src":"28924:82:19"}]}]},"documentation":{"id":4837,"nodeType":"StructuredDocumentation","src":"28621:142:19","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4870,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:19","nodeType":"FunctionDefinition","parameters":{"id":4843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4839,"mutability":"mutable","name":"value","nameLocation":"28790:5:19","nodeType":"VariableDeclaration","scope":4870,"src":"28782:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4838,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4842,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:19","nodeType":"VariableDeclaration","scope":4870,"src":"28797:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"},"typeName":{"id":4841,"nodeType":"UserDefinedTypeName","pathNode":{"id":4840,"name":"Rounding","nameLocations":["28797:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3558,"src":"28797:8:19"},"referencedDeclaration":3558,"src":"28797:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:19"},"returnParameters":{"id":4846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4870,"src":"28839:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4844,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:19"},"scope":5167,"src":"28768:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4998,"nodeType":"Block","src":"29216:854:19","statements":[{"assignments":[4879],"declarations":[{"constant":false,"id":4879,"mutability":"mutable","name":"result","nameLocation":"29234:6:19","nodeType":"VariableDeclaration","scope":4998,"src":"29226:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4878,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4881,"initialValue":{"hexValue":"30","id":4880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:19"},{"id":4995,"nodeType":"UncheckedBlock","src":"29254:787:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"29282:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4898,"nodeType":"IfStatement","src":"29278:103:19","trueBody":{"id":4897,"nodeType":"Block","src":"29301:80:19","statements":[{"expression":{"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"29319:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4892,"nodeType":"ExpressionStatement","src":"29319:17:19"},{"expression":{"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4893,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"29354:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4896,"nodeType":"ExpressionStatement","src":"29354:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"29398:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4915,"nodeType":"IfStatement","src":"29394:103:19","trueBody":{"id":4914,"nodeType":"Block","src":"29417:80:19","statements":[{"expression":{"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"29435:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4909,"nodeType":"ExpressionStatement","src":"29435:17:19"},{"expression":{"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"29470:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4913,"nodeType":"ExpressionStatement","src":"29470:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"29514:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4932,"nodeType":"IfStatement","src":"29510:103:19","trueBody":{"id":4931,"nodeType":"Block","src":"29533:80:19","statements":[{"expression":{"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"29551:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4926,"nodeType":"ExpressionStatement","src":"29551:17:19"},{"expression":{"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4927,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"29586:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4930,"nodeType":"ExpressionStatement","src":"29586:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"29630:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4949,"nodeType":"IfStatement","src":"29626:100:19","trueBody":{"id":4948,"nodeType":"Block","src":"29648:78:19","statements":[{"expression":{"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"29666:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4943,"nodeType":"ExpressionStatement","src":"29666:16:19"},{"expression":{"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4944,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"29700:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4947,"nodeType":"ExpressionStatement","src":"29700:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"29743:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4966,"nodeType":"IfStatement","src":"29739:100:19","trueBody":{"id":4965,"nodeType":"Block","src":"29761:78:19","statements":[{"expression":{"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"29779:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4960,"nodeType":"ExpressionStatement","src":"29779:16:19"},{"expression":{"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4961,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"29813:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4964,"nodeType":"ExpressionStatement","src":"29813:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"29856:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4983,"nodeType":"IfStatement","src":"29852:100:19","trueBody":{"id":4982,"nodeType":"Block","src":"29874:78:19","statements":[{"expression":{"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"29892:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4977,"nodeType":"ExpressionStatement","src":"29892:16:19"},{"expression":{"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4978,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"29926:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4981,"nodeType":"ExpressionStatement","src":"29926:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"29969:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4994,"nodeType":"IfStatement","src":"29965:66:19","trueBody":{"id":4993,"nodeType":"Block","src":"29987:44:19","statements":[{"expression":{"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4989,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"30005:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4992,"nodeType":"ExpressionStatement","src":"30005:11:19"}]}}]},{"expression":{"id":4996,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"30057:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4877,"id":4997,"nodeType":"Return","src":"30050:13:19"}]},"documentation":{"id":4871,"nodeType":"StructuredDocumentation","src":"29029:120:19","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4999,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:19","nodeType":"FunctionDefinition","parameters":{"id":4874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4873,"mutability":"mutable","name":"value","nameLocation":"29177:5:19","nodeType":"VariableDeclaration","scope":4999,"src":"29169:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4872,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:19"},"returnParameters":{"id":4877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4999,"src":"29207:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4875,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:19"},"scope":5167,"src":"29154:916:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5032,"nodeType":"Block","src":"30305:177:19","statements":[{"id":5031,"nodeType":"UncheckedBlock","src":"30315:161:19","statements":[{"assignments":[5011],"declarations":[{"constant":false,"id":5011,"mutability":"mutable","name":"result","nameLocation":"30347:6:19","nodeType":"VariableDeclaration","scope":5031,"src":"30339:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5010,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5015,"initialValue":{"arguments":[{"id":5013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"30362:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5012,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4999,5033],"referencedDeclaration":4999,"src":"30356:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5016,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"30389:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5020,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"30431:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}],"id":5019,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"30414:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3558_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5023,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"30450:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5002,"src":"30459:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5017,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"30398:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"30398:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5009,"id":5030,"nodeType":"Return","src":"30382:83:19"}]}]},"documentation":{"id":5000,"nodeType":"StructuredDocumentation","src":"30076:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5033,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:19","nodeType":"FunctionDefinition","parameters":{"id":5006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5002,"mutability":"mutable","name":"value","nameLocation":"30247:5:19","nodeType":"VariableDeclaration","scope":5033,"src":"30239:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5001,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5005,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:19","nodeType":"VariableDeclaration","scope":5033,"src":"30254:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"},"typeName":{"id":5004,"nodeType":"UserDefinedTypeName","pathNode":{"id":5003,"name":"Rounding","nameLocations":["30254:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3558,"src":"30254:8:19"},"referencedDeclaration":3558,"src":"30254:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:19"},"returnParameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5033,"src":"30296:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5007,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:19"},"scope":5167,"src":"30224:258:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5109,"nodeType":"Block","src":"30800:675:19","statements":[{"expression":{"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5041,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"30882:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5044,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"30902:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5042,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"30886:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"30886:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5051,"nodeType":"ExpressionStatement","src":"30882:64:19"},{"expression":{"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5052,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"31022:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5055,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"31044:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5056,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"31049:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5053,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"31027:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"31027:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:19","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5065,"nodeType":"ExpressionStatement","src":"31022:56:19"},{"expression":{"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5066,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"31153:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5069,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"31175:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5070,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"31180:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5067,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"31158:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"31158:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:19","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5079,"nodeType":"ExpressionStatement","src":"31153:48:19"},{"expression":{"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5080,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"31276:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5083,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"31298:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5084,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"31303:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:19","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5081,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"31281:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"31281:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5093,"nodeType":"ExpressionStatement","src":"31276:44:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5094,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"31426:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5097,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5100,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"31453:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5101,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"31458:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5098,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"31436:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"31436:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5040,"id":5108,"nodeType":"Return","src":"31418:50:19"}]},"documentation":{"id":5034,"nodeType":"StructuredDocumentation","src":"30488:246:19","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5110,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:19","nodeType":"FunctionDefinition","parameters":{"id":5037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5036,"mutability":"mutable","name":"x","nameLocation":"30763:1:19","nodeType":"VariableDeclaration","scope":5110,"src":"30755:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5035,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:19"},"returnParameters":{"id":5040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5039,"mutability":"mutable","name":"r","nameLocation":"30797:1:19","nodeType":"VariableDeclaration","scope":5110,"src":"30789:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5038,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:19"},"scope":5167,"src":"30739:736:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5146,"nodeType":"Block","src":"31712:184:19","statements":[{"id":5145,"nodeType":"UncheckedBlock","src":"31722:168:19","statements":[{"assignments":[5122],"declarations":[{"constant":false,"id":5122,"mutability":"mutable","name":"result","nameLocation":"31754:6:19","nodeType":"VariableDeclaration","scope":5145,"src":"31746:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5121,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5126,"initialValue":{"arguments":[{"id":5124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"31770:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5123,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5110,5147],"referencedDeclaration":5110,"src":"31763:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5127,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"31797:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5131,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5116,"src":"31839:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}],"id":5130,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5166,"src":"31822:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3558_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5134,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"31858:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5137,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"31873:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5128,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"31806:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"31806:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5120,"id":5144,"nodeType":"Return","src":"31790:89:19"}]}]},"documentation":{"id":5111,"nodeType":"StructuredDocumentation","src":"31481:144:19","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5147,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:19","nodeType":"FunctionDefinition","parameters":{"id":5117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5113,"mutability":"mutable","name":"value","nameLocation":"31654:5:19","nodeType":"VariableDeclaration","scope":5147,"src":"31646:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5112,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5116,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:19","nodeType":"VariableDeclaration","scope":5147,"src":"31661:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"},"typeName":{"id":5115,"nodeType":"UserDefinedTypeName","pathNode":{"id":5114,"name":"Rounding","nameLocations":["31661:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3558,"src":"31661:8:19"},"referencedDeclaration":3558,"src":"31661:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:19"},"returnParameters":{"id":5120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5147,"src":"31703:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5118,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:19"},"scope":5167,"src":"31630:266:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5165,"nodeType":"Block","src":"32094:48:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5158,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"32117:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}],"id":5157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5156,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:19","typeDescriptions":{}}},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5155,"id":5164,"nodeType":"Return","src":"32104:31:19"}]},"documentation":{"id":5148,"nodeType":"StructuredDocumentation","src":"31902:113:19","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5166,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:19","nodeType":"FunctionDefinition","parameters":{"id":5152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5151,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:19","nodeType":"VariableDeclaration","scope":5166,"src":"32046:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"},"typeName":{"id":5150,"nodeType":"UserDefinedTypeName","pathNode":{"id":5149,"name":"Rounding","nameLocations":["32046:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3558,"src":"32046:8:19"},"referencedDeclaration":3558,"src":"32046:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3558","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:19"},"returnParameters":{"id":5155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5166,"src":"32088:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5153,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:19"},"scope":5167,"src":"32020:122:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5168,"src":"281:31863:19","usedErrors":[],"usedEvents":[]}],"src":"103:32042:19"},"id":19},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6932]},"id":6933,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5169,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5170,"nodeType":"StructuredDocumentation","src":"218:550:20","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6932,"linearizedBaseContracts":[6932],"name":"SafeCast","nameLocation":"777:8:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5171,"nodeType":"StructuredDocumentation","src":"792:68:20","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5177,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:20","nodeType":"ErrorDefinition","parameters":{"id":5176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5173,"mutability":"mutable","name":"bits","nameLocation":"908:4:20","nodeType":"VariableDeclaration","scope":5177,"src":"902:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5172,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5175,"mutability":"mutable","name":"value","nameLocation":"922:5:20","nodeType":"VariableDeclaration","scope":5177,"src":"914:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5174,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:20"},"src":"865:64:20"},{"documentation":{"id":5178,"nodeType":"StructuredDocumentation","src":"935:75:20","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5182,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:20","nodeType":"ErrorDefinition","parameters":{"id":5181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5180,"mutability":"mutable","name":"value","nameLocation":"1056:5:20","nodeType":"VariableDeclaration","scope":5182,"src":"1049:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5179,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:20"},"src":"1015:48:20"},{"documentation":{"id":5183,"nodeType":"StructuredDocumentation","src":"1069:67:20","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5189,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:20","nodeType":"ErrorDefinition","parameters":{"id":5188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5185,"mutability":"mutable","name":"bits","nameLocation":"1183:4:20","nodeType":"VariableDeclaration","scope":5189,"src":"1177:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5184,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5187,"mutability":"mutable","name":"value","nameLocation":"1196:5:20","nodeType":"VariableDeclaration","scope":5189,"src":"1189:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5186,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:20"},"src":"1141:62:20"},{"documentation":{"id":5190,"nodeType":"StructuredDocumentation","src":"1209:75:20","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5194,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:20","nodeType":"ErrorDefinition","parameters":{"id":5193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5192,"mutability":"mutable","name":"value","nameLocation":"1331:5:20","nodeType":"VariableDeclaration","scope":5194,"src":"1323:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:20"},"src":"1289:49:20"},{"body":{"id":5221,"nodeType":"Block","src":"1695:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"1709:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5204,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5203,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:20","memberName":"max","nodeType":"MemberAccess","src":"1717:17:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5215,"nodeType":"IfStatement","src":"1705:105:20","trueBody":{"id":5214,"nodeType":"Block","src":"1736:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"1793:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5209,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"1757:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5213,"nodeType":"RevertStatement","src":"1750:49:20"}]}},{"expression":{"arguments":[{"id":5218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"1834:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5216,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:20","typeDescriptions":{}}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5201,"id":5220,"nodeType":"Return","src":"1819:21:20"}]},"documentation":{"id":5195,"nodeType":"StructuredDocumentation","src":"1344:280:20","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5222,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:20","nodeType":"FunctionDefinition","parameters":{"id":5198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5197,"mutability":"mutable","name":"value","nameLocation":"1656:5:20","nodeType":"VariableDeclaration","scope":5222,"src":"1648:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5196,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:20"},"returnParameters":{"id":5201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5222,"src":"1686:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5199,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:20"},"scope":6932,"src":"1629:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5249,"nodeType":"Block","src":"2204:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"2218:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5232,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5231,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:20","memberName":"max","nodeType":"MemberAccess","src":"2226:17:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5243,"nodeType":"IfStatement","src":"2214:105:20","trueBody":{"id":5242,"nodeType":"Block","src":"2245:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"2302:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5237,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"2266:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5241,"nodeType":"RevertStatement","src":"2259:49:20"}]}},{"expression":{"arguments":[{"id":5246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5225,"src":"2343:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5244,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:20","typeDescriptions":{}}},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5229,"id":5248,"nodeType":"Return","src":"2328:21:20"}]},"documentation":{"id":5223,"nodeType":"StructuredDocumentation","src":"1853:280:20","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5250,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:20","nodeType":"FunctionDefinition","parameters":{"id":5226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5225,"mutability":"mutable","name":"value","nameLocation":"2165:5:20","nodeType":"VariableDeclaration","scope":5250,"src":"2157:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5224,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:20"},"returnParameters":{"id":5229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5250,"src":"2195:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5227,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:20"},"scope":6932,"src":"2138:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5277,"nodeType":"Block","src":"2713:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"2727:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5260,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5259,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:20","memberName":"max","nodeType":"MemberAccess","src":"2735:17:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5271,"nodeType":"IfStatement","src":"2723:105:20","trueBody":{"id":5270,"nodeType":"Block","src":"2754:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"2811:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5265,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"2775:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5269,"nodeType":"RevertStatement","src":"2768:49:20"}]}},{"expression":{"arguments":[{"id":5274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"2852:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5272,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:20","typeDescriptions":{}}},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5257,"id":5276,"nodeType":"Return","src":"2837:21:20"}]},"documentation":{"id":5251,"nodeType":"StructuredDocumentation","src":"2362:280:20","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5278,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:20","nodeType":"FunctionDefinition","parameters":{"id":5254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"value","nameLocation":"2674:5:20","nodeType":"VariableDeclaration","scope":5278,"src":"2666:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5252,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:20"},"returnParameters":{"id":5257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5278,"src":"2704:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5255,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:20"},"scope":6932,"src":"2647:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5305,"nodeType":"Block","src":"3222:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"3236:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5288,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5287,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:20","memberName":"max","nodeType":"MemberAccess","src":"3244:17:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5299,"nodeType":"IfStatement","src":"3232:105:20","trueBody":{"id":5298,"nodeType":"Block","src":"3263:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"3320:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5293,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"3284:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5297,"nodeType":"RevertStatement","src":"3277:49:20"}]}},{"expression":{"arguments":[{"id":5302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"3361:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5300,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:20","typeDescriptions":{}}},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5285,"id":5304,"nodeType":"Return","src":"3346:21:20"}]},"documentation":{"id":5279,"nodeType":"StructuredDocumentation","src":"2871:280:20","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5306,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:20","nodeType":"FunctionDefinition","parameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5281,"mutability":"mutable","name":"value","nameLocation":"3183:5:20","nodeType":"VariableDeclaration","scope":5306,"src":"3175:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5280,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:20"},"returnParameters":{"id":5285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5306,"src":"3213:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5283,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:20"},"scope":6932,"src":"3156:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5333,"nodeType":"Block","src":"3731:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"3745:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5316,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5315,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:20","memberName":"max","nodeType":"MemberAccess","src":"3753:17:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5327,"nodeType":"IfStatement","src":"3741:105:20","trueBody":{"id":5326,"nodeType":"Block","src":"3772:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"3829:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5321,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"3793:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5325,"nodeType":"RevertStatement","src":"3786:49:20"}]}},{"expression":{"arguments":[{"id":5330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"3870:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5328,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:20","typeDescriptions":{}}},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5313,"id":5332,"nodeType":"Return","src":"3855:21:20"}]},"documentation":{"id":5307,"nodeType":"StructuredDocumentation","src":"3380:280:20","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5334,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:20","nodeType":"FunctionDefinition","parameters":{"id":5310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"value","nameLocation":"3692:5:20","nodeType":"VariableDeclaration","scope":5334,"src":"3684:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5308,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:20"},"returnParameters":{"id":5313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5334,"src":"3722:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5311,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:20"},"scope":6932,"src":"3665:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5361,"nodeType":"Block","src":"4240:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"4254:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5344,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5343,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:20","memberName":"max","nodeType":"MemberAccess","src":"4262:17:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5355,"nodeType":"IfStatement","src":"4250:105:20","trueBody":{"id":5354,"nodeType":"Block","src":"4281:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"4338:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5349,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"4302:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5353,"nodeType":"RevertStatement","src":"4295:49:20"}]}},{"expression":{"arguments":[{"id":5358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"4379:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5356,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:20","typeDescriptions":{}}},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5341,"id":5360,"nodeType":"Return","src":"4364:21:20"}]},"documentation":{"id":5335,"nodeType":"StructuredDocumentation","src":"3889:280:20","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5362,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:20","nodeType":"FunctionDefinition","parameters":{"id":5338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"mutability":"mutable","name":"value","nameLocation":"4201:5:20","nodeType":"VariableDeclaration","scope":5362,"src":"4193:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5336,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:20"},"returnParameters":{"id":5341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5362,"src":"4231:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5339,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:20"},"scope":6932,"src":"4174:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5389,"nodeType":"Block","src":"4749:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"4763:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5372,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5371,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:20","memberName":"max","nodeType":"MemberAccess","src":"4771:17:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5383,"nodeType":"IfStatement","src":"4759:105:20","trueBody":{"id":5382,"nodeType":"Block","src":"4790:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"4847:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5377,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"4811:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5381,"nodeType":"RevertStatement","src":"4804:49:20"}]}},{"expression":{"arguments":[{"id":5386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"4888:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5384,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:20","typeDescriptions":{}}},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5369,"id":5388,"nodeType":"Return","src":"4873:21:20"}]},"documentation":{"id":5363,"nodeType":"StructuredDocumentation","src":"4398:280:20","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5390,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:20","nodeType":"FunctionDefinition","parameters":{"id":5366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5365,"mutability":"mutable","name":"value","nameLocation":"4710:5:20","nodeType":"VariableDeclaration","scope":5390,"src":"4702:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5364,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:20"},"returnParameters":{"id":5369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5390,"src":"4740:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5367,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:20"},"scope":6932,"src":"4683:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5417,"nodeType":"Block","src":"5258:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"5272:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5400,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5399,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:20","memberName":"max","nodeType":"MemberAccess","src":"5280:17:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5411,"nodeType":"IfStatement","src":"5268:105:20","trueBody":{"id":5410,"nodeType":"Block","src":"5299:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"5356:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5405,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"5320:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5409,"nodeType":"RevertStatement","src":"5313:49:20"}]}},{"expression":{"arguments":[{"id":5414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"5397:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5412,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:20","typeDescriptions":{}}},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5397,"id":5416,"nodeType":"Return","src":"5382:21:20"}]},"documentation":{"id":5391,"nodeType":"StructuredDocumentation","src":"4907:280:20","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5418,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:20","nodeType":"FunctionDefinition","parameters":{"id":5394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5393,"mutability":"mutable","name":"value","nameLocation":"5219:5:20","nodeType":"VariableDeclaration","scope":5418,"src":"5211:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5392,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:20"},"returnParameters":{"id":5397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5418,"src":"5249:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5395,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:20"},"scope":6932,"src":"5192:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5445,"nodeType":"Block","src":"5767:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"5781:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5428,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5427,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:20","memberName":"max","nodeType":"MemberAccess","src":"5789:17:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5439,"nodeType":"IfStatement","src":"5777:105:20","trueBody":{"id":5438,"nodeType":"Block","src":"5808:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"5865:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5433,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"5829:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5437,"nodeType":"RevertStatement","src":"5822:49:20"}]}},{"expression":{"arguments":[{"id":5442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"5906:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5440,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:20","typeDescriptions":{}}},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5425,"id":5444,"nodeType":"Return","src":"5891:21:20"}]},"documentation":{"id":5419,"nodeType":"StructuredDocumentation","src":"5416:280:20","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5446,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:20","nodeType":"FunctionDefinition","parameters":{"id":5422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5421,"mutability":"mutable","name":"value","nameLocation":"5728:5:20","nodeType":"VariableDeclaration","scope":5446,"src":"5720:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5420,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:20"},"returnParameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5446,"src":"5758:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5423,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:20"},"scope":6932,"src":"5701:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5473,"nodeType":"Block","src":"6276:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"6290:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5456,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5455,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:20","memberName":"max","nodeType":"MemberAccess","src":"6298:17:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5467,"nodeType":"IfStatement","src":"6286:105:20","trueBody":{"id":5466,"nodeType":"Block","src":"6317:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"6374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5461,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"6338:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5465,"nodeType":"RevertStatement","src":"6331:49:20"}]}},{"expression":{"arguments":[{"id":5470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"6415:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5468,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:20","typeDescriptions":{}}},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5453,"id":5472,"nodeType":"Return","src":"6400:21:20"}]},"documentation":{"id":5447,"nodeType":"StructuredDocumentation","src":"5925:280:20","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5474,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:20","nodeType":"FunctionDefinition","parameters":{"id":5450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5449,"mutability":"mutable","name":"value","nameLocation":"6237:5:20","nodeType":"VariableDeclaration","scope":5474,"src":"6229:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5448,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:20"},"returnParameters":{"id":5453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5474,"src":"6267:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5451,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:20"},"scope":6932,"src":"6210:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5501,"nodeType":"Block","src":"6785:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"6799:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5484,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5483,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:20","memberName":"max","nodeType":"MemberAccess","src":"6807:17:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5495,"nodeType":"IfStatement","src":"6795:105:20","trueBody":{"id":5494,"nodeType":"Block","src":"6826:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"6883:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5489,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"6847:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5493,"nodeType":"RevertStatement","src":"6840:49:20"}]}},{"expression":{"arguments":[{"id":5498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"6924:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5496,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:20","typeDescriptions":{}}},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5481,"id":5500,"nodeType":"Return","src":"6909:21:20"}]},"documentation":{"id":5475,"nodeType":"StructuredDocumentation","src":"6434:280:20","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5502,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:20","nodeType":"FunctionDefinition","parameters":{"id":5478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5477,"mutability":"mutable","name":"value","nameLocation":"6746:5:20","nodeType":"VariableDeclaration","scope":5502,"src":"6738:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5476,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:20"},"returnParameters":{"id":5481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5502,"src":"6776:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5479,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:20"},"scope":6932,"src":"6719:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5529,"nodeType":"Block","src":"7294:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"7308:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5512,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5511,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:20","memberName":"max","nodeType":"MemberAccess","src":"7316:17:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5523,"nodeType":"IfStatement","src":"7304:105:20","trueBody":{"id":5522,"nodeType":"Block","src":"7335:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"7392:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5517,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"7356:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5521,"nodeType":"RevertStatement","src":"7349:49:20"}]}},{"expression":{"arguments":[{"id":5526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"7433:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5524,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:20","typeDescriptions":{}}},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5509,"id":5528,"nodeType":"Return","src":"7418:21:20"}]},"documentation":{"id":5503,"nodeType":"StructuredDocumentation","src":"6943:280:20","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5530,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:20","nodeType":"FunctionDefinition","parameters":{"id":5506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5505,"mutability":"mutable","name":"value","nameLocation":"7255:5:20","nodeType":"VariableDeclaration","scope":5530,"src":"7247:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5504,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:20"},"returnParameters":{"id":5509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5530,"src":"7285:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5507,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:20"},"scope":6932,"src":"7228:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5557,"nodeType":"Block","src":"7803:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"7817:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5540,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5539,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:20","memberName":"max","nodeType":"MemberAccess","src":"7825:17:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5551,"nodeType":"IfStatement","src":"7813:105:20","trueBody":{"id":5550,"nodeType":"Block","src":"7844:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"7901:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5545,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"7865:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5549,"nodeType":"RevertStatement","src":"7858:49:20"}]}},{"expression":{"arguments":[{"id":5554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"7942:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5552,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:20","typeDescriptions":{}}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5537,"id":5556,"nodeType":"Return","src":"7927:21:20"}]},"documentation":{"id":5531,"nodeType":"StructuredDocumentation","src":"7452:280:20","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5558,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:20","nodeType":"FunctionDefinition","parameters":{"id":5534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5533,"mutability":"mutable","name":"value","nameLocation":"7764:5:20","nodeType":"VariableDeclaration","scope":5558,"src":"7756:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5532,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:20"},"returnParameters":{"id":5537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5558,"src":"7794:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5535,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:20"},"scope":6932,"src":"7737:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5585,"nodeType":"Block","src":"8312:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"8326:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5568,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5567,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:20","memberName":"max","nodeType":"MemberAccess","src":"8334:17:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5579,"nodeType":"IfStatement","src":"8322:105:20","trueBody":{"id":5578,"nodeType":"Block","src":"8353:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"8410:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5573,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"8374:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5577,"nodeType":"RevertStatement","src":"8367:49:20"}]}},{"expression":{"arguments":[{"id":5582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"8451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5580,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:20","typeDescriptions":{}}},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5565,"id":5584,"nodeType":"Return","src":"8436:21:20"}]},"documentation":{"id":5559,"nodeType":"StructuredDocumentation","src":"7961:280:20","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5586,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:20","nodeType":"FunctionDefinition","parameters":{"id":5562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5561,"mutability":"mutable","name":"value","nameLocation":"8273:5:20","nodeType":"VariableDeclaration","scope":5586,"src":"8265:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5560,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:20"},"returnParameters":{"id":5565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5586,"src":"8303:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5563,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:20"},"scope":6932,"src":"8246:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5613,"nodeType":"Block","src":"8821:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"8835:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5596,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5595,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:20","memberName":"max","nodeType":"MemberAccess","src":"8843:17:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5607,"nodeType":"IfStatement","src":"8831:105:20","trueBody":{"id":5606,"nodeType":"Block","src":"8862:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"8919:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5601,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"8883:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5605,"nodeType":"RevertStatement","src":"8876:49:20"}]}},{"expression":{"arguments":[{"id":5610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"8960:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5608,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:20","typeDescriptions":{}}},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5593,"id":5612,"nodeType":"Return","src":"8945:21:20"}]},"documentation":{"id":5587,"nodeType":"StructuredDocumentation","src":"8470:280:20","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5614,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:20","nodeType":"FunctionDefinition","parameters":{"id":5590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5589,"mutability":"mutable","name":"value","nameLocation":"8782:5:20","nodeType":"VariableDeclaration","scope":5614,"src":"8774:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5588,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:20"},"returnParameters":{"id":5593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5614,"src":"8812:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5591,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:20"},"scope":6932,"src":"8755:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5641,"nodeType":"Block","src":"9330:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"9344:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5624,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5623,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:20","memberName":"max","nodeType":"MemberAccess","src":"9352:17:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5635,"nodeType":"IfStatement","src":"9340:105:20","trueBody":{"id":5634,"nodeType":"Block","src":"9371:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"9428:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5629,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"9392:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5633,"nodeType":"RevertStatement","src":"9385:49:20"}]}},{"expression":{"arguments":[{"id":5638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"9469:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5636,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:20","typeDescriptions":{}}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5621,"id":5640,"nodeType":"Return","src":"9454:21:20"}]},"documentation":{"id":5615,"nodeType":"StructuredDocumentation","src":"8979:280:20","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5642,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:20","nodeType":"FunctionDefinition","parameters":{"id":5618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5617,"mutability":"mutable","name":"value","nameLocation":"9291:5:20","nodeType":"VariableDeclaration","scope":5642,"src":"9283:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5616,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:20"},"returnParameters":{"id":5621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5642,"src":"9321:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5619,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:20"},"scope":6932,"src":"9264:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5669,"nodeType":"Block","src":"9839:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"9853:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5652,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5651,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:20","memberName":"max","nodeType":"MemberAccess","src":"9861:17:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5663,"nodeType":"IfStatement","src":"9849:105:20","trueBody":{"id":5662,"nodeType":"Block","src":"9880:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"9937:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5657,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"9901:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5661,"nodeType":"RevertStatement","src":"9894:49:20"}]}},{"expression":{"arguments":[{"id":5666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"9978:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5664,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:20","typeDescriptions":{}}},"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5649,"id":5668,"nodeType":"Return","src":"9963:21:20"}]},"documentation":{"id":5643,"nodeType":"StructuredDocumentation","src":"9488:280:20","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5670,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:20","nodeType":"FunctionDefinition","parameters":{"id":5646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5645,"mutability":"mutable","name":"value","nameLocation":"9800:5:20","nodeType":"VariableDeclaration","scope":5670,"src":"9792:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5644,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:20"},"returnParameters":{"id":5649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5670,"src":"9830:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5647,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:20"},"scope":6932,"src":"9773:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5697,"nodeType":"Block","src":"10348:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"10362:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5680,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5679,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:20","memberName":"max","nodeType":"MemberAccess","src":"10370:17:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5691,"nodeType":"IfStatement","src":"10358:105:20","trueBody":{"id":5690,"nodeType":"Block","src":"10389:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"10446:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5685,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"10410:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5689,"nodeType":"RevertStatement","src":"10403:49:20"}]}},{"expression":{"arguments":[{"id":5694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"10487:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5692,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:20","typeDescriptions":{}}},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5677,"id":5696,"nodeType":"Return","src":"10472:21:20"}]},"documentation":{"id":5671,"nodeType":"StructuredDocumentation","src":"9997:280:20","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5698,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:20","nodeType":"FunctionDefinition","parameters":{"id":5674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5673,"mutability":"mutable","name":"value","nameLocation":"10309:5:20","nodeType":"VariableDeclaration","scope":5698,"src":"10301:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5672,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:20"},"returnParameters":{"id":5677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5698,"src":"10339:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5675,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:20"},"scope":6932,"src":"10282:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5725,"nodeType":"Block","src":"10857:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"10871:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5708,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5707,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:20","memberName":"max","nodeType":"MemberAccess","src":"10879:17:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5719,"nodeType":"IfStatement","src":"10867:105:20","trueBody":{"id":5718,"nodeType":"Block","src":"10898:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"10955:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5713,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"10919:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5717,"nodeType":"RevertStatement","src":"10912:49:20"}]}},{"expression":{"arguments":[{"id":5722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"10996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5720,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:20","typeDescriptions":{}}},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5705,"id":5724,"nodeType":"Return","src":"10981:21:20"}]},"documentation":{"id":5699,"nodeType":"StructuredDocumentation","src":"10506:280:20","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5726,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:20","nodeType":"FunctionDefinition","parameters":{"id":5702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"mutability":"mutable","name":"value","nameLocation":"10818:5:20","nodeType":"VariableDeclaration","scope":5726,"src":"10810:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5700,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:20"},"returnParameters":{"id":5705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5726,"src":"10848:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5703,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:20"},"scope":6932,"src":"10791:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5753,"nodeType":"Block","src":"11360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"11374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5736,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5735,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:20","memberName":"max","nodeType":"MemberAccess","src":"11382:16:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5747,"nodeType":"IfStatement","src":"11370:103:20","trueBody":{"id":5746,"nodeType":"Block","src":"11400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"11456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5741,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"11421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5745,"nodeType":"RevertStatement","src":"11414:48:20"}]}},{"expression":{"arguments":[{"id":5750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"11496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5748,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:20","typeDescriptions":{}}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5733,"id":5752,"nodeType":"Return","src":"11482:20:20"}]},"documentation":{"id":5727,"nodeType":"StructuredDocumentation","src":"11015:276:20","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5754,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5729,"mutability":"mutable","name":"value","nameLocation":"11322:5:20","nodeType":"VariableDeclaration","scope":5754,"src":"11314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5728,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:20"},"returnParameters":{"id":5733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5754,"src":"11352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5731,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:20"},"scope":6932,"src":"11296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5781,"nodeType":"Block","src":"11860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"11874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5764,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5763,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:20","memberName":"max","nodeType":"MemberAccess","src":"11882:16:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5775,"nodeType":"IfStatement","src":"11870:103:20","trueBody":{"id":5774,"nodeType":"Block","src":"11900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"11956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5769,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"11921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5773,"nodeType":"RevertStatement","src":"11914:48:20"}]}},{"expression":{"arguments":[{"id":5778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"11996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5776,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:20","typeDescriptions":{}}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5761,"id":5780,"nodeType":"Return","src":"11982:20:20"}]},"documentation":{"id":5755,"nodeType":"StructuredDocumentation","src":"11515:276:20","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5782,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5757,"mutability":"mutable","name":"value","nameLocation":"11822:5:20","nodeType":"VariableDeclaration","scope":5782,"src":"11814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5756,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:20"},"returnParameters":{"id":5761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5782,"src":"11852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5759,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:20"},"scope":6932,"src":"11796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5809,"nodeType":"Block","src":"12360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"12374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5792,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5791,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:20","memberName":"max","nodeType":"MemberAccess","src":"12382:16:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5803,"nodeType":"IfStatement","src":"12370:103:20","trueBody":{"id":5802,"nodeType":"Block","src":"12400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"12456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5797,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"12421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5801,"nodeType":"RevertStatement","src":"12414:48:20"}]}},{"expression":{"arguments":[{"id":5806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"12496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5804,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:20","typeDescriptions":{}}},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5789,"id":5808,"nodeType":"Return","src":"12482:20:20"}]},"documentation":{"id":5783,"nodeType":"StructuredDocumentation","src":"12015:276:20","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5810,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5785,"mutability":"mutable","name":"value","nameLocation":"12322:5:20","nodeType":"VariableDeclaration","scope":5810,"src":"12314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5784,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:20"},"returnParameters":{"id":5789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5810,"src":"12352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5787,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:20"},"scope":6932,"src":"12296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5837,"nodeType":"Block","src":"12860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"12874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5820,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5819,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:20","memberName":"max","nodeType":"MemberAccess","src":"12882:16:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5831,"nodeType":"IfStatement","src":"12870:103:20","trueBody":{"id":5830,"nodeType":"Block","src":"12900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"12956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5825,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"12921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5829,"nodeType":"RevertStatement","src":"12914:48:20"}]}},{"expression":{"arguments":[{"id":5834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"12996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5832,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:20","typeDescriptions":{}}},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5817,"id":5836,"nodeType":"Return","src":"12982:20:20"}]},"documentation":{"id":5811,"nodeType":"StructuredDocumentation","src":"12515:276:20","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5838,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5813,"mutability":"mutable","name":"value","nameLocation":"12822:5:20","nodeType":"VariableDeclaration","scope":5838,"src":"12814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5812,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:20"},"returnParameters":{"id":5817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5838,"src":"12852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5815,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:20"},"scope":6932,"src":"12796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5865,"nodeType":"Block","src":"13360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"13374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5848,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5847,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:20","memberName":"max","nodeType":"MemberAccess","src":"13382:16:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5859,"nodeType":"IfStatement","src":"13370:103:20","trueBody":{"id":5858,"nodeType":"Block","src":"13400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"13456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5853,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"13421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5857,"nodeType":"RevertStatement","src":"13414:48:20"}]}},{"expression":{"arguments":[{"id":5862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"13496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5860,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:20","typeDescriptions":{}}},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5845,"id":5864,"nodeType":"Return","src":"13482:20:20"}]},"documentation":{"id":5839,"nodeType":"StructuredDocumentation","src":"13015:276:20","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5866,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5841,"mutability":"mutable","name":"value","nameLocation":"13322:5:20","nodeType":"VariableDeclaration","scope":5866,"src":"13314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5840,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:20"},"returnParameters":{"id":5845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5866,"src":"13352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5843,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:20"},"scope":6932,"src":"13296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5893,"nodeType":"Block","src":"13860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"13874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5876,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5875,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:20","memberName":"max","nodeType":"MemberAccess","src":"13882:16:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5887,"nodeType":"IfStatement","src":"13870:103:20","trueBody":{"id":5886,"nodeType":"Block","src":"13900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"13956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5881,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"13921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5885,"nodeType":"RevertStatement","src":"13914:48:20"}]}},{"expression":{"arguments":[{"id":5890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"13996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5888,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:20","typeDescriptions":{}}},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5873,"id":5892,"nodeType":"Return","src":"13982:20:20"}]},"documentation":{"id":5867,"nodeType":"StructuredDocumentation","src":"13515:276:20","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5894,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5869,"mutability":"mutable","name":"value","nameLocation":"13822:5:20","nodeType":"VariableDeclaration","scope":5894,"src":"13814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5868,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:20"},"returnParameters":{"id":5873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5894,"src":"13852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5871,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:20"},"scope":6932,"src":"13796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5921,"nodeType":"Block","src":"14360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"14374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5904,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5903,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:20","memberName":"max","nodeType":"MemberAccess","src":"14382:16:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5915,"nodeType":"IfStatement","src":"14370:103:20","trueBody":{"id":5914,"nodeType":"Block","src":"14400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"14456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5909,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"14421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5913,"nodeType":"RevertStatement","src":"14414:48:20"}]}},{"expression":{"arguments":[{"id":5918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"14496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5916,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:20","typeDescriptions":{}}},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5901,"id":5920,"nodeType":"Return","src":"14482:20:20"}]},"documentation":{"id":5895,"nodeType":"StructuredDocumentation","src":"14015:276:20","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5922,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5897,"mutability":"mutable","name":"value","nameLocation":"14322:5:20","nodeType":"VariableDeclaration","scope":5922,"src":"14314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5896,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:20"},"returnParameters":{"id":5901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5922,"src":"14352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5899,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:20"},"scope":6932,"src":"14296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5949,"nodeType":"Block","src":"14860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"14874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5932,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5931,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:20","memberName":"max","nodeType":"MemberAccess","src":"14882:16:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5943,"nodeType":"IfStatement","src":"14870:103:20","trueBody":{"id":5942,"nodeType":"Block","src":"14900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"14956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5937,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"14921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5941,"nodeType":"RevertStatement","src":"14914:48:20"}]}},{"expression":{"arguments":[{"id":5946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"14996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5944,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:20","typeDescriptions":{}}},"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5929,"id":5948,"nodeType":"Return","src":"14982:20:20"}]},"documentation":{"id":5923,"nodeType":"StructuredDocumentation","src":"14515:276:20","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5950,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5925,"mutability":"mutable","name":"value","nameLocation":"14822:5:20","nodeType":"VariableDeclaration","scope":5950,"src":"14814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5924,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:20"},"returnParameters":{"id":5929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5950,"src":"14852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5927,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:20"},"scope":6932,"src":"14796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5977,"nodeType":"Block","src":"15360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"15374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5960,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5959,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:20","memberName":"max","nodeType":"MemberAccess","src":"15382:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5971,"nodeType":"IfStatement","src":"15370:103:20","trueBody":{"id":5970,"nodeType":"Block","src":"15400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"15456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5965,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"15421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5969,"nodeType":"RevertStatement","src":"15414:48:20"}]}},{"expression":{"arguments":[{"id":5974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"15496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5972,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:20","typeDescriptions":{}}},"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5957,"id":5976,"nodeType":"Return","src":"15482:20:20"}]},"documentation":{"id":5951,"nodeType":"StructuredDocumentation","src":"15015:276:20","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5978,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"value","nameLocation":"15322:5:20","nodeType":"VariableDeclaration","scope":5978,"src":"15314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5952,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:20"},"returnParameters":{"id":5957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5978,"src":"15352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5955,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:20"},"scope":6932,"src":"15296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6005,"nodeType":"Block","src":"15860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"15874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5988,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5987,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:20","memberName":"max","nodeType":"MemberAccess","src":"15882:16:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5999,"nodeType":"IfStatement","src":"15870:103:20","trueBody":{"id":5998,"nodeType":"Block","src":"15900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"15956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5993,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"15921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5997,"nodeType":"RevertStatement","src":"15914:48:20"}]}},{"expression":{"arguments":[{"id":6002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"15996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6000,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:20","typeDescriptions":{}}},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5985,"id":6004,"nodeType":"Return","src":"15982:20:20"}]},"documentation":{"id":5979,"nodeType":"StructuredDocumentation","src":"15515:276:20","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6006,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5981,"mutability":"mutable","name":"value","nameLocation":"15822:5:20","nodeType":"VariableDeclaration","scope":6006,"src":"15814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5980,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:20"},"returnParameters":{"id":5985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6006,"src":"15852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5983,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:20"},"scope":6932,"src":"15796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6033,"nodeType":"Block","src":"16360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"16374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6016,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6015,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:20","memberName":"max","nodeType":"MemberAccess","src":"16382:16:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6027,"nodeType":"IfStatement","src":"16370:103:20","trueBody":{"id":6026,"nodeType":"Block","src":"16400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"16456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6021,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"16421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6025,"nodeType":"RevertStatement","src":"16414:48:20"}]}},{"expression":{"arguments":[{"id":6030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"16496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6028,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:20","typeDescriptions":{}}},"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6013,"id":6032,"nodeType":"Return","src":"16482:20:20"}]},"documentation":{"id":6007,"nodeType":"StructuredDocumentation","src":"16015:276:20","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6034,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:20","nodeType":"FunctionDefinition","parameters":{"id":6010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6009,"mutability":"mutable","name":"value","nameLocation":"16322:5:20","nodeType":"VariableDeclaration","scope":6034,"src":"16314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6008,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:20"},"returnParameters":{"id":6013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6034,"src":"16352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6011,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:20"},"scope":6932,"src":"16296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6061,"nodeType":"Block","src":"16854:146:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"16868:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6044,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6043,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:20","memberName":"max","nodeType":"MemberAccess","src":"16876:15:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6055,"nodeType":"IfStatement","src":"16864:101:20","trueBody":{"id":6054,"nodeType":"Block","src":"16893:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"16948:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6049,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5177,"src":"16914:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6053,"nodeType":"RevertStatement","src":"16907:47:20"}]}},{"expression":{"arguments":[{"id":6058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"16987:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6056,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:20","typeDescriptions":{}}},"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6041,"id":6060,"nodeType":"Return","src":"16974:19:20"}]},"documentation":{"id":6035,"nodeType":"StructuredDocumentation","src":"16515:272:20","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6062,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:20","nodeType":"FunctionDefinition","parameters":{"id":6038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"value","nameLocation":"16817:5:20","nodeType":"VariableDeclaration","scope":6062,"src":"16809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6036,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:20"},"returnParameters":{"id":6041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6062,"src":"16847:5:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6039,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:20"},"scope":6932,"src":"16792:208:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6084,"nodeType":"Block","src":"17236:128:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"17250:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6078,"nodeType":"IfStatement","src":"17246:81:20","trueBody":{"id":6077,"nodeType":"Block","src":"17261:66:20","statements":[{"errorCall":{"arguments":[{"id":6074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"17310:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6073,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5182,"src":"17282:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6076,"nodeType":"RevertStatement","src":"17275:41:20"}]}},{"expression":{"arguments":[{"id":6081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"17351:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6079,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:20","typeDescriptions":{}}},"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6069,"id":6083,"nodeType":"Return","src":"17336:21:20"}]},"documentation":{"id":6063,"nodeType":"StructuredDocumentation","src":"17006:160:20","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6085,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:20","nodeType":"FunctionDefinition","parameters":{"id":6066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6065,"mutability":"mutable","name":"value","nameLocation":"17197:5:20","nodeType":"VariableDeclaration","scope":6085,"src":"17190:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6064,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:20"},"returnParameters":{"id":6069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6085,"src":"17227:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6067,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:20"},"scope":6932,"src":"17171:193:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6110,"nodeType":"Block","src":"17761:150:20","statements":[{"expression":{"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6093,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"17771:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6088,"src":"17791:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6094,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:20","typeDescriptions":{}}},"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6099,"nodeType":"ExpressionStatement","src":"17771:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6100,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"17811:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6088,"src":"17825:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6109,"nodeType":"IfStatement","src":"17807:98:20","trueBody":{"id":6108,"nodeType":"Block","src":"17832:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6088,"src":"17888:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6103,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"17853:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6107,"nodeType":"RevertStatement","src":"17846:48:20"}]}}]},"documentation":{"id":6086,"nodeType":"StructuredDocumentation","src":"17370:312:20","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6111,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:20","nodeType":"FunctionDefinition","parameters":{"id":6089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6088,"mutability":"mutable","name":"value","nameLocation":"17712:5:20","nodeType":"VariableDeclaration","scope":6111,"src":"17705:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6087,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:20"},"returnParameters":{"id":6092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6091,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:20","nodeType":"VariableDeclaration","scope":6111,"src":"17742:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6090,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:20"},"scope":6932,"src":"17687:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6136,"nodeType":"Block","src":"18308:150:20","statements":[{"expression":{"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6119,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"18318:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"18338:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6120,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:20","typeDescriptions":{}}},"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6125,"nodeType":"ExpressionStatement","src":"18318:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6126,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6117,"src":"18358:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"18372:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6135,"nodeType":"IfStatement","src":"18354:98:20","trueBody":{"id":6134,"nodeType":"Block","src":"18379:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"18435:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6129,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"18400:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6133,"nodeType":"RevertStatement","src":"18393:48:20"}]}}]},"documentation":{"id":6112,"nodeType":"StructuredDocumentation","src":"17917:312:20","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6137,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:20","nodeType":"FunctionDefinition","parameters":{"id":6115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6114,"mutability":"mutable","name":"value","nameLocation":"18259:5:20","nodeType":"VariableDeclaration","scope":6137,"src":"18252:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6113,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:20"},"returnParameters":{"id":6118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6117,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:20","nodeType":"VariableDeclaration","scope":6137,"src":"18289:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6116,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:20"},"scope":6932,"src":"18234:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6162,"nodeType":"Block","src":"18855:150:20","statements":[{"expression":{"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6145,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"18865:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6148,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"18885:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6146,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:20","typeDescriptions":{}}},"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6151,"nodeType":"ExpressionStatement","src":"18865:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6152,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6143,"src":"18905:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"18919:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6161,"nodeType":"IfStatement","src":"18901:98:20","trueBody":{"id":6160,"nodeType":"Block","src":"18926:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6140,"src":"18982:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6155,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"18947:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6159,"nodeType":"RevertStatement","src":"18940:48:20"}]}}]},"documentation":{"id":6138,"nodeType":"StructuredDocumentation","src":"18464:312:20","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6163,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:20","nodeType":"FunctionDefinition","parameters":{"id":6141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6140,"mutability":"mutable","name":"value","nameLocation":"18806:5:20","nodeType":"VariableDeclaration","scope":6163,"src":"18799:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6139,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:20"},"returnParameters":{"id":6144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6143,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:20","nodeType":"VariableDeclaration","scope":6163,"src":"18836:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6142,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:20"},"scope":6932,"src":"18781:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6188,"nodeType":"Block","src":"19402:150:20","statements":[{"expression":{"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6171,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6169,"src":"19412:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"19432:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6172,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:20","typeDescriptions":{}}},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6177,"nodeType":"ExpressionStatement","src":"19412:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6178,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6169,"src":"19452:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"19466:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6187,"nodeType":"IfStatement","src":"19448:98:20","trueBody":{"id":6186,"nodeType":"Block","src":"19473:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"19529:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6181,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"19494:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6185,"nodeType":"RevertStatement","src":"19487:48:20"}]}}]},"documentation":{"id":6164,"nodeType":"StructuredDocumentation","src":"19011:312:20","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6189,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:20","nodeType":"FunctionDefinition","parameters":{"id":6167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6166,"mutability":"mutable","name":"value","nameLocation":"19353:5:20","nodeType":"VariableDeclaration","scope":6189,"src":"19346:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6165,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:20"},"returnParameters":{"id":6170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6169,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:20","nodeType":"VariableDeclaration","scope":6189,"src":"19383:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6168,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:20"},"scope":6932,"src":"19328:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6214,"nodeType":"Block","src":"19949:150:20","statements":[{"expression":{"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6197,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"19959:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"19979:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6198,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:20","typeDescriptions":{}}},"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6203,"nodeType":"ExpressionStatement","src":"19959:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6204,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"19999:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"20013:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6213,"nodeType":"IfStatement","src":"19995:98:20","trueBody":{"id":6212,"nodeType":"Block","src":"20020:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"20076:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6207,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"20041:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6211,"nodeType":"RevertStatement","src":"20034:48:20"}]}}]},"documentation":{"id":6190,"nodeType":"StructuredDocumentation","src":"19558:312:20","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6215,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:20","nodeType":"FunctionDefinition","parameters":{"id":6193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6192,"mutability":"mutable","name":"value","nameLocation":"19900:5:20","nodeType":"VariableDeclaration","scope":6215,"src":"19893:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6191,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:20"},"returnParameters":{"id":6196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6195,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:20","nodeType":"VariableDeclaration","scope":6215,"src":"19930:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6194,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:20"},"scope":6932,"src":"19875:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6240,"nodeType":"Block","src":"20496:150:20","statements":[{"expression":{"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6223,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"20506:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6218,"src":"20526:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6224,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:20","typeDescriptions":{}}},"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6229,"nodeType":"ExpressionStatement","src":"20506:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6230,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"20546:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6218,"src":"20560:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6239,"nodeType":"IfStatement","src":"20542:98:20","trueBody":{"id":6238,"nodeType":"Block","src":"20567:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6218,"src":"20623:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6233,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"20588:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6237,"nodeType":"RevertStatement","src":"20581:48:20"}]}}]},"documentation":{"id":6216,"nodeType":"StructuredDocumentation","src":"20105:312:20","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6241,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:20","nodeType":"FunctionDefinition","parameters":{"id":6219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6218,"mutability":"mutable","name":"value","nameLocation":"20447:5:20","nodeType":"VariableDeclaration","scope":6241,"src":"20440:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6217,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:20"},"returnParameters":{"id":6222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6221,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:20","nodeType":"VariableDeclaration","scope":6241,"src":"20477:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6220,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:20"},"scope":6932,"src":"20422:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6266,"nodeType":"Block","src":"21043:150:20","statements":[{"expression":{"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6249,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"21053:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6244,"src":"21073:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6250,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:20","typeDescriptions":{}}},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6255,"nodeType":"ExpressionStatement","src":"21053:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6256,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6247,"src":"21093:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6244,"src":"21107:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6265,"nodeType":"IfStatement","src":"21089:98:20","trueBody":{"id":6264,"nodeType":"Block","src":"21114:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6244,"src":"21170:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6259,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"21135:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6263,"nodeType":"RevertStatement","src":"21128:48:20"}]}}]},"documentation":{"id":6242,"nodeType":"StructuredDocumentation","src":"20652:312:20","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6267,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:20","nodeType":"FunctionDefinition","parameters":{"id":6245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6244,"mutability":"mutable","name":"value","nameLocation":"20994:5:20","nodeType":"VariableDeclaration","scope":6267,"src":"20987:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6243,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:20"},"returnParameters":{"id":6248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6247,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:20","nodeType":"VariableDeclaration","scope":6267,"src":"21024:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6246,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:20"},"scope":6932,"src":"20969:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6292,"nodeType":"Block","src":"21590:150:20","statements":[{"expression":{"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6275,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"21600:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"21620:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6276,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:20","typeDescriptions":{}}},"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6281,"nodeType":"ExpressionStatement","src":"21600:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6282,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6273,"src":"21640:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"21654:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6291,"nodeType":"IfStatement","src":"21636:98:20","trueBody":{"id":6290,"nodeType":"Block","src":"21661:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6270,"src":"21717:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6285,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"21682:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6289,"nodeType":"RevertStatement","src":"21675:48:20"}]}}]},"documentation":{"id":6268,"nodeType":"StructuredDocumentation","src":"21199:312:20","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6293,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:20","nodeType":"FunctionDefinition","parameters":{"id":6271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6270,"mutability":"mutable","name":"value","nameLocation":"21541:5:20","nodeType":"VariableDeclaration","scope":6293,"src":"21534:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6269,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:20"},"returnParameters":{"id":6274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6273,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:20","nodeType":"VariableDeclaration","scope":6293,"src":"21571:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6272,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:20"},"scope":6932,"src":"21516:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6318,"nodeType":"Block","src":"22137:150:20","statements":[{"expression":{"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6301,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"22147:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"22167:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6302,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:20","typeDescriptions":{}}},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6307,"nodeType":"ExpressionStatement","src":"22147:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6308,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"22187:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"22201:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6317,"nodeType":"IfStatement","src":"22183:98:20","trueBody":{"id":6316,"nodeType":"Block","src":"22208:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"22264:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6311,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"22229:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6315,"nodeType":"RevertStatement","src":"22222:48:20"}]}}]},"documentation":{"id":6294,"nodeType":"StructuredDocumentation","src":"21746:312:20","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6319,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:20","nodeType":"FunctionDefinition","parameters":{"id":6297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6296,"mutability":"mutable","name":"value","nameLocation":"22088:5:20","nodeType":"VariableDeclaration","scope":6319,"src":"22081:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6295,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:20"},"returnParameters":{"id":6300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6299,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:20","nodeType":"VariableDeclaration","scope":6319,"src":"22118:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6298,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:20"},"scope":6932,"src":"22063:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6344,"nodeType":"Block","src":"22684:150:20","statements":[{"expression":{"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6327,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"22694:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"22714:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6328,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:20","typeDescriptions":{}}},"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6333,"nodeType":"ExpressionStatement","src":"22694:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6334,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6325,"src":"22734:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"22748:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6343,"nodeType":"IfStatement","src":"22730:98:20","trueBody":{"id":6342,"nodeType":"Block","src":"22755:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"22811:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6337,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"22776:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6341,"nodeType":"RevertStatement","src":"22769:48:20"}]}}]},"documentation":{"id":6320,"nodeType":"StructuredDocumentation","src":"22293:312:20","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6345,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:20","nodeType":"FunctionDefinition","parameters":{"id":6323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6322,"mutability":"mutable","name":"value","nameLocation":"22635:5:20","nodeType":"VariableDeclaration","scope":6345,"src":"22628:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6321,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:20"},"returnParameters":{"id":6326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6325,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:20","nodeType":"VariableDeclaration","scope":6345,"src":"22665:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6324,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:20"},"scope":6932,"src":"22610:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6370,"nodeType":"Block","src":"23231:150:20","statements":[{"expression":{"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6353,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"23241:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"23261:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6354,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:20","typeDescriptions":{}}},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6359,"nodeType":"ExpressionStatement","src":"23241:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6360,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6351,"src":"23281:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"23295:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6369,"nodeType":"IfStatement","src":"23277:98:20","trueBody":{"id":6368,"nodeType":"Block","src":"23302:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"23358:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6363,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"23323:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6367,"nodeType":"RevertStatement","src":"23316:48:20"}]}}]},"documentation":{"id":6346,"nodeType":"StructuredDocumentation","src":"22840:312:20","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6371,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:20","nodeType":"FunctionDefinition","parameters":{"id":6349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6348,"mutability":"mutable","name":"value","nameLocation":"23182:5:20","nodeType":"VariableDeclaration","scope":6371,"src":"23175:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6347,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:20"},"returnParameters":{"id":6352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6351,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:20","nodeType":"VariableDeclaration","scope":6371,"src":"23212:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6350,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:20"},"scope":6932,"src":"23157:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6396,"nodeType":"Block","src":"23778:150:20","statements":[{"expression":{"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6379,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6377,"src":"23788:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"23808:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6380,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:20","typeDescriptions":{}}},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6385,"nodeType":"ExpressionStatement","src":"23788:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6386,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6377,"src":"23828:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"23842:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6395,"nodeType":"IfStatement","src":"23824:98:20","trueBody":{"id":6394,"nodeType":"Block","src":"23849:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6374,"src":"23905:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6389,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"23870:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6393,"nodeType":"RevertStatement","src":"23863:48:20"}]}}]},"documentation":{"id":6372,"nodeType":"StructuredDocumentation","src":"23387:312:20","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6397,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:20","nodeType":"FunctionDefinition","parameters":{"id":6375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6374,"mutability":"mutable","name":"value","nameLocation":"23729:5:20","nodeType":"VariableDeclaration","scope":6397,"src":"23722:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6373,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:20"},"returnParameters":{"id":6378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6377,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:20","nodeType":"VariableDeclaration","scope":6397,"src":"23759:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6376,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:20"},"scope":6932,"src":"23704:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6422,"nodeType":"Block","src":"24325:150:20","statements":[{"expression":{"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6405,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"24335:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6400,"src":"24355:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6406,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:20","typeDescriptions":{}}},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6411,"nodeType":"ExpressionStatement","src":"24335:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6412,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"24375:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6400,"src":"24389:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6421,"nodeType":"IfStatement","src":"24371:98:20","trueBody":{"id":6420,"nodeType":"Block","src":"24396:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6400,"src":"24452:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6415,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"24417:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6419,"nodeType":"RevertStatement","src":"24410:48:20"}]}}]},"documentation":{"id":6398,"nodeType":"StructuredDocumentation","src":"23934:312:20","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6423,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:20","nodeType":"FunctionDefinition","parameters":{"id":6401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6400,"mutability":"mutable","name":"value","nameLocation":"24276:5:20","nodeType":"VariableDeclaration","scope":6423,"src":"24269:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6399,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:20"},"returnParameters":{"id":6404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6403,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:20","nodeType":"VariableDeclaration","scope":6423,"src":"24306:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6402,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:20"},"scope":6932,"src":"24251:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6448,"nodeType":"Block","src":"24872:150:20","statements":[{"expression":{"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6431,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6429,"src":"24882:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6434,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"24902:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6432,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:20","typeDescriptions":{}}},"id":6435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6437,"nodeType":"ExpressionStatement","src":"24882:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6438,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6429,"src":"24922:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"24936:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6447,"nodeType":"IfStatement","src":"24918:98:20","trueBody":{"id":6446,"nodeType":"Block","src":"24943:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"24999:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6441,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"24964:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6445,"nodeType":"RevertStatement","src":"24957:48:20"}]}}]},"documentation":{"id":6424,"nodeType":"StructuredDocumentation","src":"24481:312:20","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6449,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:20","nodeType":"FunctionDefinition","parameters":{"id":6427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6426,"mutability":"mutable","name":"value","nameLocation":"24823:5:20","nodeType":"VariableDeclaration","scope":6449,"src":"24816:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6425,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:20"},"returnParameters":{"id":6430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6429,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:20","nodeType":"VariableDeclaration","scope":6449,"src":"24853:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6428,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:20"},"scope":6932,"src":"24798:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6474,"nodeType":"Block","src":"25419:150:20","statements":[{"expression":{"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6457,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"25429:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"25449:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6458,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:20","typeDescriptions":{}}},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6463,"nodeType":"ExpressionStatement","src":"25429:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6464,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"25469:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"25483:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6473,"nodeType":"IfStatement","src":"25465:98:20","trueBody":{"id":6472,"nodeType":"Block","src":"25490:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"25546:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6467,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"25511:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6471,"nodeType":"RevertStatement","src":"25504:48:20"}]}}]},"documentation":{"id":6450,"nodeType":"StructuredDocumentation","src":"25028:312:20","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6475,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:20","nodeType":"FunctionDefinition","parameters":{"id":6453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6452,"mutability":"mutable","name":"value","nameLocation":"25370:5:20","nodeType":"VariableDeclaration","scope":6475,"src":"25363:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6451,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:20"},"returnParameters":{"id":6456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6455,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:20","nodeType":"VariableDeclaration","scope":6475,"src":"25400:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6454,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:20"},"scope":6932,"src":"25345:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6500,"nodeType":"Block","src":"25966:150:20","statements":[{"expression":{"id":6488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6483,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"25976:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"25996:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6484,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:20","typeDescriptions":{}}},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6489,"nodeType":"ExpressionStatement","src":"25976:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6490,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6481,"src":"26016:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"26030:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6499,"nodeType":"IfStatement","src":"26012:98:20","trueBody":{"id":6498,"nodeType":"Block","src":"26037:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6478,"src":"26093:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6493,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"26058:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6497,"nodeType":"RevertStatement","src":"26051:48:20"}]}}]},"documentation":{"id":6476,"nodeType":"StructuredDocumentation","src":"25575:312:20","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6501,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:20","nodeType":"FunctionDefinition","parameters":{"id":6479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6478,"mutability":"mutable","name":"value","nameLocation":"25917:5:20","nodeType":"VariableDeclaration","scope":6501,"src":"25910:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6477,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:20"},"returnParameters":{"id":6482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6481,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:20","nodeType":"VariableDeclaration","scope":6501,"src":"25947:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6480,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:20"},"scope":6932,"src":"25892:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6526,"nodeType":"Block","src":"26513:150:20","statements":[{"expression":{"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6509,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"26523:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"26543:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6510,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:20","typeDescriptions":{}}},"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6515,"nodeType":"ExpressionStatement","src":"26523:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6516,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"26563:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"26577:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6525,"nodeType":"IfStatement","src":"26559:98:20","trueBody":{"id":6524,"nodeType":"Block","src":"26584:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6504,"src":"26640:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6519,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"26605:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6523,"nodeType":"RevertStatement","src":"26598:48:20"}]}}]},"documentation":{"id":6502,"nodeType":"StructuredDocumentation","src":"26122:312:20","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6527,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:20","nodeType":"FunctionDefinition","parameters":{"id":6505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6504,"mutability":"mutable","name":"value","nameLocation":"26464:5:20","nodeType":"VariableDeclaration","scope":6527,"src":"26457:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6503,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:20"},"returnParameters":{"id":6508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6507,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:20","nodeType":"VariableDeclaration","scope":6527,"src":"26494:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6506,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:20"},"scope":6932,"src":"26439:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6552,"nodeType":"Block","src":"27060:150:20","statements":[{"expression":{"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6535,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"27070:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6530,"src":"27090:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6536,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:20","typeDescriptions":{}}},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6541,"nodeType":"ExpressionStatement","src":"27070:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6542,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6533,"src":"27110:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6530,"src":"27124:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6551,"nodeType":"IfStatement","src":"27106:98:20","trueBody":{"id":6550,"nodeType":"Block","src":"27131:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6530,"src":"27187:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6545,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"27152:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6549,"nodeType":"RevertStatement","src":"27145:48:20"}]}}]},"documentation":{"id":6528,"nodeType":"StructuredDocumentation","src":"26669:312:20","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6553,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:20","nodeType":"FunctionDefinition","parameters":{"id":6531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6530,"mutability":"mutable","name":"value","nameLocation":"27011:5:20","nodeType":"VariableDeclaration","scope":6553,"src":"27004:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6529,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:20"},"returnParameters":{"id":6534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6533,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:20","nodeType":"VariableDeclaration","scope":6553,"src":"27041:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6532,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:20"},"scope":6932,"src":"26986:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6578,"nodeType":"Block","src":"27607:150:20","statements":[{"expression":{"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6561,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"27617:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"27637:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6562,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:20","typeDescriptions":{}}},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6567,"nodeType":"ExpressionStatement","src":"27617:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6568,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"27657:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"27671:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6577,"nodeType":"IfStatement","src":"27653:98:20","trueBody":{"id":6576,"nodeType":"Block","src":"27678:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"27734:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6571,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"27699:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6575,"nodeType":"RevertStatement","src":"27692:48:20"}]}}]},"documentation":{"id":6554,"nodeType":"StructuredDocumentation","src":"27216:312:20","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6579,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:20","nodeType":"FunctionDefinition","parameters":{"id":6557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6556,"mutability":"mutable","name":"value","nameLocation":"27558:5:20","nodeType":"VariableDeclaration","scope":6579,"src":"27551:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6555,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:20"},"returnParameters":{"id":6560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6559,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:20","nodeType":"VariableDeclaration","scope":6579,"src":"27588:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6558,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:20"},"scope":6932,"src":"27533:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6604,"nodeType":"Block","src":"28147:148:20","statements":[{"expression":{"id":6592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6587,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"28157:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"28176:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6588,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:20","typeDescriptions":{}}},"id":6591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6593,"nodeType":"ExpressionStatement","src":"28157:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6594,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"28196:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"28210:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6603,"nodeType":"IfStatement","src":"28192:97:20","trueBody":{"id":6602,"nodeType":"Block","src":"28217:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"28272:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6597,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"28238:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6601,"nodeType":"RevertStatement","src":"28231:47:20"}]}}]},"documentation":{"id":6580,"nodeType":"StructuredDocumentation","src":"27763:307:20","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6605,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:20","nodeType":"FunctionDefinition","parameters":{"id":6583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6582,"mutability":"mutable","name":"value","nameLocation":"28099:5:20","nodeType":"VariableDeclaration","scope":6605,"src":"28092:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6581,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:20"},"returnParameters":{"id":6586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6585,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:20","nodeType":"VariableDeclaration","scope":6605,"src":"28129:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6584,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:20"},"scope":6932,"src":"28075:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6630,"nodeType":"Block","src":"28685:148:20","statements":[{"expression":{"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6613,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"28695:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6608,"src":"28714:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6614,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:20","typeDescriptions":{}}},"id":6617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6619,"nodeType":"ExpressionStatement","src":"28695:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6620,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"28734:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6608,"src":"28748:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6629,"nodeType":"IfStatement","src":"28730:97:20","trueBody":{"id":6628,"nodeType":"Block","src":"28755:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6608,"src":"28810:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6623,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"28776:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6627,"nodeType":"RevertStatement","src":"28769:47:20"}]}}]},"documentation":{"id":6606,"nodeType":"StructuredDocumentation","src":"28301:307:20","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6631,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:20","nodeType":"FunctionDefinition","parameters":{"id":6609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6608,"mutability":"mutable","name":"value","nameLocation":"28637:5:20","nodeType":"VariableDeclaration","scope":6631,"src":"28630:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6607,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:20"},"returnParameters":{"id":6612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6611,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:20","nodeType":"VariableDeclaration","scope":6631,"src":"28667:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6610,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:20"},"scope":6932,"src":"28613:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6656,"nodeType":"Block","src":"29223:148:20","statements":[{"expression":{"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6639,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"29233:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"29252:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6640,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:20","typeDescriptions":{}}},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6645,"nodeType":"ExpressionStatement","src":"29233:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6646,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"29272:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"29286:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6655,"nodeType":"IfStatement","src":"29268:97:20","trueBody":{"id":6654,"nodeType":"Block","src":"29293:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6634,"src":"29348:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6649,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"29314:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6653,"nodeType":"RevertStatement","src":"29307:47:20"}]}}]},"documentation":{"id":6632,"nodeType":"StructuredDocumentation","src":"28839:307:20","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6657,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:20","nodeType":"FunctionDefinition","parameters":{"id":6635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6634,"mutability":"mutable","name":"value","nameLocation":"29175:5:20","nodeType":"VariableDeclaration","scope":6657,"src":"29168:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6633,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:20"},"returnParameters":{"id":6638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6637,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:20","nodeType":"VariableDeclaration","scope":6657,"src":"29205:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6636,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:20"},"scope":6932,"src":"29151:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6682,"nodeType":"Block","src":"29761:148:20","statements":[{"expression":{"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6665,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"29771:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"29790:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6666,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:20","typeDescriptions":{}}},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6671,"nodeType":"ExpressionStatement","src":"29771:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6672,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6663,"src":"29810:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"29824:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6681,"nodeType":"IfStatement","src":"29806:97:20","trueBody":{"id":6680,"nodeType":"Block","src":"29831:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"29886:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6675,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"29852:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6679,"nodeType":"RevertStatement","src":"29845:47:20"}]}}]},"documentation":{"id":6658,"nodeType":"StructuredDocumentation","src":"29377:307:20","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6683,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:20","nodeType":"FunctionDefinition","parameters":{"id":6661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6660,"mutability":"mutable","name":"value","nameLocation":"29713:5:20","nodeType":"VariableDeclaration","scope":6683,"src":"29706:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6659,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:20"},"returnParameters":{"id":6664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6663,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:20","nodeType":"VariableDeclaration","scope":6683,"src":"29743:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6662,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:20"},"scope":6932,"src":"29689:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6708,"nodeType":"Block","src":"30299:148:20","statements":[{"expression":{"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6691,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"30309:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"30328:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6692,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:20","typeDescriptions":{}}},"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6697,"nodeType":"ExpressionStatement","src":"30309:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6698,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"30348:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"30362:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6707,"nodeType":"IfStatement","src":"30344:97:20","trueBody":{"id":6706,"nodeType":"Block","src":"30369:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"30424:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6701,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"30390:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6705,"nodeType":"RevertStatement","src":"30383:47:20"}]}}]},"documentation":{"id":6684,"nodeType":"StructuredDocumentation","src":"29915:307:20","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6709,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:20","nodeType":"FunctionDefinition","parameters":{"id":6687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6686,"mutability":"mutable","name":"value","nameLocation":"30251:5:20","nodeType":"VariableDeclaration","scope":6709,"src":"30244:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6685,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:20"},"returnParameters":{"id":6690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6689,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:20","nodeType":"VariableDeclaration","scope":6709,"src":"30281:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6688,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:20"},"scope":6932,"src":"30227:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6734,"nodeType":"Block","src":"30837:148:20","statements":[{"expression":{"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6717,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"30847:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"30866:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6718,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:20","typeDescriptions":{}}},"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6723,"nodeType":"ExpressionStatement","src":"30847:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6724,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"30886:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"30900:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6733,"nodeType":"IfStatement","src":"30882:97:20","trueBody":{"id":6732,"nodeType":"Block","src":"30907:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"30962:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6727,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"30928:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6731,"nodeType":"RevertStatement","src":"30921:47:20"}]}}]},"documentation":{"id":6710,"nodeType":"StructuredDocumentation","src":"30453:307:20","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6735,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:20","nodeType":"FunctionDefinition","parameters":{"id":6713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6712,"mutability":"mutable","name":"value","nameLocation":"30789:5:20","nodeType":"VariableDeclaration","scope":6735,"src":"30782:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6711,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:20"},"returnParameters":{"id":6716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6715,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:20","nodeType":"VariableDeclaration","scope":6735,"src":"30819:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6714,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:20"},"scope":6932,"src":"30765:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6760,"nodeType":"Block","src":"31375:148:20","statements":[{"expression":{"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6743,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"31385:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"31404:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6744,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:20","typeDescriptions":{}}},"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6749,"nodeType":"ExpressionStatement","src":"31385:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6750,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"31424:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"31438:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6759,"nodeType":"IfStatement","src":"31420:97:20","trueBody":{"id":6758,"nodeType":"Block","src":"31445:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"31500:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6753,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"31466:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6757,"nodeType":"RevertStatement","src":"31459:47:20"}]}}]},"documentation":{"id":6736,"nodeType":"StructuredDocumentation","src":"30991:307:20","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6761,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:20","nodeType":"FunctionDefinition","parameters":{"id":6739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6738,"mutability":"mutable","name":"value","nameLocation":"31327:5:20","nodeType":"VariableDeclaration","scope":6761,"src":"31320:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6737,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:20"},"returnParameters":{"id":6742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6741,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:20","nodeType":"VariableDeclaration","scope":6761,"src":"31357:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6740,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:20"},"scope":6932,"src":"31303:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6786,"nodeType":"Block","src":"31913:148:20","statements":[{"expression":{"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6769,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"31923:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6764,"src":"31942:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6770,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:20","typeDescriptions":{}}},"id":6773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6775,"nodeType":"ExpressionStatement","src":"31923:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6776,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6767,"src":"31962:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6764,"src":"31976:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6785,"nodeType":"IfStatement","src":"31958:97:20","trueBody":{"id":6784,"nodeType":"Block","src":"31983:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6764,"src":"32038:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6779,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"32004:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6783,"nodeType":"RevertStatement","src":"31997:47:20"}]}}]},"documentation":{"id":6762,"nodeType":"StructuredDocumentation","src":"31529:307:20","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6787,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:20","nodeType":"FunctionDefinition","parameters":{"id":6765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6764,"mutability":"mutable","name":"value","nameLocation":"31865:5:20","nodeType":"VariableDeclaration","scope":6787,"src":"31858:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6763,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:20"},"returnParameters":{"id":6768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6767,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:20","nodeType":"VariableDeclaration","scope":6787,"src":"31895:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6766,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:20"},"scope":6932,"src":"31841:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6812,"nodeType":"Block","src":"32451:148:20","statements":[{"expression":{"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6795,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"32461:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"32480:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6796,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:20","typeDescriptions":{}}},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6801,"nodeType":"ExpressionStatement","src":"32461:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6802,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"32500:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"32514:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6811,"nodeType":"IfStatement","src":"32496:97:20","trueBody":{"id":6810,"nodeType":"Block","src":"32521:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"32576:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6805,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"32542:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6809,"nodeType":"RevertStatement","src":"32535:47:20"}]}}]},"documentation":{"id":6788,"nodeType":"StructuredDocumentation","src":"32067:307:20","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6813,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:20","nodeType":"FunctionDefinition","parameters":{"id":6791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6790,"mutability":"mutable","name":"value","nameLocation":"32403:5:20","nodeType":"VariableDeclaration","scope":6813,"src":"32396:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6789,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:20"},"returnParameters":{"id":6794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6793,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:20","nodeType":"VariableDeclaration","scope":6813,"src":"32433:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6792,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:20"},"scope":6932,"src":"32379:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6838,"nodeType":"Block","src":"32989:148:20","statements":[{"expression":{"id":6826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6821,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"32999:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"33018:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6822,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:20","typeDescriptions":{}}},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6827,"nodeType":"ExpressionStatement","src":"32999:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6828,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6819,"src":"33038:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"33052:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6837,"nodeType":"IfStatement","src":"33034:97:20","trueBody":{"id":6836,"nodeType":"Block","src":"33059:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6816,"src":"33114:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6831,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"33080:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6835,"nodeType":"RevertStatement","src":"33073:47:20"}]}}]},"documentation":{"id":6814,"nodeType":"StructuredDocumentation","src":"32605:307:20","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6839,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:20","nodeType":"FunctionDefinition","parameters":{"id":6817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6816,"mutability":"mutable","name":"value","nameLocation":"32941:5:20","nodeType":"VariableDeclaration","scope":6839,"src":"32934:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6815,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:20"},"returnParameters":{"id":6820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6819,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:20","nodeType":"VariableDeclaration","scope":6839,"src":"32971:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6818,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:20"},"scope":6932,"src":"32917:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6864,"nodeType":"Block","src":"33527:148:20","statements":[{"expression":{"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6847,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6845,"src":"33537:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"33556:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6848,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:20","typeDescriptions":{}}},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6853,"nodeType":"ExpressionStatement","src":"33537:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6854,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6845,"src":"33576:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"33590:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6863,"nodeType":"IfStatement","src":"33572:97:20","trueBody":{"id":6862,"nodeType":"Block","src":"33597:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"33652:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6857,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"33618:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6861,"nodeType":"RevertStatement","src":"33611:47:20"}]}}]},"documentation":{"id":6840,"nodeType":"StructuredDocumentation","src":"33143:307:20","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6865,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:20","nodeType":"FunctionDefinition","parameters":{"id":6843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6842,"mutability":"mutable","name":"value","nameLocation":"33479:5:20","nodeType":"VariableDeclaration","scope":6865,"src":"33472:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6841,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:20"},"returnParameters":{"id":6846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6845,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:20","nodeType":"VariableDeclaration","scope":6865,"src":"33509:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6844,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:20"},"scope":6932,"src":"33455:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6890,"nodeType":"Block","src":"34058:146:20","statements":[{"expression":{"id":6878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6873,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"34068:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"34086:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6874,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:20","typeDescriptions":{}}},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6879,"nodeType":"ExpressionStatement","src":"34068:24:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6880,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"34106:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"34120:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6889,"nodeType":"IfStatement","src":"34102:96:20","trueBody":{"id":6888,"nodeType":"Block","src":"34127:71:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"34181:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6883,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5189,"src":"34148:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6887,"nodeType":"RevertStatement","src":"34141:46:20"}]}}]},"documentation":{"id":6866,"nodeType":"StructuredDocumentation","src":"33681:302:20","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6891,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:20","nodeType":"FunctionDefinition","parameters":{"id":6869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6868,"mutability":"mutable","name":"value","nameLocation":"34011:5:20","nodeType":"VariableDeclaration","scope":6891,"src":"34004:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6867,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:20"},"returnParameters":{"id":6872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6871,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:20","nodeType":"VariableDeclaration","scope":6891,"src":"34041:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6870,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:20"},"scope":6932,"src":"33988:216:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6920,"nodeType":"Block","src":"34444:250:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"34557:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6903,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6902,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:20","memberName":"max","nodeType":"MemberAccess","src":"34573:16:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6900,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:20","typeDescriptions":{}}},"id":6907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6914,"nodeType":"IfStatement","src":"34553:105:20","trueBody":{"id":6913,"nodeType":"Block","src":"34592:66:20","statements":[{"errorCall":{"arguments":[{"id":6910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"34641:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6909,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"34613:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6912,"nodeType":"RevertStatement","src":"34606:41:20"}]}},{"expression":{"arguments":[{"id":6917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"34681:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6915,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:20","typeDescriptions":{}}},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6898,"id":6919,"nodeType":"Return","src":"34667:20:20"}]},"documentation":{"id":6892,"nodeType":"StructuredDocumentation","src":"34210:165:20","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6921,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:20","nodeType":"FunctionDefinition","parameters":{"id":6895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6894,"mutability":"mutable","name":"value","nameLocation":"34406:5:20","nodeType":"VariableDeclaration","scope":6921,"src":"34398:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6893,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:20"},"returnParameters":{"id":6898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6921,"src":"34436:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6896,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:20"},"scope":6932,"src":"34380:314:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6930,"nodeType":"Block","src":"34853:87:20","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:20","statements":[{"nodeType":"YulAssignment","src":"34902:22:20","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:20"},"nodeType":"YulFunctionCall","src":"34914:9:20"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:20"},"nodeType":"YulFunctionCall","src":"34907:17:20"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6924,"isOffset":false,"isSlot":false,"src":"34921:1:20","valueSize":1},{"declaration":6927,"isOffset":false,"isSlot":false,"src":"34902:1:20","valueSize":1}],"flags":["memory-safe"],"id":6929,"nodeType":"InlineAssembly","src":"34863:71:20"}]},"documentation":{"id":6922,"nodeType":"StructuredDocumentation","src":"34700:90:20","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6931,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:20","nodeType":"FunctionDefinition","parameters":{"id":6925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6924,"mutability":"mutable","name":"b","nameLocation":"34816:1:20","nodeType":"VariableDeclaration","scope":6931,"src":"34811:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6923,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:20"},"returnParameters":{"id":6928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6927,"mutability":"mutable","name":"u","nameLocation":"34850:1:20","nodeType":"VariableDeclaration","scope":6931,"src":"34842:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6926,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:20"},"scope":6932,"src":"34795:145:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6933,"src":"769:34173:20","usedErrors":[5177,5182,5189,5194],"usedEvents":[]}],"src":"192:34751:20"},"id":20},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6932],"SignedMath":[7076]},"id":7077,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6934,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6936,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7077,"sourceUnit":6933,"src":"135:40:21","symbolAliases":[{"foreign":{"id":6935,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"143:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6937,"nodeType":"StructuredDocumentation","src":"177:80:21","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7076,"linearizedBaseContracts":[7076],"name":"SignedMath","nameLocation":"266:10:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":6966,"nodeType":"Block","src":"746:215:21","statements":[{"id":6965,"nodeType":"UncheckedBlock","src":"756:199:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6949,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"894:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6950,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"900:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6951,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"904:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6953,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6958,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"932:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6956,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"916:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6932_$","typeString":"type(library SafeCast)"}},"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6931,"src":"916:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6954,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:21","typeDescriptions":{}}},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6962,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6948,"id":6964,"nodeType":"Return","src":"887:57:21"}]}]},"documentation":{"id":6938,"nodeType":"StructuredDocumentation","src":"283:374:21","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6967,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:21","nodeType":"FunctionDefinition","parameters":{"id":6945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6940,"mutability":"mutable","name":"condition","nameLocation":"684:9:21","nodeType":"VariableDeclaration","scope":6967,"src":"679:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6939,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6942,"mutability":"mutable","name":"a","nameLocation":"702:1:21","nodeType":"VariableDeclaration","scope":6967,"src":"695:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6941,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6944,"mutability":"mutable","name":"b","nameLocation":"712:1:21","nodeType":"VariableDeclaration","scope":6967,"src":"705:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6943,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:21"},"returnParameters":{"id":6948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6967,"src":"738:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6946,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:21"},"scope":7076,"src":"662:299:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6985,"nodeType":"Block","src":"1102:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6978,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"1127:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6979,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"1131:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6981,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6970,"src":"1134:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6982,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6972,"src":"1137:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6977,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6967,"src":"1119:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6976,"id":6984,"nodeType":"Return","src":"1112:27:21"}]},"documentation":{"id":6968,"nodeType":"StructuredDocumentation","src":"967:66:21","text":" @dev Returns the largest of two signed numbers."},"id":6986,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:21","nodeType":"FunctionDefinition","parameters":{"id":6973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6970,"mutability":"mutable","name":"a","nameLocation":"1058:1:21","nodeType":"VariableDeclaration","scope":6986,"src":"1051:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6969,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6972,"mutability":"mutable","name":"b","nameLocation":"1068:1:21","nodeType":"VariableDeclaration","scope":6986,"src":"1061:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6971,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:21"},"returnParameters":{"id":6976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6986,"src":"1094:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6974,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:21"},"scope":7076,"src":"1038:108:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7004,"nodeType":"Block","src":"1288:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6997,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"1313:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6998,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"1317:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7000,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"1320:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7001,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"1323:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6996,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6967,"src":"1305:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6995,"id":7003,"nodeType":"Return","src":"1298:27:21"}]},"documentation":{"id":6987,"nodeType":"StructuredDocumentation","src":"1152:67:21","text":" @dev Returns the smallest of two signed numbers."},"id":7005,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:21","nodeType":"FunctionDefinition","parameters":{"id":6992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6989,"mutability":"mutable","name":"a","nameLocation":"1244:1:21","nodeType":"VariableDeclaration","scope":7005,"src":"1237:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6988,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6991,"mutability":"mutable","name":"b","nameLocation":"1254:1:21","nodeType":"VariableDeclaration","scope":7005,"src":"1247:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6990,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:21"},"returnParameters":{"id":6995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7005,"src":"1280:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6993,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:21"},"scope":7076,"src":"1224:108:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7048,"nodeType":"Block","src":"1537:162:21","statements":[{"assignments":[7016],"declarations":[{"constant":false,"id":7016,"mutability":"mutable","name":"x","nameLocation":"1606:1:21","nodeType":"VariableDeclaration","scope":7048,"src":"1599:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7015,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7029,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7017,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"1611:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7018,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"1615:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7021,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"1622:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7022,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"1626:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:21"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7030,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"1651:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7035,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"1671:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:21","typeDescriptions":{}}},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7031,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:21","typeDescriptions":{}}},"id":7039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7040,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"1685:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7041,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"1689:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7043,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7014,"id":7047,"nodeType":"Return","src":"1644:48:21"}]},"documentation":{"id":7006,"nodeType":"StructuredDocumentation","src":"1338:126:21","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7049,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:21","nodeType":"FunctionDefinition","parameters":{"id":7011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7008,"mutability":"mutable","name":"a","nameLocation":"1493:1:21","nodeType":"VariableDeclaration","scope":7049,"src":"1486:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7007,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7010,"mutability":"mutable","name":"b","nameLocation":"1503:1:21","nodeType":"VariableDeclaration","scope":7049,"src":"1496:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7009,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:21"},"returnParameters":{"id":7014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7049,"src":"1529:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7012,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:21"},"scope":7076,"src":"1469:230:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7074,"nodeType":"Block","src":"1843:767:21","statements":[{"id":7073,"nodeType":"UncheckedBlock","src":"1853:751:21","statements":[{"assignments":[7058],"declarations":[{"constant":false,"id":7058,"mutability":"mutable","name":"mask","nameLocation":"2424:4:21","nodeType":"VariableDeclaration","scope":7073,"src":"2417:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7057,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7062,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7059,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"2431:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7065,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"2576:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7066,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7058,"src":"2580:4:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7069,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7058,"src":"2588:4:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7063,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:21","typeDescriptions":{}}},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7056,"id":7072,"nodeType":"Return","src":"2560:33:21"}]}]},"documentation":{"id":7050,"nodeType":"StructuredDocumentation","src":"1705:78:21","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7075,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:21","nodeType":"FunctionDefinition","parameters":{"id":7053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7052,"mutability":"mutable","name":"n","nameLocation":"1808:1:21","nodeType":"VariableDeclaration","scope":7075,"src":"1801:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7051,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:21"},"returnParameters":{"id":7056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7075,"src":"1834:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7054,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:21"},"scope":7076,"src":"1788:822:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7077,"src":"258:2354:21","usedErrors":[],"usedEvents":[]}],"src":"109:2504:21"},"id":21},"contracts/CirclePaymaster.sol":{"ast":{"absolutePath":"contracts/CirclePaymaster.sol","exportedSymbols":{"CirclePaymaster":[7595],"Context":[1646],"ECDSA":[3448],"IAggregator":[272],"IERC1363":[1066],"IERC20":[1152],"IEntryPoint":[478],"INonceManager":[497],"IPaymaster":[532],"IStakeManager":[638],"MessageHashUtils":[3534],"Ownable":[984],"SafeERC20":[1616],"Strings":[3100],"UserOperation":[666],"UserOperationLib":[836],"calldataKeccak":[238]},"id":7596,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7078,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:22"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7079,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7596,"sourceUnit":985,"src":"58:52:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7080,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7596,"sourceUnit":1153,"src":"111:56:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":7081,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7596,"sourceUnit":1617,"src":"168:65:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":7082,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7596,"sourceUnit":3449,"src":"234:62:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":7083,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7596,"sourceUnit":3535,"src":"297:73:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IPaymaster.sol","file":"@account-abstraction/contracts/interfaces/IPaymaster.sol","id":7084,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7596,"sourceUnit":533,"src":"371:66:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","file":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","id":7085,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7596,"sourceUnit":479,"src":"438:67:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/UserOperation.sol","file":"@account-abstraction/contracts/interfaces/UserOperation.sol","id":7086,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7596,"sourceUnit":837,"src":"506:69:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7088,"name":"IPaymaster","nameLocations":["786:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":532,"src":"786:10:22"},"id":7089,"nodeType":"InheritanceSpecifier","src":"786:10:22"},{"baseName":{"id":7090,"name":"Ownable","nameLocations":["798:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":984,"src":"798:7:22"},"id":7091,"nodeType":"InheritanceSpecifier","src":"798:7:22"}],"canonicalName":"CirclePaymaster","contractDependencies":[],"contractKind":"contract","documentation":{"id":7087,"nodeType":"StructuredDocumentation","src":"577:180:22","text":" @title CirclePaymaster\n @dev Paymaster ERC-4337 qui permet aux utilisateurs de payer les frais de gas en USDC\n Compatible avec le challenge Circle Paymaster ($2,000)"},"fullyImplemented":true,"id":7595,"linearizedBaseContracts":[7595,984,1646,532],"name":"CirclePaymaster","nameLocation":"767:15:22","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7095,"libraryName":{"id":7092,"name":"SafeERC20","nameLocations":["818:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":1616,"src":"818:9:22"},"nodeType":"UsingForDirective","src":"812:27:22","typeName":{"id":7094,"nodeType":"UserDefinedTypeName","pathNode":{"id":7093,"name":"IERC20","nameLocations":["832:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"832:6:22"},"referencedDeclaration":1152,"src":"832:6:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}}},{"global":false,"id":7098,"libraryName":{"id":7096,"name":"ECDSA","nameLocations":["850:5:22"],"nodeType":"IdentifierPath","referencedDeclaration":3448,"src":"850:5:22"},"nodeType":"UsingForDirective","src":"844:24:22","typeName":{"id":7097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"860:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":7101,"libraryName":{"id":7099,"name":"MessageHashUtils","nameLocations":["879:16:22"],"nodeType":"IdentifierPath","referencedDeclaration":3534,"src":"879:16:22"},"nodeType":"UsingForDirective","src":"873:35:22","typeName":{"id":7100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":true,"functionSelector":"ac2db91a","id":7104,"mutability":"constant","name":"VALID_TIMESTAMP_OFFSET","nameLocation":"956:22:22","nodeType":"VariableDeclaration","scope":7595,"src":"932:51:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7102,"name":"uint256","nodeType":"ElementaryTypeName","src":"932:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":7103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"981:2:22","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"constant":true,"functionSelector":"6c7e9b3c","id":7107,"mutability":"constant","name":"SIGNATURE_OFFSET","nameLocation":"1013:16:22","nodeType":"VariableDeclaration","scope":7595,"src":"989:45:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7105,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3834","id":7106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1032:2:22","typeDescriptions":{"typeIdentifier":"t_rational_84_by_1","typeString":"int_const 84"},"value":"84"},"visibility":"public"},{"constant":false,"functionSelector":"b0d691fe","id":7110,"mutability":"immutable","name":"entryPoint","nameLocation":"1099:10:22","nodeType":"VariableDeclaration","scope":7595,"src":"1070:39:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"},"typeName":{"id":7109,"nodeType":"UserDefinedTypeName","pathNode":{"id":7108,"name":"IEntryPoint","nameLocations":["1070:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":478,"src":"1070:11:22"},"referencedDeclaration":478,"src":"1070:11:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}},"visibility":"public"},{"constant":false,"functionSelector":"3e413bee","id":7113,"mutability":"immutable","name":"usdc","nameLocation":"1139:4:22","nodeType":"VariableDeclaration","scope":7595,"src":"1115:28:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},"typeName":{"id":7112,"nodeType":"UserDefinedTypeName","pathNode":{"id":7111,"name":"IERC20","nameLocations":["1115:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"1115:6:22"},"referencedDeclaration":1152,"src":"1115:6:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"ce2605af","id":7118,"mutability":"mutable","name":"usdcToEthRate","nameLocation":"1232:13:22","nodeType":"VariableDeclaration","scope":7595,"src":"1217:42:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7114,"name":"uint256","nodeType":"ElementaryTypeName","src":"1217:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_2500000000000000_by_1","typeString":"int_const 2500000000000000"},"id":7117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32353030","id":7115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1248:4:22","typeDescriptions":{"typeIdentifier":"t_rational_2500_by_1","typeString":"int_const 2500"},"value":"2500"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653132","id":7116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1255:4:22","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"src":"1248:11:22","typeDescriptions":{"typeIdentifier":"t_rational_2500000000000000_by_1","typeString":"int_const 2500000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"7ecebe00","id":7122,"mutability":"mutable","name":"nonces","nameLocation":"1408:6:22","nodeType":"VariableDeclaration","scope":7595,"src":"1373:41:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7121,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7119,"name":"address","nodeType":"ElementaryTypeName","src":"1381:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1373:27:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"afe65894f5dc3ec01b36eb697ab05531317b716be71d4669d818e0b0e774e030","id":7132,"name":"UserOperationSponsored","nameLocation":"1445:22:22","nodeType":"EventDefinition","parameters":{"id":7131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7124,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1493:4:22","nodeType":"VariableDeclaration","scope":7132,"src":"1477:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7123,"name":"address","nodeType":"ElementaryTypeName","src":"1477:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7126,"indexed":false,"mutability":"mutable","name":"usdcAmount","nameLocation":"1515:10:22","nodeType":"VariableDeclaration","scope":7132,"src":"1507:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7125,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7128,"indexed":false,"mutability":"mutable","name":"ethAmount","nameLocation":"1543:9:22","nodeType":"VariableDeclaration","scope":7132,"src":"1535:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7127,"name":"uint256","nodeType":"ElementaryTypeName","src":"1535:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7130,"indexed":false,"mutability":"mutable","name":"userOpHash","nameLocation":"1570:10:22","nodeType":"VariableDeclaration","scope":7132,"src":"1562:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1562:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1467:119:22"},"src":"1439:148:22"},{"anonymous":false,"eventSelector":"e335b031f0ef293eb2ae4bb1453ef1ba92ffc180905bf925e29290dd546c1661","id":7138,"name":"UsdcToEthRateUpdated","nameLocation":"1603:20:22","nodeType":"EventDefinition","parameters":{"id":7137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7134,"indexed":false,"mutability":"mutable","name":"oldRate","nameLocation":"1632:7:22","nodeType":"VariableDeclaration","scope":7138,"src":"1624:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7133,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7136,"indexed":false,"mutability":"mutable","name":"newRate","nameLocation":"1649:7:22","nodeType":"VariableDeclaration","scope":7138,"src":"1641:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7135,"name":"uint256","nodeType":"ElementaryTypeName","src":"1641:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1623:34:22"},"src":"1597:61:22"},{"body":{"id":7160,"nodeType":"Block","src":"1781:63:22","statements":[{"expression":{"id":7154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7152,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"1791:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7153,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"1804:11:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}},"src":"1791:24:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}},"id":7155,"nodeType":"ExpressionStatement","src":"1791:24:22"},{"expression":{"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7156,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"1825:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7157,"name":"_usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7144,"src":"1832:5:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"src":"1825:12:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"id":7159,"nodeType":"ExpressionStatement","src":"1825:12:22"}]},"id":7161,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7149,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"1773:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7150,"kind":"baseConstructorSpecifier","modifierName":{"id":7148,"name":"Ownable","nameLocations":["1765:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":984,"src":"1765:7:22"},"nodeType":"ModifierInvocation","src":"1765:15:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7141,"mutability":"mutable","name":"_entryPoint","nameLocation":"1701:11:22","nodeType":"VariableDeclaration","scope":7161,"src":"1689:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"},"typeName":{"id":7140,"nodeType":"UserDefinedTypeName","pathNode":{"id":7139,"name":"IEntryPoint","nameLocations":["1689:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":478,"src":"1689:11:22"},"referencedDeclaration":478,"src":"1689:11:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}},"visibility":"internal"},{"constant":false,"id":7144,"mutability":"mutable","name":"_usdc","nameLocation":"1729:5:22","nodeType":"VariableDeclaration","scope":7161,"src":"1722:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"},"typeName":{"id":7143,"nodeType":"UserDefinedTypeName","pathNode":{"id":7142,"name":"IERC20","nameLocations":["1722:6:22"],"nodeType":"IdentifierPath","referencedDeclaration":1152,"src":"1722:6:22"},"referencedDeclaration":1152,"src":"1722:6:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7146,"mutability":"mutable","name":"_owner","nameLocation":"1752:6:22","nodeType":"VariableDeclaration","scope":7161,"src":"1744:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7145,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1679:85:22"},"returnParameters":{"id":7151,"nodeType":"ParameterList","parameters":[],"src":"1781:0:22"},"scope":7595,"src":"1668:176:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[520],"body":{"id":7349,"nodeType":"Block","src":"2390:2004:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7178,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2408:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2412:6:22","memberName":"sender","nodeType":"MemberAccess","src":"2408:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":7182,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"2430:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}],"id":7181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2422:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7180,"name":"address","nodeType":"ElementaryTypeName","src":"2422:7:22","typeDescriptions":{}}},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2422:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2408:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5365756c20456e747279506f696e74206175746f72697365","id":7185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2443:26:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_fdcc212ab4afc03ee88bfd788f066850c8bfdbd640186a780363be5d27c30d21","typeString":"literal_string \"Seul EntryPoint autorise\""},"value":"Seul EntryPoint autorise"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fdcc212ab4afc03ee88bfd788f066850c8bfdbd640186a780363be5d27c30d21","typeString":"literal_string \"Seul EntryPoint autorise\""}],"id":7177,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2400:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2400:70:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7187,"nodeType":"ExpressionStatement","src":"2400:70:22"},{"assignments":[7189,7191,7193,7195,7197],"declarations":[{"constant":false,"id":7189,"mutability":"mutable","name":"user","nameLocation":"2557:4:22","nodeType":"VariableDeclaration","scope":7349,"src":"2549:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7188,"name":"address","nodeType":"ElementaryTypeName","src":"2549:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7191,"mutability":"mutable","name":"usdcAmount","nameLocation":"2583:10:22","nodeType":"VariableDeclaration","scope":7349,"src":"2575:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7190,"name":"uint256","nodeType":"ElementaryTypeName","src":"2575:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7193,"mutability":"mutable","name":"validUntil","nameLocation":"2615:10:22","nodeType":"VariableDeclaration","scope":7349,"src":"2607:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7192,"name":"uint256","nodeType":"ElementaryTypeName","src":"2607:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7195,"mutability":"mutable","name":"validAfter","nameLocation":"2647:10:22","nodeType":"VariableDeclaration","scope":7349,"src":"2639:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2639:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7197,"mutability":"mutable","name":"signature","nameLocation":"2684:9:22","nodeType":"VariableDeclaration","scope":7349,"src":"2671:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7196,"name":"bytes","nodeType":"ElementaryTypeName","src":"2671:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7216,"initialValue":{"arguments":[{"baseExpression":{"expression":{"id":7200,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7165,"src":"2730:6:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation calldata"}},"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:16:22","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":663,"src":"2730:23:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"2730:28:22","startExpression":{"hexValue":"3230","id":7202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2754:2:22","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}},{"components":[{"id":7205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2773:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7204,"name":"address","nodeType":"ElementaryTypeName","src":"2773:7:22","typeDescriptions":{}}},{"id":7207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2782:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7206,"name":"uint256","nodeType":"ElementaryTypeName","src":"2782:7:22","typeDescriptions":{}}},{"id":7209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7208,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:22","typeDescriptions":{}}},{"id":7211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2800:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7210,"name":"uint256","nodeType":"ElementaryTypeName","src":"2800:7:22","typeDescriptions":{}}},{"id":7213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2809:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7212,"name":"bytes","nodeType":"ElementaryTypeName","src":"2809:5:22","typeDescriptions":{}}}],"id":7214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2772:43:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(address),type(uint256),type(uint256),type(uint256),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"},{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(address),type(uint256),type(uint256),type(uint256),type(bytes storage pointer))"}],"expression":{"id":7198,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2706:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2710:6:22","memberName":"decode","nodeType":"MemberAccess","src":"2706:10:22","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2706:119:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_payable_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$","typeString":"tuple(address payable,uint256,uint256,uint256,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2535:290:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7218,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2897:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2903:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"2897:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7220,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"2916:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2897:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d61737465723a2074726f7020746f74","id":7222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2928:21:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_a10a9ce82b123e71e5b3bc656f18d60b59d459c6495f4263938caf999a316399","typeString":"literal_string \"Paymaster: trop tot\""},"value":"Paymaster: trop tot"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a10a9ce82b123e71e5b3bc656f18d60b59d459c6495f4263938caf999a316399","typeString":"literal_string \"Paymaster: trop tot\""}],"id":7217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2889:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2889:61:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7224,"nodeType":"ExpressionStatement","src":"2889:61:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7226,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2968:5:22","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2974:9:22","memberName":"timestamp","nodeType":"MemberAccess","src":"2968:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7228,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"2987:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2968:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d61737465723a20657870697265","id":7230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2999:19:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_8286f2f68794b1b6ec22009d8763029fc2f91201d15f520779c876a06c152177","typeString":"literal_string \"Paymaster: expire\""},"value":"Paymaster: expire"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8286f2f68794b1b6ec22009d8763029fc2f91201d15f520779c876a06c152177","typeString":"literal_string \"Paymaster: expire\""}],"id":7225,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2960:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2960:59:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7232,"nodeType":"ExpressionStatement","src":"2960:59:22"},{"assignments":[7234],"declarations":[{"constant":false,"id":7234,"mutability":"mutable","name":"userUsdcBalance","nameLocation":"3107:15:22","nodeType":"VariableDeclaration","scope":7349,"src":"3099:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7233,"name":"uint256","nodeType":"ElementaryTypeName","src":"3099:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7239,"initialValue":{"arguments":[{"id":7237,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"3140:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7235,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"3125:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3130:9:22","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1109,"src":"3125:14:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3125:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3099:46:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7241,"name":"userUsdcBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"3163:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7242,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"3182:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3163:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536f6c6465205553444320696e737566666973616e74","id":7244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3194:24:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d638c8062e7bfe85d80ac824be59023dc3a3bf571016ebebbf803646760b63","typeString":"literal_string \"Solde USDC insuffisant\""},"value":"Solde USDC insuffisant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5d638c8062e7bfe85d80ac824be59023dc3a3bf571016ebebbf803646760b63","typeString":"literal_string \"Solde USDC insuffisant\""}],"id":7240,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3155:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3155:64:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7246,"nodeType":"ExpressionStatement","src":"3155:64:22"},{"assignments":[7248],"declarations":[{"constant":false,"id":7248,"mutability":"mutable","name":"allowance","nameLocation":"3279:9:22","nodeType":"VariableDeclaration","scope":7349,"src":"3271:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7247,"name":"uint256","nodeType":"ElementaryTypeName","src":"3271:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7257,"initialValue":{"arguments":[{"id":7251,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"3306:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3320:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_CirclePaymaster_$7595","typeString":"contract CirclePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CirclePaymaster_$7595","typeString":"contract CirclePaymaster"}],"id":7253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3312:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7252,"name":"address","nodeType":"ElementaryTypeName","src":"3312:7:22","typeDescriptions":{}}},"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3312:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7249,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"3291:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"id":7250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3296:9:22","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1129,"src":"3291:14:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3291:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3271:55:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7259,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7248,"src":"3344:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7260,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"3357:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3344:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c6c6f77616e6365205553444320696e737566666973616e7465","id":7262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3369:29:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef4d4c7692a3fc045acf09eaec5f96c8a762a786907ce30e7c8f357c0d732181","typeString":"literal_string \"Allowance USDC insuffisante\""},"value":"Allowance USDC insuffisante"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef4d4c7692a3fc045acf09eaec5f96c8a762a786907ce30e7c8f357c0d732181","typeString":"literal_string \"Allowance USDC insuffisante\""}],"id":7258,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3336:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3336:63:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7264,"nodeType":"ExpressionStatement","src":"3336:63:22"},{"assignments":[7266],"declarations":[{"constant":false,"id":7266,"mutability":"mutable","name":"requiredUsdcAmount","nameLocation":"3463:18:22","nodeType":"VariableDeclaration","scope":7349,"src":"3455:26:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7265,"name":"uint256","nodeType":"ElementaryTypeName","src":"3455:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7273,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7267,"name":"maxCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"3485:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316536","id":7268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3495:3:22","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"},"src":"3485:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7270,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3484:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7271,"name":"usdcToEthRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"3502:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3484:31:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3455:60:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7275,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"3533:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7276,"name":"requiredUsdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7266,"src":"3547:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3533:32:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6f6e74616e74205553444320696e737566666973616e74","id":7278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3567:26:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_3beb0c2e5b592ffefee35f4b26fbd1b0cd64c82f74494568b4bee4cf13f8dbf4","typeString":"literal_string \"Montant USDC insuffisant\""},"value":"Montant USDC insuffisant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3beb0c2e5b592ffefee35f4b26fbd1b0cd64c82f74494568b4bee4cf13f8dbf4","typeString":"literal_string \"Montant USDC insuffisant\""}],"id":7274,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3525:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3525:69:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7280,"nodeType":"ExpressionStatement","src":"3525:69:22"},{"assignments":[7282],"declarations":[{"constant":false,"id":7282,"mutability":"mutable","name":"hash","nameLocation":"3655:4:22","nodeType":"VariableDeclaration","scope":7349,"src":"3647:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7281,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3647:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7299,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"id":7286,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"3702:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7287,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"3726:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7288,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"3744:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7289,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"3768:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7290,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"3792:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3816:14:22","subExpression":{"baseExpression":{"id":7291,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"3816:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7293,"indexExpression":{"id":7292,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"3823:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3816:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7284,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3672:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3676:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"3672:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:168:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7283,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3662:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3662:179:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3842:22:22","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":3463,"src":"3662:202:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":7298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3662:204:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3647:219:22"},{"assignments":[7301],"declarations":[{"constant":false,"id":7301,"mutability":"mutable","name":"recovered","nameLocation":"3893:9:22","nodeType":"VariableDeclaration","scope":7349,"src":"3885:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7300,"name":"address","nodeType":"ElementaryTypeName","src":"3885:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7306,"initialValue":{"arguments":[{"id":7304,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7197,"src":"3918:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7302,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"3905:4:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3910:7:22","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3204,"src":"3905:12:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":7305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3905:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3885:43:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7308,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"3946:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7309,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"3959:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e617475726520696e76616c696465","id":7311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3965:20:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d50f1794925f685d2a01dd57cdd46bb8636333c8a286720a18d20987dd140bb","typeString":"literal_string \"Signature invalide\""},"value":"Signature invalide"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d50f1794925f685d2a01dd57cdd46bb8636333c8a286720a18d20987dd140bb","typeString":"literal_string \"Signature invalide\""}],"id":7307,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3938:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3938:48:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7313,"nodeType":"ExpressionStatement","src":"3938:48:22"},{"expression":{"arguments":[{"id":7317,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"4055:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7320,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4069:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_CirclePaymaster_$7595","typeString":"contract CirclePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CirclePaymaster_$7595","typeString":"contract CirclePaymaster"}],"id":7319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4061:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7318,"name":"address","nodeType":"ElementaryTypeName","src":"4061:7:22","typeDescriptions":{}}},"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7322,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"4076:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7314,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"4033:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"id":7316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4038:16:22","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1224,"src":"4033:21:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1152_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1152_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4033:54:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7324,"nodeType":"ExpressionStatement","src":"4033:54:22"},{"expression":{"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7325,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7173,"src":"4138:7:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7328,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"4159:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7329,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"4165:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7330,"name":"maxCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"4177:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7326,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4148:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4152:6:22","memberName":"encode","nodeType":"MemberAccess","src":"4148:10:22","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4148:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4138:47:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7333,"nodeType":"ExpressionStatement","src":"4138:47:22"},{"expression":{"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7334,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7175,"src":"4235:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"66616c7365","id":7336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4272:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":7337,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7193,"src":"4279:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7338,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7195,"src":"4291:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7335,"name":"_packValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7594,"src":"4252:19:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4252:50:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4235:67:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7341,"nodeType":"ExpressionStatement","src":"4235:67:22"},{"eventCall":{"arguments":[{"id":7343,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"4349:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7344,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"4355:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7345,"name":"maxCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"4367:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7346,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7167,"src":"4376:10:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7342,"name":"UserOperationSponsored","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"4326:22:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,uint256,bytes32)"}},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4326:61:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7348,"nodeType":"EmitStatement","src":"4321:66:22"}]},"documentation":{"id":7162,"nodeType":"StructuredDocumentation","src":"1854:327:22","text":" @dev Valide et sponsorise une UserOperation\n @param userOp La UserOperation à valider\n @param userOpHash Le hash de la UserOperation\n @param maxCost Le coût maximum en ETH\n @return context Les données de contexte pour postOp\n @return validationData Les données de validation"},"functionSelector":"f465c77e","id":7350,"implemented":true,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"2195:23:22","nodeType":"FunctionDefinition","overrides":{"id":7171,"nodeType":"OverrideSpecifier","overrides":[],"src":"2326:8:22"},"parameters":{"id":7170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7165,"mutability":"mutable","name":"userOp","nameLocation":"2251:6:22","nodeType":"VariableDeclaration","scope":7350,"src":"2228:29:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_calldata_ptr","typeString":"struct UserOperation"},"typeName":{"id":7164,"nodeType":"UserDefinedTypeName","pathNode":{"id":7163,"name":"UserOperation","nameLocations":["2228:13:22"],"nodeType":"IdentifierPath","referencedDeclaration":666,"src":"2228:13:22"},"referencedDeclaration":666,"src":"2228:13:22","typeDescriptions":{"typeIdentifier":"t_struct$_UserOperation_$666_storage_ptr","typeString":"struct UserOperation"}},"visibility":"internal"},{"constant":false,"id":7167,"mutability":"mutable","name":"userOpHash","nameLocation":"2275:10:22","nodeType":"VariableDeclaration","scope":7350,"src":"2267:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2267:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7169,"mutability":"mutable","name":"maxCost","nameLocation":"2303:7:22","nodeType":"VariableDeclaration","scope":7350,"src":"2295:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7168,"name":"uint256","nodeType":"ElementaryTypeName","src":"2295:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2218:98:22"},"returnParameters":{"id":7176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7173,"mutability":"mutable","name":"context","nameLocation":"2357:7:22","nodeType":"VariableDeclaration","scope":7350,"src":"2344:20:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7172,"name":"bytes","nodeType":"ElementaryTypeName","src":"2344:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7175,"mutability":"mutable","name":"validationData","nameLocation":"2374:14:22","nodeType":"VariableDeclaration","scope":7350,"src":"2366:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7174,"name":"uint256","nodeType":"ElementaryTypeName","src":"2366:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2343:46:22"},"scope":7595,"src":"2186:2208:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[531],"body":{"id":7432,"nodeType":"Block","src":"4759:766:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7363,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4777:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4781:6:22","memberName":"sender","nodeType":"MemberAccess","src":"4777:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":7367,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"4799:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}],"id":7366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4791:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7365,"name":"address","nodeType":"ElementaryTypeName","src":"4791:7:22","typeDescriptions":{}}},"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4791:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4777:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5365756c20456e747279506f696e74206175746f72697365","id":7370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4812:26:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_fdcc212ab4afc03ee88bfd788f066850c8bfdbd640186a780363be5d27c30d21","typeString":"literal_string \"Seul EntryPoint autorise\""},"value":"Seul EntryPoint autorise"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fdcc212ab4afc03ee88bfd788f066850c8bfdbd640186a780363be5d27c30d21","typeString":"literal_string \"Seul EntryPoint autorise\""}],"id":7362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4769:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4769:70:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7372,"nodeType":"ExpressionStatement","src":"4769:70:22"},{"assignments":[7374,7376,7378],"declarations":[{"constant":false,"id":7374,"mutability":"mutable","name":"user","nameLocation":"4867:4:22","nodeType":"VariableDeclaration","scope":7432,"src":"4859:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7373,"name":"address","nodeType":"ElementaryTypeName","src":"4859:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7376,"mutability":"mutable","name":"usdcAmount","nameLocation":"4881:10:22","nodeType":"VariableDeclaration","scope":7432,"src":"4873:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7375,"name":"uint256","nodeType":"ElementaryTypeName","src":"4873:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7378,"mutability":"mutable","name":"maxCost","nameLocation":"4901:7:22","nodeType":"VariableDeclaration","scope":7432,"src":"4893:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7377,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7390,"initialValue":{"arguments":[{"id":7381,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7356,"src":"4936:7:22","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":7383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4958:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7382,"name":"address","nodeType":"ElementaryTypeName","src":"4958:7:22","typeDescriptions":{}}},{"id":7385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4967:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7384,"name":"uint256","nodeType":"ElementaryTypeName","src":"4967:7:22","typeDescriptions":{}}},{"id":7387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4976:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7386,"name":"uint256","nodeType":"ElementaryTypeName","src":"4976:7:22","typeDescriptions":{}}}],"id":7388,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4957:27:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(address),type(uint256),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(address),type(uint256),type(uint256))"}],"expression":{"id":7379,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4912:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4916:6:22","memberName":"decode","nodeType":"MemberAccess","src":"4912:10:22","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":7389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4912:82:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_payable_$_t_uint256_$_t_uint256_$","typeString":"tuple(address payable,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4858:136:22"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_PostOpMode_$505","typeString":"enum IPaymaster.PostOpMode"},"id":7394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7391,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"5074:4:22","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$505","typeString":"enum IPaymaster.PostOpMode"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7392,"name":"PostOpMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":505,"src":"5082:10:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PostOpMode_$505_$","typeString":"type(enum IPaymaster.PostOpMode)"}},"id":7393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5093:14:22","memberName":"postOpReverted","nodeType":"MemberAccess","referencedDeclaration":504,"src":"5082:25:22","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$505","typeString":"enum IPaymaster.PostOpMode"}},"src":"5074:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7404,"nodeType":"IfStatement","src":"5070:119:22","trueBody":{"id":7403,"nodeType":"Block","src":"5109:80:22","statements":[{"expression":{"arguments":[{"id":7398,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7374,"src":"5141:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7399,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7376,"src":"5147:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7395,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"5123:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5128:12:22","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1197,"src":"5123:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1152_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1152_$","typeString":"function (contract IERC20,address,uint256)"}},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5123:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7401,"nodeType":"ExpressionStatement","src":"5123:35:22"},{"functionReturnParameters":7361,"id":7402,"nodeType":"Return","src":"5172:7:22"}]}},{"assignments":[7406],"declarations":[{"constant":false,"id":7406,"mutability":"mutable","name":"actualUsdcCost","nameLocation":"5258:14:22","nodeType":"VariableDeclaration","scope":7432,"src":"5250:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7405,"name":"uint256","nodeType":"ElementaryTypeName","src":"5250:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7413,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7407,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"5276:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316536","id":7408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5292:3:22","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"},"src":"5276:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5275:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7411,"name":"usdcToEthRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"5299:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5275:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5250:62:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7414,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7376,"src":"5376:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7415,"name":"actualUsdcCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"5389:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5376:27:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7431,"nodeType":"IfStatement","src":"5372:147:22","trueBody":{"id":7430,"nodeType":"Block","src":"5405:114:22","statements":[{"assignments":[7418],"declarations":[{"constant":false,"id":7418,"mutability":"mutable","name":"refund","nameLocation":"5427:6:22","nodeType":"VariableDeclaration","scope":7430,"src":"5419:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7417,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7422,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7419,"name":"usdcAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7376,"src":"5436:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7420,"name":"actualUsdcCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7406,"src":"5449:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5436:27:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5419:44:22"},{"expression":{"arguments":[{"id":7426,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7374,"src":"5495:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7427,"name":"refund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7418,"src":"5501:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7423,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"5477:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"id":7425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5482:12:22","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1197,"src":"5477:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1152_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1152_$","typeString":"function (contract IERC20,address,uint256)"}},"id":7428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5477:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7429,"nodeType":"ExpressionStatement","src":"5477:31:22"}]}}]},"documentation":{"id":7351,"nodeType":"StructuredDocumentation","src":"4404:222:22","text":" @dev Appelé après l'exécution de la UserOperation\n @param mode Le mode d'exécution\n @param context Le contexte de validatePaymasterUserOp\n @param actualGasCost Le coût réel en gas"},"functionSelector":"a9a23409","id":7433,"implemented":true,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"4640:6:22","nodeType":"FunctionDefinition","overrides":{"id":7360,"nodeType":"OverrideSpecifier","overrides":[],"src":"4750:8:22"},"parameters":{"id":7359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7354,"mutability":"mutable","name":"mode","nameLocation":"4667:4:22","nodeType":"VariableDeclaration","scope":7433,"src":"4656:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$505","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":7353,"nodeType":"UserDefinedTypeName","pathNode":{"id":7352,"name":"PostOpMode","nameLocations":["4656:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":505,"src":"4656:10:22"},"referencedDeclaration":505,"src":"4656:10:22","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$505","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":7356,"mutability":"mutable","name":"context","nameLocation":"4696:7:22","nodeType":"VariableDeclaration","scope":7433,"src":"4681:22:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7355,"name":"bytes","nodeType":"ElementaryTypeName","src":"4681:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7358,"mutability":"mutable","name":"actualGasCost","nameLocation":"4721:13:22","nodeType":"VariableDeclaration","scope":7433,"src":"4713:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7357,"name":"uint256","nodeType":"ElementaryTypeName","src":"4713:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4646:94:22"},"returnParameters":{"id":7361,"nodeType":"ParameterList","parameters":[],"src":"4759:0:22"},"scope":7595,"src":"4631:894:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7461,"nodeType":"Block","src":"5723:181:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7442,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7436,"src":"5741:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5751:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5741:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5461757820696e76616c696465","id":7445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5754:15:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f1ee07d3d4b30237049d5b62af77abb8ce6c320ea40e0ff144636ba99aa8fc6","typeString":"literal_string \"Taux invalide\""},"value":"Taux invalide"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8f1ee07d3d4b30237049d5b62af77abb8ce6c320ea40e0ff144636ba99aa8fc6","typeString":"literal_string \"Taux invalide\""}],"id":7441,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5733:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5733:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7447,"nodeType":"ExpressionStatement","src":"5733:37:22"},{"assignments":[7449],"declarations":[{"constant":false,"id":7449,"mutability":"mutable","name":"oldRate","nameLocation":"5788:7:22","nodeType":"VariableDeclaration","scope":7461,"src":"5780:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7448,"name":"uint256","nodeType":"ElementaryTypeName","src":"5780:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7451,"initialValue":{"id":7450,"name":"usdcToEthRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"5798:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5780:31:22"},{"expression":{"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7452,"name":"usdcToEthRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"5821:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7453,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7436,"src":"5837:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7455,"nodeType":"ExpressionStatement","src":"5821:23:22"},{"eventCall":{"arguments":[{"id":7457,"name":"oldRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7449,"src":"5880:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7458,"name":"newRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7436,"src":"5889:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7456,"name":"UsdcToEthRateUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7138,"src":"5859:20:22","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7460,"nodeType":"EmitStatement","src":"5854:43:22"}]},"documentation":{"id":7434,"nodeType":"StructuredDocumentation","src":"5535:118:22","text":" @dev Met à jour le taux de change USDC/ETH\n @param newRate Le nouveau taux (en wei par USDC)"},"functionSelector":"b95bab66","id":7462,"implemented":true,"kind":"function","modifiers":[{"id":7439,"kind":"modifierInvocation","modifierName":{"id":7438,"name":"onlyOwner","nameLocations":["5713:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"5713:9:22"},"nodeType":"ModifierInvocation","src":"5713:9:22"}],"name":"updateUsdcToEthRate","nameLocation":"5667:19:22","nodeType":"FunctionDefinition","parameters":{"id":7437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7436,"mutability":"mutable","name":"newRate","nameLocation":"5695:7:22","nodeType":"VariableDeclaration","scope":7462,"src":"5687:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7435,"name":"uint256","nodeType":"ElementaryTypeName","src":"5687:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5686:17:22"},"returnParameters":{"id":7440,"nodeType":"ParameterList","parameters":[],"src":"5723:0:22"},"scope":7595,"src":"5658:246:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7480,"nodeType":"Block","src":"6039:70:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":7476,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6096:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_CirclePaymaster_$7595","typeString":"contract CirclePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CirclePaymaster_$7595","typeString":"contract CirclePaymaster"}],"id":7475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6088:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7474,"name":"address","nodeType":"ElementaryTypeName","src":"6088:7:22","typeDescriptions":{}}},"id":7477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6088:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7468,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"6049:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}},"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6060:9:22","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":613,"src":"6049:20:22","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":7471,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6077:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6081:5:22","memberName":"value","nodeType":"MemberAccess","src":"6077:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6049:38:22","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":7478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6049:53:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7479,"nodeType":"ExpressionStatement","src":"6049:53:22"}]},"documentation":{"id":7463,"nodeType":"StructuredDocumentation","src":"5914:74:22","text":" @dev Dépose de l'ETH pour sponsoriser les transactions"},"functionSelector":"d0e30db0","id":7481,"implemented":true,"kind":"function","modifiers":[{"id":7466,"kind":"modifierInvocation","modifierName":{"id":7465,"name":"onlyOwner","nameLocations":["6029:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"6029:9:22"},"nodeType":"ModifierInvocation","src":"6029:9:22"}],"name":"deposit","nameLocation":"6002:7:22","nodeType":"FunctionDefinition","parameters":{"id":7464,"nodeType":"ParameterList","parameters":[],"src":"6009:2:22"},"returnParameters":{"id":7467,"nodeType":"ParameterList","parameters":[],"src":"6039:0:22"},"scope":7595,"src":"5993:116:22","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7500,"nodeType":"Block","src":"6285:64:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":7494,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"6325:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6325:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6317:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":7492,"name":"address","nodeType":"ElementaryTypeName","src":"6317:8:22","stateMutability":"payable","typeDescriptions":{}}},"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":7497,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7484,"src":"6335:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7489,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"6295:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}},"id":7491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6306:10:22","memberName":"withdrawTo","nodeType":"MemberAccess","referencedDeclaration":637,"src":"6295:21:22","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":7498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:47:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7499,"nodeType":"ExpressionStatement","src":"6295:47:22"}]},"documentation":{"id":7482,"nodeType":"StructuredDocumentation","src":"6119:101:22","text":" @dev Retire l'ETH du dépôt EntryPoint\n @param amount Le montant à retirer"},"functionSelector":"33289a46","id":7501,"implemented":true,"kind":"function","modifiers":[{"id":7487,"kind":"modifierInvocation","modifierName":{"id":7486,"name":"onlyOwner","nameLocations":["6275:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"6275:9:22"},"nodeType":"ModifierInvocation","src":"6275:9:22"}],"name":"withdrawDeposit","nameLocation":"6234:15:22","nodeType":"FunctionDefinition","parameters":{"id":7485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7484,"mutability":"mutable","name":"amount","nameLocation":"6258:6:22","nodeType":"VariableDeclaration","scope":7501,"src":"6250:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7483,"name":"uint256","nodeType":"ElementaryTypeName","src":"6250:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6249:16:22"},"returnParameters":{"id":7488,"nodeType":"ParameterList","parameters":[],"src":"6285:0:22"},"scope":7595,"src":"6225:124:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7517,"nodeType":"Block","src":"6511:51:22","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":7512,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"6539:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":7513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7514,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7504,"src":"6548:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7509,"name":"usdc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7113,"src":"6521:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1152","typeString":"contract IERC20"}},"id":7511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:12:22","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1197,"src":"6521:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1152_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1152_$","typeString":"function (contract IERC20,address,uint256)"}},"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6521:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7516,"nodeType":"ExpressionStatement","src":"6521:34:22"}]},"documentation":{"id":7502,"nodeType":"StructuredDocumentation","src":"6359:90:22","text":" @dev Retire l'USDC accumulé\n @param amount Le montant à retirer"},"functionSelector":"5b06dece","id":7518,"implemented":true,"kind":"function","modifiers":[{"id":7507,"kind":"modifierInvocation","modifierName":{"id":7506,"name":"onlyOwner","nameLocations":["6501:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":895,"src":"6501:9:22"},"nodeType":"ModifierInvocation","src":"6501:9:22"}],"name":"withdrawUsdc","nameLocation":"6463:12:22","nodeType":"FunctionDefinition","parameters":{"id":7505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7504,"mutability":"mutable","name":"amount","nameLocation":"6484:6:22","nodeType":"VariableDeclaration","scope":7518,"src":"6476:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7503,"name":"uint256","nodeType":"ElementaryTypeName","src":"6476:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6475:16:22"},"returnParameters":{"id":7508,"nodeType":"ParameterList","parameters":[],"src":"6511:0:22"},"scope":7595,"src":"6454:108:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7532,"nodeType":"Block","src":"6733:59:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":7528,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6779:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_CirclePaymaster_$7595","typeString":"contract CirclePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CirclePaymaster_$7595","typeString":"contract CirclePaymaster"}],"id":7527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6771:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7526,"name":"address","nodeType":"ElementaryTypeName","src":"6771:7:22","typeDescriptions":{}}},"id":7529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6771:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7524,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"6750:10:22","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$478","typeString":"contract IEntryPoint"}},"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6761:9:22","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":607,"src":"6750:20:22","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6750:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7523,"id":7531,"nodeType":"Return","src":"6743:42:22"}]},"documentation":{"id":7519,"nodeType":"StructuredDocumentation","src":"6572:102:22","text":" @dev Obtient le dépôt actuel dans l'EntryPoint\n @return Le montant déposé"},"functionSelector":"c399ec88","id":7533,"implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"6688:10:22","nodeType":"FunctionDefinition","parameters":{"id":7520,"nodeType":"ParameterList","parameters":[],"src":"6698:2:22"},"returnParameters":{"id":7523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7533,"src":"6724:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7521,"name":"uint256","nodeType":"ElementaryTypeName","src":"6724:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6723:9:22"},"scope":7595,"src":"6679:113:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7545,"nodeType":"Block","src":"7000:36:22","statements":[{"expression":{"baseExpression":{"id":7541,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"7017:6:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7543,"indexExpression":{"id":7542,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7536,"src":"7024:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7017:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7540,"id":7544,"nodeType":"Return","src":"7010:19:22"}]},"documentation":{"id":7534,"nodeType":"StructuredDocumentation","src":"6802:129:22","text":" @dev Obtient le nonce actuel d'un utilisateur\n @param user L'adresse utilisateur\n @return Le nonce"},"functionSelector":"2d0335ab","id":7546,"implemented":true,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"6945:8:22","nodeType":"FunctionDefinition","parameters":{"id":7537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7536,"mutability":"mutable","name":"user","nameLocation":"6962:4:22","nodeType":"VariableDeclaration","scope":7546,"src":"6954:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7535,"name":"address","nodeType":"ElementaryTypeName","src":"6954:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6953:14:22"},"returnParameters":{"id":7540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7546,"src":"6991:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7538,"name":"uint256","nodeType":"ElementaryTypeName","src":"6991:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6990:9:22"},"scope":7595,"src":"6936:100:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7561,"nodeType":"Block","src":"7298:57:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7554,"name":"ethAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"7316:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"316536","id":7555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7328:3:22","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1e6"},"src":"7316:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7557,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7315:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7558,"name":"usdcToEthRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"7335:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7315:33:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7553,"id":7560,"nodeType":"Return","src":"7308:40:22"}]},"documentation":{"id":7547,"nodeType":"StructuredDocumentation","src":"7046:169:22","text":" @dev Calcule le coût en USDC pour un montant ETH donné\n @param ethAmount Le montant en ETH (wei)\n @return Le montant équivalent en USDC"},"functionSelector":"8aeb3ce7","id":7562,"implemented":true,"kind":"function","modifiers":[],"name":"calculateUsdcCost","nameLocation":"7229:17:22","nodeType":"FunctionDefinition","parameters":{"id":7550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7549,"mutability":"mutable","name":"ethAmount","nameLocation":"7255:9:22","nodeType":"VariableDeclaration","scope":7562,"src":"7247:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7548,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:19:22"},"returnParameters":{"id":7553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7562,"src":"7289:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7551,"name":"uint256","nodeType":"ElementaryTypeName","src":"7289:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7288:9:22"},"scope":7595,"src":"7220:135:22","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7593,"nodeType":"Block","src":"7590:94:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":7574,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"7608:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":7576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7624:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7608:17:22","trueExpression":{"hexValue":"31","id":7575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7620:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":7578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7607:19:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7579,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7567,"src":"7630:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":7580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7644:3:22","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"7630:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7582,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7629:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7607:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7584,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"7652:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"id":7587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":7585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7667:3:22","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3634","id":7586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7673:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"7667:8:22","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"}}],"id":7588,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7666:10:22","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"}},"src":"7652:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7590,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7651:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7607:70:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7573,"id":7592,"nodeType":"Return","src":"7600:77:22"}]},"documentation":{"id":7563,"nodeType":"StructuredDocumentation","src":"7365:73:22","text":" @dev Emballe les données de validation selon ERC-4337"},"id":7594,"implemented":true,"kind":"function","modifiers":[],"name":"_packValidationData","nameLocation":"7452:19:22","nodeType":"FunctionDefinition","parameters":{"id":7570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7565,"mutability":"mutable","name":"sigFailed","nameLocation":"7486:9:22","nodeType":"VariableDeclaration","scope":7594,"src":"7481:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7564,"name":"bool","nodeType":"ElementaryTypeName","src":"7481:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7567,"mutability":"mutable","name":"validUntil","nameLocation":"7513:10:22","nodeType":"VariableDeclaration","scope":7594,"src":"7505:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7566,"name":"uint256","nodeType":"ElementaryTypeName","src":"7505:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7569,"mutability":"mutable","name":"validAfter","nameLocation":"7541:10:22","nodeType":"VariableDeclaration","scope":7594,"src":"7533:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7568,"name":"uint256","nodeType":"ElementaryTypeName","src":"7533:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7471:86:22"},"returnParameters":{"id":7573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7594,"src":"7581:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7571,"name":"uint256","nodeType":"ElementaryTypeName","src":"7581:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7580:9:22"},"scope":7595,"src":"7443:241:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7596,"src":"758:6928:22","usedErrors":[850,855,1164,3111,3116,3121],"usedEvents":[861,7132,7138]}],"src":"32:7655:22"},"id":22}},"contracts":{"@account-abstraction/contracts/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])":"275e2d79","validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)":"e3563a4f","validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"64c530cd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"params\":{\"userOps\":\"array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"the aggregated signature\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"params\":{\"userOp\":\"the userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"the value to put into the signature field of the userOp when calling handleOps.    (usually empty, unless account and aggregator support some kind of \\\"multisig\\\"\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[])\":{\"notice\":\"aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation\"},\"validateSignatures((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],bytes)\":{\"notice\":\"validate aggregated signature. revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"validate signature of a single userOp This method is should be called by bundler after EntryPoint.simulateValidation() returns (reverts) with ValidationResultWithAggregation First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"paid","type":"uint256"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bool","name":"targetSuccess","type":"bool"},{"internalType":"bytes","name":"targetResult","type":"bytes"}],"name":"ExecutionResult","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"}],"name":"ValidationResult","type":"error"},{"inputs":[{"components":[{"internalType":"uint256","name":"preOpGas","type":"uint256"},{"internalType":"uint256","name":"prefund","type":"uint256"},{"internalType":"bool","name":"sigFailed","type":"bool"},{"internalType":"uint48","name":"validAfter","type":"uint48"},{"internalType":"uint48","name":"validUntil","type":"uint48"},{"internalType":"bytes","name":"paymasterContext","type":"bytes"}],"internalType":"struct IEntryPoint.ReturnInfo","name":"returnInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"senderInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"factoryInfo","type":"tuple"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"paymasterInfo","type":"tuple"},{"components":[{"internalType":"address","name":"aggregator","type":"address"},{"components":[{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"internalType":"struct IStakeManager.StakeInfo","name":"stakeInfo","type":"tuple"}],"internalType":"struct IEntryPoint.AggregatorStakeInfo","name":"aggregatorInfo","type":"tuple"}],"name":"ValidationResultWithAggregation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"op","type":"tuple"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"targetCallData","type":"bytes"}],"name":"simulateHandleOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"}],"name":"simulateValidation","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"a6193531","handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)":"4b1d7cf5","handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)":"1fad948c","incrementNonce(uint192)":"0bd28e3b","simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)":"d6383f94","simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"ee219423","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"targetSuccess\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"targetResult\",\"type\":\"bytes\"}],\"name\":\"ExecutionResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResult\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint48\",\"name\":\"validAfter\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"validUntil\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"stakeInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IEntryPoint.AggregatorStakeInfo\",\"name\":\"aggregatorInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResultWithAggregation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"op\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"targetCallData\",\"type\":\"bytes\"}],\"name\":\"simulateHandleOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"simulateValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- index into the array of ops to the failed one (in simulateValidation, this is always zero)\",\"reason\":\"- revert reason      The string starts with a unique code \\\"AAmn\\\", where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,      so a failure can be attributed to the correct entity.   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\"}}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"params\":{\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"params\":{\"aggregatorInfo\":\"signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation\",\"factoryInfo\":\"stake information about the factory (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"the factory used to deploy this account (in the initCode)\",\"paymaster\":\"the paymaster used by this UserOp\",\"sender\":\"the account that is deployed\",\"userOpHash\":\"the userOp that deployed this account. UserOperationEvent will follow.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"the nonce used in the request\",\"revertReason\":\"- the return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"the sender of this request\",\"userOpHash\":\"the request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"the constructor code to be passed into the UserOperation.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"opsPerAggregator\":\"the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\"}},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"ops\":\"the operations to execute\"}},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"params\":{\"op\":\"the UserOperation to simulate\",\"target\":\"if nonzero, a target address to call after userop simulation. If called, the targetSuccess and targetResult        are set to the return from that call.\",\"targetCallData\":\"callData to pass to target address\"}},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"details\":\"this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\",\"params\":{\"userOp\":\"the user operation to validate.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ExecutionResult(uint256,uint256,uint48,uint48,bool,bytes)\":[{\"notice\":\"return value of simulateHandleOp\"}],\"FailedOp(uint256,string)\":[{\"notice\":\"a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"SenderAddressResult(address)\":[{\"notice\":\"return value of getSenderAddress\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"error case when a signature aggregator fails to verify the aggregated signature it had created.\"}],\"ValidationResult((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"notice\":\"Successful result from simulateValidation.\"}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint48,uint48,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"notice\":\"Successful result from simulateValidation, if the account returns a signature aggregator\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"an event emitted by handleOps(), before starting the execution loop. any event emitted before this event, is part of the validation.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"signature aggregator used by the following UserOperationEvents within this bundle.\"},\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation. no signature aggregator is used. if any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),address,bytes)\":{\"notice\":\"simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \\\"ExecutionResult\\\". it performs full validation of the UserOperation, but ignores signature error. an optional target address is called after the userop succeeds, and its value is returned (before the entire call is reverted) Note that in order to collect the the success/failure of the target call, it must be executed with trace enabled to track the emitted events.\"},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"IPaymaster":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"postOp(uint8,bytes,uint256)":"a9a23409","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"params\":{\"actualGasCost\":\"- actual gas used so far (without this postOp call).\",\"context\":\"- the context value returned by validatePaymasterUserOp\",\"mode\":\"enum with the following options:      opSucceeded - user operation succeeded.      opReverted  - user op reverted. still has to pay for gas.      postOpReverted - user op succeeded, but caused postOp (in mode=opSucceeded) to revert.                       Now this is the 2nd call, after user's op was deliberately reverted.\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"the maximum cost of this transaction (based on maximum gas and gas price from userOp)\",\"userOp\":\"the user operation\",\"userOpHash\":\"hash of the user's request data.\"},\"returns\":{\"context\":\"value to send to a postOp      zero length to signify postOp is not required.\",\"validationData\":\"signature and time-range of this operation, encoded the same as the return value of validateUserOperation      <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,         otherwise, an address of an \\\"authorizer\\\" contract.      <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"      <6-byte> validAfter - first timestamp this operation is valid      Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256)\":{\"notice\":\"post-operation handler. Must verify sender is the entryPoint\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted) The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"notice\":\"the interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. a paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8\",\"dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint112","name":"deposit","type":"uint112"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"returns\":{\"_0\":\"the deposit (for gas payment) of the account\"}},\"getDepositInfo(address)\":{\"returns\":{\"info\":\"- full deposit information of given account\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted when stake or unstake delay are modified\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"notice\":\"manage deposits and stakes. deposit is just a balance used to pay for UserOperations (either by a paymaster or an account) stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/UserOperation.sol":{"UserOperationLib":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212204fae35cf09766a556b67f477448b3606eaca562eb6888a784ae3f0b54e7ff47564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0xAE CALLDATALOAD 0xCF MULMOD PUSH23 0x6A556B67F477448B3606EACA562EB6888A784AE3F0B54E PUSH32 0xF47564736F6C6343000814003300000000000000000000000000000000000000 ","sourceMap":"1630:2115:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212204fae35cf09766a556b67f477448b3606eaca562eb6888a784ae3f0b54e7ff47564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0xAE CALLDATALOAD 0xCF MULMOD PUSH23 0x6A556B67F477448B3606EACA562EB6888A784AE3F0B54E PUSH32 0xF47564736F6C6343000814003300000000000000000000000000000000000000 ","sourceMap":"1630:2115:6:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/UserOperation.sol\":\"UserOperationLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220120167e250e19653c18348e566d8624234704be91b7a954312f9736c7bf962df64736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT ADD PUSH8 0xE250E19653C18348 0xE5 PUSH7 0xD8624234704BE9 SHL PUSH27 0x954312F9736C7BF962DF64736F6C63430008140033000000000000 ","sourceMap":"698:9376:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220120167e250e19653c18348e566d8624234704be91b7a954312f9736c7bf962df64736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT ADD PUSH8 0xE250E19653C18348 0xE5 PUSH7 0xD8624234704BE9 SHL PUSH27 0x954312F9736C7BF962DF64736F6C63430008140033000000000000 ","sourceMap":"698:9376:12:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:14:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d08bc96a8d6dcc6448a3f0db7c13cd229f9ccdca095b3b8c535911fcf74d27b164736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 DUP12 0xC9 PUSH11 0x8D6DCC6448A3F0DB7C13CD 0x22 SWAP16 SWAP13 0xCD 0xCA MULMOD JUMPDEST EXTCODESIZE DUP13 MSTORE8 MSIZE GT 0xFC 0xF7 0x4D 0x27 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18980:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d08bc96a8d6dcc6448a3f0db7c13cd229f9ccdca095b3b8c535911fcf74d27b164736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 DUP12 0xC9 PUSH11 0x8D6DCC6448A3F0DB7C13CD 0x22 SWAP16 SWAP13 0xCD 0xCA MULMOD JUMPDEST EXTCODESIZE DUP13 MSTORE8 MSIZE GT 0xFC 0xF7 0x4D 0x27 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18980:15:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220dd83379cd91612060872577f24e4aa198892a5e5275b61c6186bb6de502962a664736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD DUP4 CALLDATACOPY SWAP13 0xD9 AND SLT MOD ADDMOD PUSH19 0x577F24E4AA198892A5E5275B61C6186BB6DE50 0x29 PUSH3 0xA66473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"344:7470:16:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220dd83379cd91612060872577f24e4aa198892a5e5275b61c6186bb6de502962a664736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD DUP4 CALLDATACOPY SWAP13 0xD9 AND SLT MOD ADDMOD PUSH19 0x577F24E4AA198892A5E5275B61C6186BB6DE50 0x29 PUSH3 0xA66473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"344:7470:16:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f0207ad9e362a615aa90358e523b6ce04d4e69f6202f53043b8bdd8f730f26b364736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE KECCAK256 PUSH27 0xD9E362A615AA90358E523B6CE04D4E69F6202F53043B8BDD8F730F 0x26 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f0207ad9e362a615aa90358e523b6ce04d4e69f6202f53043b8bdd8f730f26b364736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE KECCAK256 PUSH27 0xD9E362A615AA90358E523B6CE04D4E69F6202F53043B8BDD8F730F 0x26 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"521:3729:17:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:19:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:20:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:21:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:21:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/CirclePaymaster.sol":{"CirclePaymaster":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"_entryPoint","type":"address"},{"internalType":"contract IERC20","name":"_usdc","type":"address"},{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newRate","type":"uint256"}],"name":"UsdcToEthRateUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"usdcAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"ethAmount","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"userOpHash","type":"bytes32"}],"name":"UserOperationSponsored","type":"event"},{"inputs":[],"name":"SIGNATURE_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"VALID_TIMESTAMP_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"ethAmount","type":"uint256"}],"name":"calculateUsdcCost","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newRate","type":"uint256"}],"name":"updateUsdcToEthRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"usdc","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"usdcToEthRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct UserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawDeposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawUsdc","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0xC0 CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x1F PUSH2 0x1350 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x14D JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x148 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 DUP2 AND DUP2 SUB PUSH2 0x148 JUMPI PUSH1 0x20 DUP3 ADD MLOAD SWAP2 DUP4 DUP4 AND DUP4 SUB PUSH2 0x148 JUMPI PUSH1 0x40 ADD MLOAD DUP4 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x148 JUMPI DUP1 ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP6 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH7 0x8E1BC9BF04000 PUSH1 0x1 SSTORE PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH2 0x11EC SWAP1 DUP2 PUSH2 0x164 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x11F ADD MSTORE DUP2 DUP2 PUSH2 0x894 ADD MSTORE DUP2 DUP2 PUSH2 0x958 ADD MSTORE DUP2 DUP2 PUSH2 0xA80 ADD MSTORE DUP2 DUP2 PUSH2 0xD26 ADD MSTORE PUSH2 0x1089 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x269 ADD MSTORE DUP2 DUP2 PUSH2 0x2D5 ADD MSTORE DUP2 DUP2 PUSH2 0x494 ADD MSTORE DUP2 DUP2 PUSH2 0xC91 ADD MSTORE DUP2 DUP2 PUSH2 0xCCB ADD MSTORE DUP2 DUP2 PUSH2 0x1115 ADD MSTORE PUSH2 0x1158 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2D0335AB EQ PUSH2 0xD8D JUMPI POP DUP1 PUSH4 0x33289A46 EQ PUSH2 0xCFA JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0xCB5 JUMPI DUP1 PUSH4 0x5B06DECE EQ PUSH2 0xC62 JUMPI DUP1 PUSH4 0x6C7E9B3C EQ PUSH2 0xC46 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBEC JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0xBAF JUMPI DUP1 PUSH4 0x8AEB3CE7 EQ PUSH2 0xB5A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB33 JUMPI DUP1 PUSH4 0xA9A23409 EQ PUSH2 0xACB JUMPI DUP1 PUSH4 0xAC2DB91A EQ PUSH2 0xAAF JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0xA6A JUMPI DUP1 PUSH4 0xB95BAB66 EQ PUSH2 0x9D8 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x92B JUMPI DUP1 PUSH4 0xCE2605AF EQ PUSH2 0x90D JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x87D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7EB JUMPI PUSH4 0xF465C77E EQ PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7E8 JUMPI PUSH1 0x3 NOT PUSH1 0x60 CALLDATASIZE DUP3 ADD SLT PUSH2 0x7E4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7C4 JUMPI PUSH2 0x160 DUP2 CALLDATASIZE SUB SWAP3 DUP4 ADD SLT PUSH2 0x7C4 JUMPI PUSH2 0x14D CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDF3 JUMP JUMPDEST PUSH2 0x124 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x22 NOT ADD DUP3 SLT ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x4 DUP3 DUP3 ADD ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7E0 JUMPI DUP1 CALLDATASIZE SUB PUSH1 0x24 DUP5 DUP5 ADD ADD SGT PUSH2 0x7E0 JUMPI DUP1 PUSH1 0x14 GT PUSH2 0x7E0 JUMPI DUP3 DUP3 ADD ADD SWAP2 PUSH1 0xA0 PUSH1 0x13 NOT DUP3 DUP5 ADD DUP6 SUB ADD SLT PUSH2 0x7E0 JUMPI PUSH2 0x1AE PUSH1 0x38 DUP3 DUP5 ADD ADD PUSH2 0xE3F JUMP JUMPDEST SWAP3 PUSH1 0xB8 DUP3 DUP5 ADD ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7DC JUMPI PUSH1 0x24 SWAP1 DUP4 DUP6 ADD ADD SWAP2 ADD SWAP1 DUP2 PUSH1 0x57 DUP3 ADD SLT ISZERO PUSH2 0x7DC JUMPI PUSH1 0x38 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7C8 JUMPI SWAP1 DUP7 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x209 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND ADD DUP7 PUSH2 0xE83 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x58 DUP3 DUP5 ADD ADD GT PUSH2 0x7C4 JUMPI DUP1 PUSH1 0x58 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x98 DUP3 DUP5 ADD ADD CALLDATALOAD TIMESTAMP LT PUSH2 0x789 JUMPI PUSH1 0x78 DUP3 DUP5 ADD ADD CALLDATALOAD TIMESTAMP GT PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6D5 JUMPI DUP7 SWAP2 PUSH2 0x71E JUMPI JUMPDEST POP PUSH1 0x58 DUP4 DUP6 ADD ADD CALLDATALOAD GT PUSH2 0x6E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6D5 JUMPI DUP7 SWAP2 PUSH2 0x69E JUMPI JUMPDEST POP PUSH1 0x58 DUP4 DUP6 ADD ADD CALLDATALOAD GT PUSH2 0x659 JUMPI PUSH3 0xF4240 PUSH1 0x44 CALLDATALOAD DUP2 PUSH1 0x44 CALLDATALOAD MUL DIV DUP2 EQ PUSH1 0x44 CALLDATALOAD ISZERO OR ISZERO PUSH2 0x645 JUMPI PUSH1 0x1 SLOAD PUSH2 0x33B SWAP2 PUSH1 0x44 CALLDATALOAD MUL PUSH2 0xEA5 JUMP JUMPDEST PUSH1 0x58 DUP4 DUP6 ADD ADD CALLDATALOAD LT PUSH2 0x600 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP6 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 EQ PUSH2 0x5EC JUMPI PUSH1 0x1 DUP3 ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP7 PUSH1 0x60 SHL AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x58 DUP5 DUP7 ADD ADD CALLDATALOAD PUSH1 0x54 DUP4 ADD MSTORE PUSH1 0x78 DUP5 DUP7 ADD ADD CALLDATALOAD PUSH1 0x74 DUP4 ADD MSTORE PUSH1 0x98 DUP5 DUP7 ADD ADD CALLDATALOAD PUSH1 0x94 DUP4 ADD MSTORE PUSH1 0xB4 DUP3 ADD MSTORE PUSH1 0xB4 DUP2 MSTORE DUP1 PUSH1 0xE0 DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xE0 DUP4 ADD GT OR PUSH2 0x59C JUMPI PUSH2 0x426 SWAP2 DUP2 PUSH1 0xE0 PUSH2 0x41D SWAP4 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP9 MSTORE PUSH1 0x1C MSTORE PUSH1 0x3C DUP8 KECCAK256 PUSH2 0xF2D JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND SUB PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE DUP3 DUP3 ADD PUSH1 0x58 ADD CALLDATALOAD PUSH1 0x64 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH1 0xA0 DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x59C JUMPI PUSH2 0x4B8 SWAP1 DUP7 SWAP5 SWAP6 SWAP3 PUSH1 0x40 MSTORE PUSH32 0x0 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x58 DUP4 DUP7 ADD ADD CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP3 MSTORE PUSH2 0x4EB DUP3 PUSH2 0xE67 JUMP JUMPDEST PUSH32 0xAFE65894F5DC3EC01B36EB697AB05531317B716BE71D4669D818E0B0E774E030 PUSH1 0x60 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x58 DUP7 DUP10 ADD ADD CALLDATALOAD DUP5 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 LOG2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x40 DUP5 MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x40 DUP7 ADD MSTORE DUP6 JUMPDEST DUP5 DUP2 LT PUSH2 0x584 JUMPI POP POP PUSH1 0x78 SWAP1 PUSH1 0x60 SWAP6 DUP7 DUP6 DUP8 ADD ADD MSTORE PUSH1 0x98 DUP2 DUP5 ADD ADD CALLDATALOAD PUSH1 0xE0 SHL SWAP3 ADD ADD CALLDATALOAD PUSH1 0xA0 SHL OR PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x20 DUP3 DUP3 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP11 DUP5 ADD ADD MSTORE DUP9 SWAP7 POP ADD PUSH2 0x54A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x5369676E617475726520696E76616C696465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6E74616E74205553444320696E737566666973616E740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F77616E6365205553444320696E737566666973616E74650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6CD JUMPI JUMPDEST DUP2 PUSH2 0x6B9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xE83 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6C8 JUMPI MLOAD CODESIZE PUSH2 0x305 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14DBDB1919481554D110C81A5B9CDD59999A5CD85B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x748 JUMPI JUMPDEST DUP2 PUSH2 0x739 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xE83 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6C8 JUMPI MLOAD CODESIZE PUSH2 0x299 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x5061796D61737465723A20657870697265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14185E5B585CDD195C8E881D1C9BDC081D1BDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x7C4 JUMPI PUSH2 0x81B PUSH2 0xDC7 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x864 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI PUSH2 0x891 PUSH2 0xDC7 JUMP JUMPDEST DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x90A JUMPI DUP2 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xB760FAF9 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x8FF JUMPI PUSH2 0x8EF JUMPI POP RETURN JUMPDEST PUSH2 0x8F8 SWAP1 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0x7E8 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP REVERT JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9CC JUMPI SWAP1 PUSH2 0x99A JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x9C4 JUMPI JUMPDEST DUP2 PUSH2 0x9B3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xE83 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6C8 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x98F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x9F5 PUSH2 0xDC7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA35 JUMPI PUSH1 0x40 PUSH32 0xE335B031F0EF293EB2AE4BB1453EF1BA92FFC180905BF925E29290DD546C1661 SWAP2 PUSH1 0x1 SLOAD SWAP1 DUP1 PUSH1 0x1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x5461757820696E76616C696465 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x7E0 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x7E0 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x7E0 JUMPI CALLDATASIZE PUSH1 0x24 DUP3 DUP5 ADD ADD GT PUSH2 0x7E0 JUMPI PUSH2 0xB30 SWAP3 PUSH1 0x24 PUSH1 0x44 CALLDATALOAD SWAP4 ADD SWAP1 PUSH2 0x1072 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7E8 JUMPI PUSH3 0xF4240 PUSH1 0x4 CALLDATALOAD DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xB9B JUMPI PUSH1 0x20 PUSH2 0xB93 DUP4 PUSH1 0x1 SLOAD SWAP1 PUSH2 0xEA5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x7E4 JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH1 0x20 SWAP4 MSTORE PUSH1 0x2 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI PUSH2 0xC05 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x54 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7E8 JUMPI PUSH2 0xC7C PUSH2 0xDC7 JUMP JUMPDEST DUP1 SLOAD PUSH2 0xB30 SWAP1 PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH2 0x1178 JUMP JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7E8 JUMPI PUSH2 0xD14 PUSH2 0xDC7 JUMP JUMPDEST DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 PUSH32 0x0 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xD89 JUMPI PUSH1 0x44 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x40B850F PUSH1 0xE3 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x8FF JUMPI PUSH2 0xD80 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0xB30 SWAP1 PUSH2 0xE53 JUMP JUMPDEST POP POP REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x7E4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7E4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x7C4 JUMPI DUP3 PUSH1 0x40 SWAP2 PUSH1 0x20 SWAP5 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xDDB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xDFA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5365756C20456E747279506F696E74206175746F726973650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x6C8 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x59C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x59C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x59C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 ISZERO PUSH2 0xEAF JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0xF21 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0xF18 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0xEF6 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0xF5E JUMPI PUSH2 0xF57 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0xF69 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0xFE1 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x9CC JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xFD8 JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x105C JUMPI DUP1 PUSH2 0xFFF JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1019 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x103A JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x1044 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x60 SWAP1 DUP5 SWAP1 PUSH2 0x10B0 CALLER PUSH32 0x0 DUP7 AND EQ PUSH2 0xDF3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6C8 JUMPI PUSH1 0x20 PUSH2 0x10C3 DUP5 PUSH2 0xE3F JUMP JUMPDEST SWAP4 ADD CALLDATALOAD SWAP3 AND SWAP3 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x105C JUMPI PUSH1 0x2 EQ PUSH2 0x1151 JUMPI PUSH3 0xF4240 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x113B JUMPI PUSH1 0x1 SLOAD PUSH2 0x10FA SWAP2 PUSH2 0xEA5 JUMP JUMPDEST DUP1 DUP3 GT PUSH2 0x1106 JUMPI POP POP POP JUMP JUMPDEST DUP2 SUB SWAP1 DUP2 GT PUSH2 0x113B JUMPI PUSH2 0x1139 SWAP2 PUSH32 0x0 PUSH2 0x1178 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x1139 SWAP2 PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x1139 SWAP2 PUSH2 0x11B1 DUP3 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0xEC5 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0x1F 0xF8 0xCB 0x4A 0xC9 STATICCALL DUP11 DUP3 PUSH31 0x1458B7B5BFFE2125ABE6FB1B0DF5411D9C3C56B1B78564736F6C6343000814 STOP CALLER ","sourceMap":"758:6928:22:-:0;;;;;;;;;;;;;-1:-1:-1;;758:6928:22;;;;-1:-1:-1;;;;;758:6928:22;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;758:6928:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:26:7;;1269:95;;-1:-1:-1;758:6928:22;;-1:-1:-1;;;;;;758:6928:22;;;;;;;;;;;3052:40:7;;-1:-1:-1;3052:40:7;1248:11:22;758:6928;;1791:24;;758:6928;1825:12;758:6928;;;;;;1791:24;758:6928;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1269:95:7;758:6928:22;;-1:-1:-1;;;1322:31:7;;-1:-1:-1;1322:31:7;;;758:6928:22;;;1322:31:7;758:6928:22;-1:-1:-1;758:6928:22;;;;;;-1:-1:-1;758:6928:22;;;;;-1:-1:-1;758:6928:22"},"deployedBytecode":{"functionDebugData":{"abi_decode_address_payable":{"entryPoint":3647,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_uint256":{"entryPoint":3749,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":3715,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_10091":{"entryPoint":3667,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_11992":{"entryPoint":3687,"id":null,"parameterSlots":1,"returnSlots":0},"fun_callOptionalReturn":{"entryPoint":3781,"id":1574,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":3527,"id":921,"parameterSlots":0,"returnSlots":0},"fun_postOp":{"entryPoint":4210,"id":7433,"parameterSlots":4,"returnSlots":0},"fun_safeTransfer":{"entryPoint":4472,"id":1197,"parameterSlots":3,"returnSlots":0},"fun_throwError":{"entryPoint":4077,"id":3447,"parameterSlots":2,"returnSlots":0},"fun_tryRecover":{"entryPoint":3885,"id":3174,"parameterSlots":2,"returnSlots":3},"fun_tryRecover_3362":{"entryPoint":3945,"id":3362,"parameterSlots":4,"returnSlots":3},"require_helper_stringliteral_fdcc":{"entryPoint":3571,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"7110":[{"length":32,"start":287},{"length":32,"start":2196},{"length":32,"start":2392},{"length":32,"start":2688},{"length":32,"start":3366},{"length":32,"start":4233}],"7113":[{"length":32,"start":617},{"length":32,"start":725},{"length":32,"start":1172},{"length":32,"start":3217},{"length":32,"start":3275},{"length":32,"start":4373},{"length":32,"start":4440}]},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c9081632d0335ab14610d8d5750806333289a4614610cfa5780633e413bee14610cb55780635b06dece14610c625780636c7e9b3c14610c46578063715018a614610bec5780637ecebe0014610baf5780638aeb3ce714610b5a5780638da5cb5b14610b33578063a9a2340914610acb578063ac2db91a14610aaf578063b0d691fe14610a6a578063b95bab66146109d8578063c399ec881461092b578063ce2605af1461090d578063d0e30db01461087d578063f2fde38b146107eb5763f465c77e146100e757600080fd5b346107e8576003196060368201126107e45760043567ffffffffffffffff81116107c457610160813603928301126107c45761014d337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610df3565b61012481013591602219018212156107c4576004828201013567ffffffffffffffff81116107e057803603602484840101136107e057806014116107e057828201019160a0601319828401850301126107e0576101ae603882840101610e3f565b9260b8828401013567ffffffffffffffff81116107dc5760249083850101910190816057820112156107dc57603881013567ffffffffffffffff81116107c857908691604051936102096020601f19601f8501160186610e83565b818552605882840101116107c45780605860209301838601378301015260988284010135421061078957607882840101354211610750576040516370a0823160e01b81526001600160a01b038581166004830152602090829060249082907f0000000000000000000000000000000000000000000000000000000000000000165afa9081156106d557869161071e575b5060588385010135116106e057604051636eb1769f60e11b81526001600160a01b038581166004830152306024830152602090829060449082907f0000000000000000000000000000000000000000000000000000000000000000165afa9081156106d557869161069e575b50605883850101351161065957620f424060443581604435020481146044351517156106455760015461033b9160443502610ea5565b6058838501013510610600576001600160a01b038416855260026020526040852080549060001982146105ec576001820190556040519060243560208301526bffffffffffffffffffffffff198660601b16604083015260588486010135605483015260788486010135607483015260988486010135609483015260b482015260b481528060e081011067ffffffffffffffff60e08301111761059c57610426918160e061041d9301604052602081519101207f19457468657265756d205369676e6564204d6573736167653a0a3332000000008852601c52603c8720610f2d565b90929192610fed565b6001600160a01b038481169116036105b2576040516323b872dd60e01b60208201526001600160a01b038416602482015230604482015282820160580135606480830191909152815260a081019067ffffffffffffffff82118183101761059c576104b890869495926040527f0000000000000000000000000000000000000000000000000000000000000000610ec5565b6040519060018060a01b03811660208301526058838601013560408301526044356060830152606082526104eb82610e67565b7fafe65894f5dc3ec01b36eb697ab05531317b716be71d4669d818e0b0e774e0306060604051926058868901013584526044356020850152602435604085015260018060a01b031692a260405193849260408452825192836040860152855b8481106105845750506078906060958685870101526098818401013560e01b9201013560a01b176020830152601f80199101168101030190f35b602082820181015160608a840101528896500161054a565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b81526020600482015260126024820152715369676e617475726520696e76616c69646560701b6044820152606490fd5b634e487b7160e01b87526011600452602487fd5b60405162461bcd60e51b815260206004820152601860248201527f4d6f6e74616e74205553444320696e737566666973616e7400000000000000006044820152606490fd5b634e487b7160e01b86526011600452602486fd5b60405162461bcd60e51b815260206004820152601b60248201527f416c6c6f77616e6365205553444320696e737566666973616e746500000000006044820152606490fd5b90506020813d6020116106cd575b816106b960209383610e83565b810103126106c8575138610305565b600080fd5b3d91506106ac565b6040513d88823e3d90fd5b60405162461bcd60e51b815260206004820152601660248201527514dbdb1919481554d110c81a5b9cdd59999a5cd85b9d60521b6044820152606490fd5b90506020813d602011610748575b8161073960209383610e83565b810103126106c8575138610299565b3d915061072c565b60405162461bcd60e51b81526020600482015260116024820152705061796d61737465723a2065787069726560781b6044820152606490fd5b60405162461bcd60e51b815260206004820152601360248201527214185e5b585cdd195c8e881d1c9bdc081d1bdd606a1b6044820152606490fd5b8280fd5b634e487b7160e01b87526041600452602487fd5b8580fd5b8380fd5b5080fd5b80fd5b50346107e85760203660031901126107e8576004356001600160a01b03818116918290036107c45761081b610dc7565b811561086457600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b604051631e4fbdf760e01b815260048101849052602490fd5b50806003193601126107e857610891610dc7565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561090a57816024916040519283809263b760faf960e01b825230600483015234905af180156108ff576108ef5750f35b6108f890610e53565b6107e85780f35b6040513d84823e3d90fd5b50fd5b50346107e857806003193601126107e8576020600154604051908152f35b50346107e857806003193601126107e8576040516370a0823160e01b8152306004820152906020826024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156109cc579061099a575b602090604051908152f35b506020813d82116109c4575b816109b360209383610e83565b810103126106c8576020905161098f565b3d91506109a6565b604051903d90823e3d90fd5b50346107e85760203660031901126107e8576004356109f5610dc7565b8015610a355760407fe335b031f0ef293eb2ae4bb1453ef1ba92ffc180905bf925e29290dd546c166191600154908060015582519182526020820152a180f35b60405162461bcd60e51b815260206004820152600d60248201526c5461757820696e76616c69646560981b6044820152606490fd5b50346107e857806003193601126107e8576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346107e857806003193601126107e857602060405160148152f35b50346107e85760603660031901126107e85760043560038110156107e45760243567ffffffffffffffff8082116107e057366023830112156107e05781600401359081116107e05736602482840101116107e057610b30926024604435930190611072565b80f35b50346107e857806003193601126107e857546040516001600160a01b039091168152602090f35b50346107e85760203660031901126107e857620f424060043581810292918115918404141715610b9b576020610b938360015490610ea5565b604051908152f35b634e487b7160e01b81526011600452602490fd5b50346107e85760203660031901126107e8576004356001600160a01b038116908190036107e4578160409160209352600283522054604051908152f35b50346107e857806003193601126107e857610c05610dc7565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346107e857806003193601126107e857602060405160548152f35b50346107e85760203660031901126107e857610c7c610dc7565b8054610b3090600435906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000611178565b50346107e857806003193601126107e8576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346107e85760203660031901126107e857610d14610dc7565b805481906001600160a01b03908116907f000000000000000000000000000000000000000000000000000000000000000016803b15610d895760448392604051948593849263040b850f60e31b8452600484015260043560248401525af180156108ff57610d80575080f35b610b3090610e53565b5050fd5b9050346107e45760203660031901126107e4576004356001600160a01b038116908190036107c45782604091602094526002845220548152f35b6000546001600160a01b03163303610ddb57565b60405163118cdaa760e01b8152336004820152602490fd5b15610dfa57565b60405162461bcd60e51b815260206004820152601860248201527f5365756c20456e747279506f696e74206175746f7269736500000000000000006044820152606490fd5b35906001600160a01b03821682036106c857565b67ffffffffffffffff811161059c57604052565b6080810190811067ffffffffffffffff82111761059c57604052565b90601f8019910116810190811067ffffffffffffffff82111761059c57604052565b8115610eaf570490565b634e487b7160e01b600052601260045260246000fd5b906000602091828151910182855af115610f21576000513d610f1857506001600160a01b0381163b155b610ef65750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b60011415610eef565b6040513d6000823e3d90fd5b8151919060418303610f5e57610f5792506020820151906060604084015193015160001a90610f69565b9192909190565b505060009160029190565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610fe157926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa156109cc5780516001600160a01b03811615610fd857918190565b50809160019190565b50505060009160039190565b600481101561105c5780610fff575050565b600181036110195760405163f645eedf60e01b8152600490fd5b6002810361103a5760405163fce698f760e01b815260048101839052602490fd5b6003146110445750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b9290916001600160a01b039060609084906110b0337f0000000000000000000000000000000000000000000000000000000000000000861614610df3565b810103126106c85760206110c384610e3f565b930135921692600381101561105c5760021461115157620f42409081810291818304149015171561113b576001546110fa91610ea5565b80821161110657505050565b810390811161113b57611139917f0000000000000000000000000000000000000000000000000000000000000000611178565b565b634e487b7160e01b600052601160045260246000fd5b50611139917f00000000000000000000000000000000000000000000000000000000000000005b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152611139916111b182610e67565b610ec556fea2646970667358221220a91ff8cb4ac9fa8a827e1458b7b5bffe2125abe6fb1b0df5411d9c3c56b1b78564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2D0335AB EQ PUSH2 0xD8D JUMPI POP DUP1 PUSH4 0x33289A46 EQ PUSH2 0xCFA JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0xCB5 JUMPI DUP1 PUSH4 0x5B06DECE EQ PUSH2 0xC62 JUMPI DUP1 PUSH4 0x6C7E9B3C EQ PUSH2 0xC46 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBEC JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0xBAF JUMPI DUP1 PUSH4 0x8AEB3CE7 EQ PUSH2 0xB5A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB33 JUMPI DUP1 PUSH4 0xA9A23409 EQ PUSH2 0xACB JUMPI DUP1 PUSH4 0xAC2DB91A EQ PUSH2 0xAAF JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0xA6A JUMPI DUP1 PUSH4 0xB95BAB66 EQ PUSH2 0x9D8 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x92B JUMPI DUP1 PUSH4 0xCE2605AF EQ PUSH2 0x90D JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x87D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7EB JUMPI PUSH4 0xF465C77E EQ PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7E8 JUMPI PUSH1 0x3 NOT PUSH1 0x60 CALLDATASIZE DUP3 ADD SLT PUSH2 0x7E4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7C4 JUMPI PUSH2 0x160 DUP2 CALLDATASIZE SUB SWAP3 DUP4 ADD SLT PUSH2 0x7C4 JUMPI PUSH2 0x14D CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xDF3 JUMP JUMPDEST PUSH2 0x124 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x22 NOT ADD DUP3 SLT ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x4 DUP3 DUP3 ADD ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7E0 JUMPI DUP1 CALLDATASIZE SUB PUSH1 0x24 DUP5 DUP5 ADD ADD SGT PUSH2 0x7E0 JUMPI DUP1 PUSH1 0x14 GT PUSH2 0x7E0 JUMPI DUP3 DUP3 ADD ADD SWAP2 PUSH1 0xA0 PUSH1 0x13 NOT DUP3 DUP5 ADD DUP6 SUB ADD SLT PUSH2 0x7E0 JUMPI PUSH2 0x1AE PUSH1 0x38 DUP3 DUP5 ADD ADD PUSH2 0xE3F JUMP JUMPDEST SWAP3 PUSH1 0xB8 DUP3 DUP5 ADD ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7DC JUMPI PUSH1 0x24 SWAP1 DUP4 DUP6 ADD ADD SWAP2 ADD SWAP1 DUP2 PUSH1 0x57 DUP3 ADD SLT ISZERO PUSH2 0x7DC JUMPI PUSH1 0x38 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7C8 JUMPI SWAP1 DUP7 SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x209 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND ADD DUP7 PUSH2 0xE83 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x58 DUP3 DUP5 ADD ADD GT PUSH2 0x7C4 JUMPI DUP1 PUSH1 0x58 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x98 DUP3 DUP5 ADD ADD CALLDATALOAD TIMESTAMP LT PUSH2 0x789 JUMPI PUSH1 0x78 DUP3 DUP5 ADD ADD CALLDATALOAD TIMESTAMP GT PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6D5 JUMPI DUP7 SWAP2 PUSH2 0x71E JUMPI JUMPDEST POP PUSH1 0x58 DUP4 DUP6 ADD ADD CALLDATALOAD GT PUSH2 0x6E0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH32 0x0 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x6D5 JUMPI DUP7 SWAP2 PUSH2 0x69E JUMPI JUMPDEST POP PUSH1 0x58 DUP4 DUP6 ADD ADD CALLDATALOAD GT PUSH2 0x659 JUMPI PUSH3 0xF4240 PUSH1 0x44 CALLDATALOAD DUP2 PUSH1 0x44 CALLDATALOAD MUL DIV DUP2 EQ PUSH1 0x44 CALLDATALOAD ISZERO OR ISZERO PUSH2 0x645 JUMPI PUSH1 0x1 SLOAD PUSH2 0x33B SWAP2 PUSH1 0x44 CALLDATALOAD MUL PUSH2 0xEA5 JUMP JUMPDEST PUSH1 0x58 DUP4 DUP6 ADD ADD CALLDATALOAD LT PUSH2 0x600 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP6 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 EQ PUSH2 0x5EC JUMPI PUSH1 0x1 DUP3 ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP7 PUSH1 0x60 SHL AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x58 DUP5 DUP7 ADD ADD CALLDATALOAD PUSH1 0x54 DUP4 ADD MSTORE PUSH1 0x78 DUP5 DUP7 ADD ADD CALLDATALOAD PUSH1 0x74 DUP4 ADD MSTORE PUSH1 0x98 DUP5 DUP7 ADD ADD CALLDATALOAD PUSH1 0x94 DUP4 ADD MSTORE PUSH1 0xB4 DUP3 ADD MSTORE PUSH1 0xB4 DUP2 MSTORE DUP1 PUSH1 0xE0 DUP2 ADD LT PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xE0 DUP4 ADD GT OR PUSH2 0x59C JUMPI PUSH2 0x426 SWAP2 DUP2 PUSH1 0xE0 PUSH2 0x41D SWAP4 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP9 MSTORE PUSH1 0x1C MSTORE PUSH1 0x3C DUP8 KECCAK256 PUSH2 0xF2D JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND SUB PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE DUP3 DUP3 ADD PUSH1 0x58 ADD CALLDATALOAD PUSH1 0x64 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE PUSH1 0xA0 DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x59C JUMPI PUSH2 0x4B8 SWAP1 DUP7 SWAP5 SWAP6 SWAP3 PUSH1 0x40 MSTORE PUSH32 0x0 PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x58 DUP4 DUP7 ADD ADD CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x60 DUP3 MSTORE PUSH2 0x4EB DUP3 PUSH2 0xE67 JUMP JUMPDEST PUSH32 0xAFE65894F5DC3EC01B36EB697AB05531317B716BE71D4669D818E0B0E774E030 PUSH1 0x60 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x58 DUP7 DUP10 ADD ADD CALLDATALOAD DUP5 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 LOG2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x40 DUP5 MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x40 DUP7 ADD MSTORE DUP6 JUMPDEST DUP5 DUP2 LT PUSH2 0x584 JUMPI POP POP PUSH1 0x78 SWAP1 PUSH1 0x60 SWAP6 DUP7 DUP6 DUP8 ADD ADD MSTORE PUSH1 0x98 DUP2 DUP5 ADD ADD CALLDATALOAD PUSH1 0xE0 SHL SWAP3 ADD ADD CALLDATALOAD PUSH1 0xA0 SHL OR PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x20 DUP3 DUP3 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP11 DUP5 ADD ADD MSTORE DUP9 SWAP7 POP ADD PUSH2 0x54A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x5369676E617475726520696E76616C696465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6F6E74616E74205553444320696E737566666973616E740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F77616E6365205553444320696E737566666973616E74650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x6CD JUMPI JUMPDEST DUP2 PUSH2 0x6B9 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xE83 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6C8 JUMPI MLOAD CODESIZE PUSH2 0x305 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14DBDB1919481554D110C81A5B9CDD59999A5CD85B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x748 JUMPI JUMPDEST DUP2 PUSH2 0x739 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xE83 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6C8 JUMPI MLOAD CODESIZE PUSH2 0x299 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x5061796D61737465723A20657870697265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14185E5B585CDD195C8E881D1C9BDC081D1BDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x7C4 JUMPI PUSH2 0x81B PUSH2 0xDC7 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x864 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI PUSH2 0x891 PUSH2 0xDC7 JUMP JUMPDEST DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x90A JUMPI DUP2 PUSH1 0x24 SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0xB760FAF9 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x8FF JUMPI PUSH2 0x8EF JUMPI POP RETURN JUMPDEST PUSH2 0x8F8 SWAP1 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0x7E8 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP REVERT JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 DUP3 PUSH1 0x24 DUP2 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9CC JUMPI SWAP1 PUSH2 0x99A JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x9C4 JUMPI JUMPDEST DUP2 PUSH2 0x9B3 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xE83 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6C8 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x98F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x9F5 PUSH2 0xDC7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA35 JUMPI PUSH1 0x40 PUSH32 0xE335B031F0EF293EB2AE4BB1453EF1BA92FFC180905BF925E29290DD546C1661 SWAP2 PUSH1 0x1 SLOAD SWAP1 DUP1 PUSH1 0x1 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x5461757820696E76616C696465 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x14 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x7E4 JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT PUSH2 0x7E0 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x7E0 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x7E0 JUMPI CALLDATASIZE PUSH1 0x24 DUP3 DUP5 ADD ADD GT PUSH2 0x7E0 JUMPI PUSH2 0xB30 SWAP3 PUSH1 0x24 PUSH1 0x44 CALLDATALOAD SWAP4 ADD SWAP1 PUSH2 0x1072 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7E8 JUMPI PUSH3 0xF4240 PUSH1 0x4 CALLDATALOAD DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xB9B JUMPI PUSH1 0x20 PUSH2 0xB93 DUP4 PUSH1 0x1 SLOAD SWAP1 PUSH2 0xEA5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x7E4 JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH1 0x20 SWAP4 MSTORE PUSH1 0x2 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI PUSH2 0xC05 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x54 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7E8 JUMPI PUSH2 0xC7C PUSH2 0xDC7 JUMP JUMPDEST DUP1 SLOAD PUSH2 0xB30 SWAP1 PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH2 0x1178 JUMP JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x7E8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7E8 JUMPI PUSH2 0xD14 PUSH2 0xDC7 JUMP JUMPDEST DUP1 SLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 PUSH32 0x0 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xD89 JUMPI PUSH1 0x44 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x40B850F PUSH1 0xE3 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x8FF JUMPI PUSH2 0xD80 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0xB30 SWAP1 PUSH2 0xE53 JUMP JUMPDEST POP POP REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x7E4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7E4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x7C4 JUMPI DUP3 PUSH1 0x40 SWAP2 PUSH1 0x20 SWAP5 MSTORE PUSH1 0x2 DUP5 MSTORE KECCAK256 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xDDB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xDFA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5365756C20456E747279506F696E74206175746F726973650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x6C8 JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x59C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x59C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x59C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 ISZERO PUSH2 0xEAF JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0xF21 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0xF18 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0xEF6 JUMPI POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xEEF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0xF5E JUMPI PUSH2 0xF57 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0xF69 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0xFE1 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x9CC JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xFD8 JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x105C JUMPI DUP1 PUSH2 0xFFF JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1019 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x103A JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x1044 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x60 SWAP1 DUP5 SWAP1 PUSH2 0x10B0 CALLER PUSH32 0x0 DUP7 AND EQ PUSH2 0xDF3 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6C8 JUMPI PUSH1 0x20 PUSH2 0x10C3 DUP5 PUSH2 0xE3F JUMP JUMPDEST SWAP4 ADD CALLDATALOAD SWAP3 AND SWAP3 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x105C JUMPI PUSH1 0x2 EQ PUSH2 0x1151 JUMPI PUSH3 0xF4240 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x113B JUMPI PUSH1 0x1 SLOAD PUSH2 0x10FA SWAP2 PUSH2 0xEA5 JUMP JUMPDEST DUP1 DUP3 GT PUSH2 0x1106 JUMPI POP POP POP JUMP JUMPDEST DUP2 SUB SWAP1 DUP2 GT PUSH2 0x113B JUMPI PUSH2 0x1139 SWAP2 PUSH32 0x0 PUSH2 0x1178 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x1139 SWAP2 PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x1139 SWAP2 PUSH2 0x11B1 DUP3 PUSH2 0xE67 JUMP JUMPDEST PUSH2 0xEC5 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0x1F 0xF8 0xCB 0x4A 0xC9 STATICCALL DUP11 DUP3 PUSH31 0x1458B7B5BFFE2125ABE6FB1B0DF5411D9C3C56B1B78564736F6C6343000814 STOP CALLER ","sourceMap":"758:6928:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6750:35;758:6928;6750:35;;;758:6928;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;758:6928:22;;;;;;;;;;;;;;;;;;;;;;;;2400:70;2408:10;2430;-1:-1:-1;;;;;758:6928:22;2408:33;2400:70;:::i;:::-;2730:23;;;758:6928;;-1:-1:-1;;758:6928:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2754:2;758:6928;;;;;;2706:119;758:6928;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2706:119;;758:6928;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2897:15;:29;758:6928;;;;;;;;2897:15;2968:29;758:6928;;;;-1:-1:-1;;;3125:20:22;;-1:-1:-1;;;;;758:6928:22;;;;3125:20;;758:6928;;;;;;;;;3125:4;758:6928;3125:20;;;;;;;;;;;758:6928;;;;;;;;-1:-1:-1;758:6928:22;;;;-1:-1:-1;;;3291:35:22;;-1:-1:-1;;;;;758:6928:22;;;;3291:35;;758:6928;3320:4;758:6928;;;;;;;;;;;;3125:4;758:6928;3291:35;;;;;;;;;;;758:6928;;;;;;;;-1:-1:-1;758:6928:22;;3495:3;758:6928;;;;;;;;;;;;;;;;;;3484:31;;758:6928;;;3484:31;:::i;:::-;758:6928;;;;;;3533:32;758:6928;;-1:-1:-1;;;;;758:6928:22;;;;3816:6;758:6928;;;;;;;;-1:-1:-1;;758:6928:22;;;;;;;;;;;;;;;3672:168;;758:6928;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3672:168;;758:6928;;;;;;;;;;;;;3927:8:16;758:6928:22;;;3871:27:16;758:6928:22;;;;;;;3672:168;;3662:179;1349:325:17;;;;;;;;3871:27:16;:::i;:::-;3927:8;;;;;:::i;:::-;-1:-1:-1;;;;;758:6928:22;;;;;3946:17;758:6928;;;;-1:-1:-1;;;758:6928:22;1745:53:12;;;-1:-1:-1;;;;;758:6928:22;;;1745:53:12;;758:6928:22;3320:4;758:6928;;;;;;;;;;;;;;;;;;1745:53:12;;758:6928:22;;;;;;;;;;;;;1745:53:12;758:6928:22;;;;;;;3125:4;1745:53:12;:::i;:::-;758:6928:22;;;;;;;;;;;4148:37;;758:6928;;;;;;;;;;;;;;;;;;4148:37;;;;;:::i;:::-;4326:61;758:6928;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4326:61;;758:6928;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7607:70;758:6928;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;758:6928:22;;;;;;;;;;;;;;;;;;-1:-1:-1;;;758:6928:22;;;;;;;;;;;;-1:-1:-1;;;758:6928:22;;;;;;;;-1:-1:-1;;;758:6928:22;;;;;;;;;;;-1:-1:-1;;;758:6928:22;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;758:6928:22;;;;;;;;;;;-1:-1:-1;;;758:6928:22;;;;;;;;;;;;;;;;;;;;3291:35;;;758:6928;3291:35;;758:6928;3291:35;;;;;;758:6928;3291:35;;;:::i;:::-;;;758:6928;;;;;3291:35;;;758:6928;;;;3291:35;;;-1:-1:-1;3291:35:22;;;758:6928;;;;;;;;;;;;-1:-1:-1;;;758:6928:22;;;;;;;;;;;;-1:-1:-1;;;758:6928:22;;;;;;;3125:20;;;758:6928;3125:20;;758:6928;3125:20;;;;;;758:6928;3125:20;;;:::i;:::-;;;758:6928;;;;;3125:20;;;;;;-1:-1:-1;3125:20:22;;758:6928;;;-1:-1:-1;;;758:6928:22;;;;;;;;;;;;-1:-1:-1;;;758:6928:22;;;;;;;;;;-1:-1:-1;;;758:6928:22;;;;;;;;;;;;-1:-1:-1;;;758:6928:22;;;;;;;;;;;;-1:-1:-1;;;758:6928:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;758:6928:22;;;;;;-1:-1:-1;;;;;758:6928:22;;;;;;;;;1500:62:7;;:::i;:::-;2627:22;;2623:91;;758:6928:22;;;;;;;;;;;;3052:40:7;758:6928:22;3052:40:7;;758:6928:22;;2623:91:7;758:6928:22;;-1:-1:-1;;;2672:31:7;;758:6928:22;2672:31:7;;758:6928:22;;;;;2672:31:7;758:6928:22;;;;;;;;;;1500:62:7;;:::i;:::-;758:6928:22;6049:10;-1:-1:-1;;;;;758:6928:22;6049:53;;;;;758:6928;;;;;;;;;;;;6049:53;;6096:4;758:6928;6049:53;;758:6928;6077:9;6049:53;;;;;;;;;758:6928;;6049:53;;;;:::i;:::-;758:6928;;6049:53;758:6928;6049:53;758:6928;;;;;;;;;6049:53;758:6928;;;;;;;;;;;;;;;;1217:42;758:6928;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6750:35:22;;6779:4;758:6928;6750:35;;758:6928;;6750:35;758:6928;;;6750:10;-1:-1:-1;;;;;758:6928:22;6750:35;;;;;;;;;;758:6928;6750:35;758:6928;;;;;;;6750:35;;;;;;;;;;;;;;;;:::i;:::-;;;758:6928;;;;6750:35;758:6928;;6750:35;;;;;-1:-1:-1;6750:35:22;;;758:6928;;;;;;;;;;;;;;;;;-1:-1:-1;;758:6928:22;;;;;;1500:62:7;;:::i;:::-;5741:11:22;;758:6928;;;5859:38;758:6928;;;;;;;;;;;;;;;;5859:38;758:6928;;;;;-1:-1:-1;;;758:6928:22;;;;;;;;;;;;-1:-1:-1;;;758:6928:22;;;;;;;;;;;;;;;;;;;;;;1070:39;-1:-1:-1;;;;;758:6928:22;;;;;;;;;;;;;;;;;;;;;;981:2;758:6928;;;;;;;;;;-1:-1:-1;;758:6928:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;758:6928:22;;;;;;;;;;;;;;;-1:-1:-1;;758:6928:22;;;;7328:3;758:6928;;;;;;7328:3;758:6928;;;;;;;;;;;7315:33;758:6928;;;7315:33;;:::i;:::-;758:6928;;;;;;;-1:-1:-1;;;758:6928:22;;;;;;;;;;;;;;;-1:-1:-1;;758:6928:22;;;;;;-1:-1:-1;;;;;758:6928:22;;;;;;;;;;;;;;1373:41;758:6928;;;;;;;;;;;;;;;;;;;;;;;1500:62:7;;:::i;:::-;758:6928:22;;;-1:-1:-1;;;;;;758:6928:22;;;;-1:-1:-1;;;;;758:6928:22;3052:40:7;758:6928:22;;3052:40:7;758:6928:22;;;;;;;;;;;;;;;;;;1032:2;758:6928;;;;;;;;;;-1:-1:-1;;758:6928:22;;;;1500:62:7;;:::i;:::-;758:6928:22;;6548:6;;758:6928;;;-1:-1:-1;;;;;758:6928:22;6521:4;6548:6;:::i;758:6928::-;;;;;;;;;;;;;;;1115:28;-1:-1:-1;;;;;758:6928:22;;;;;;;;;;;;;-1:-1:-1;;758:6928:22;;;;1500:62:7;;:::i;:::-;758:6928:22;;;;-1:-1:-1;;;;;758:6928:22;;;;6295:10;758:6928;6295:47;;;;;758:6928;;;;;;;;;;;;;6295:47;;758:6928;6295:47;;758:6928;;;;;;;6295:47;;;;;;;;758:6928;;;6295:47;;;;:::i;:::-;758:6928;;;;;;;;;;;-1:-1:-1;;758:6928:22;;;;;;-1:-1:-1;;;;;758:6928:22;;;;;;;;;;;;;;7017:6;758:6928;;;;;;;1796:162:7;1710:6;758:6928:22;-1:-1:-1;;;;;758:6928:22;735:10:13;1855:23:7;1851:101;;1796:162::o;1851:101::-;758:6928:22;;-1:-1:-1;;;1901:40:7;;735:10:13;1901:40:7;;;758:6928:22;;;1901:40:7;758:6928:22;;;;:::o;:::-;;;-1:-1:-1;;;758:6928:22;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;758:6928:22;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;8370:720:12;;-1:-1:-1;8507:421:12;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:12;;8942:15;;-1:-1:-1;;;;;;758:6928:22;;8960:26:12;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;758:6928:22;;-1:-1:-1;;;9033:40:12;;-1:-1:-1;;;;;758:6928:22;;;9033:40:12;;;758:6928:22;;;9033:40:12;8942:68;9009:1;8994:16;;8942:68;;8507:421;;;;-1:-1:-1;8507:421:12;;;;;2129:778:16;758:6928:22;;;2129:778:16;2319:2;2299:22;;2319:2;;2751:25;2535:196;;;;;;;;;;;;;;;-1:-1:-1;2535:196:16;2751:25;;:::i;:::-;2744:32;;;;;:::o;2295:606::-;2807:83;;2823:1;2807:83;2827:35;2807:83;;:::o;5203:1551::-;;;6283:66;6270:79;;6266:164;;758:6928:22;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6541:24:16;;;;;;;;;;;;;;-1:-1:-1;;;;;758:6928:22;;6579:20:16;6575:113;;6698:49;;5203:1551;:::o;6575:113::-;6615:62;;;6541:24;6615:62;;:::o;6266:164::-;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o;7280:532::-;758:6928:22;;;;;;7366:29:16;;;7411:7;;:::o;7362:444::-;758:6928:22;7462:38:16;;758:6928:22;;;;-1:-1:-1;;;7523:23:16;;758:6928:22;;7523:23:16;7458:348;7576:35;7567:44;;7576:35;;758:6928:22;;-1:-1:-1;;;7634:46:16;;758:6928:22;7634:46:16;;758:6928:22;;;;;7634:46:16;7563:243;7710:30;7701:39;7697:109;;7563:243;7280:532::o;7697:109::-;758:6928:22;;;;7763:32:16;;;;;;758:6928:22;7763:32:16;;758:6928:22;7763:32:16;758:6928:22;;;;7375:20:16;758:6928:22;;;;;7375:20:16;758:6928:22;4631:894;;;;-1:-1:-1;;;;;758:6928:22;;;4631:894;;4769:70;4777:10;4799;758:6928;;4777:33;4769:70;:::i;:::-;4912:82;;758:6928;;;;;;;;:::i;:::-;;;;;;;;;;;;;5082:25;5074:33;5070:119;;5292:3;758:6928;;;;;;;;;;;;;;;;;5275:37;;;:::i;:::-;5376:27;;;5372:147;;4631:894;;;:::o;5372:147::-;758:6928;;;;;;;5501:6;5477:4;;5501:6;:::i;:::-;4631:894::o;758:6928::-;;;;-1:-1:-1;758:6928:22;;;;;-1:-1:-1;758:6928:22;5070:119;5123:4;5147:10;5123:4;;1219:160:12;758:6928:22;;-1:-1:-1;;;1328:43:12;;;;-1:-1:-1;;;;;758:6928:22;;;1328:43:12;;;758:6928:22;;;;;;;;;1328:43:12;;;;;;758:6928:22;1328:43:12;:::i;:::-;;:::i"},"methodIdentifiers":{"SIGNATURE_OFFSET()":"6c7e9b3c","VALID_TIMESTAMP_OFFSET()":"ac2db91a","calculateUsdcCost(uint256)":"8aeb3ce7","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","getNonce(address)":"2d0335ab","nonces(address)":"7ecebe00","owner()":"8da5cb5b","postOp(uint8,bytes,uint256)":"a9a23409","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","updateUsdcToEthRate(uint256)":"b95bab66","usdc()":"3e413bee","usdcToEthRate()":"ce2605af","validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"f465c77e","withdrawDeposit(uint256)":"33289a46","withdrawUsdc(uint256)":"5b06dece"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"UsdcToEthRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"}],\"name\":\"UserOperationSponsored\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SIGNATURE_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VALID_TIMESTAMP_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"calculateUsdcCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"updateUsdcToEthRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToEthRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawUsdc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Paymaster ERC-4337 qui permet aux utilisateurs de payer les frais de gas en USDC Compatible avec le challenge Circle Paymaster ($2,000)\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"calculateUsdcCost(uint256)\":{\"details\":\"Calcule le co\\u00fbt en USDC pour un montant ETH donn\\u00e9\",\"params\":{\"ethAmount\":\"Le montant en ETH (wei)\"},\"returns\":{\"_0\":\"Le montant \\u00e9quivalent en USDC\"}},\"deposit()\":{\"details\":\"D\\u00e9pose de l'ETH pour sponsoriser les transactions\"},\"getDeposit()\":{\"details\":\"Obtient le d\\u00e9p\\u00f4t actuel dans l'EntryPoint\",\"returns\":{\"_0\":\"Le montant d\\u00e9pos\\u00e9\"}},\"getNonce(address)\":{\"details\":\"Obtient le nonce actuel d'un utilisateur\",\"params\":{\"user\":\"L'adresse utilisateur\"},\"returns\":{\"_0\":\"Le nonce\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256)\":{\"details\":\"Appel\\u00e9 apr\\u00e8s l'ex\\u00e9cution de la UserOperation\",\"params\":{\"actualGasCost\":\"Le co\\u00fbt r\\u00e9el en gas\",\"context\":\"Le contexte de validatePaymasterUserOp\",\"mode\":\"Le mode d'ex\\u00e9cution\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateUsdcToEthRate(uint256)\":{\"details\":\"Met \\u00e0 jour le taux de change USDC/ETH\",\"params\":{\"newRate\":\"Le nouveau taux (en wei par USDC)\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"details\":\"Valide et sponsorise une UserOperation\",\"params\":{\"maxCost\":\"Le co\\u00fbt maximum en ETH\",\"userOp\":\"La UserOperation \\u00e0 valider\",\"userOpHash\":\"Le hash de la UserOperation\"},\"returns\":{\"context\":\"Les donn\\u00e9es de contexte pour postOp\",\"validationData\":\"Les donn\\u00e9es de validation\"}},\"withdrawDeposit(uint256)\":{\"details\":\"Retire l'ETH du d\\u00e9p\\u00f4t EntryPoint\",\"params\":{\"amount\":\"Le montant \\u00e0 retirer\"}},\"withdrawUsdc(uint256)\":{\"details\":\"Retire l'USDC accumul\\u00e9\",\"params\":{\"amount\":\"Le montant \\u00e0 retirer\"}}},\"title\":\"CirclePaymaster\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CirclePaymaster.sol\":\"CirclePaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x36858ba8685024974f533530420688da3454d29996ebc42e410673a1ed2ec456\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://616cbcf51778b1961b7f20a547bec7efae6d1d565df0f651926241ed8bde9ad8\",\"dweb:/ipfs/QmaVsgffUUmeUJYgStvRr8cNZ1LBbrc3FYNLW4JT1dVLia\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"@account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/CirclePaymaster.sol\":{\"keccak256\":\"0xc3a6f86109ca44b2e641452956e5c5880ee0c40115cba3488f00a7192f8205e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d98f734d1f78c2581f671922781b6f5f9ab758c23904507e6d6c2a9cbab6d3a\",\"dweb:/ipfs/Qmd6tiYW5XeZYoAEAqyzgEoNnBm29fJ7LYmSeTN3St4KY6\"]}},\"version\":1}"}}}}}