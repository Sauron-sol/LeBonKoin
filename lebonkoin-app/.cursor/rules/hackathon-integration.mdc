# üöÄ HACKATHON MULTI-PARTENAIRES - R√àGLES D'INT√âGRATION

## üéØ OBJECTIF PRINCIPAL
D√©velopper une application qui int√®gre les **trois technologies partenaires** pour maximiser les gains :
- **ERC-7730 Clear Signing** : $4,000 (1er: $2,500, 2e: $1,500)
- **Circle CCTP V2 Multichain USDC** : $4,000 (1er: $2,500, 2e: $1,500)
- **World Ecosystem** : $3,000 (partag√© entre projets qualifi√©s)

**POTENTIEL TOTAL : $11,000**

## üèóÔ∏è ARCHITECTURE TECHNIQUE OBLIGATOIRE

### Stack Recommand√©
```typescript
// Frontend: React/Next.js + TypeScript
// Backend: Node.js/Express ou Python/FastAPI
// Blockchain: Ethereum, Base, Arbitrum, Avalanche, Linea, Sonic
// Int√©grations: World ID, ERC-7730, Circle CCTP V2
```

### Structure de Projet Impos√©e
```
/src
  /components     # Composants React avec int√©grations
  /hooks         # Hooks blockchain personnalis√©s
  /services      # Services Circle, World, ERC-7730
  /contracts     # Smart contracts et ABIs
  /utils         # Utilitaires cross-chain
  /types         # Types TypeScript
/docs            # Documentation technique
/diagrams        # Diagrammes d'architecture
```

## üîß INT√âGRATIONS PARTENAIRES OBLIGATOIRES

### 1. ERC-7730 Clear Signing - TOUJOURS IMPL√âMENTER
```typescript
// Interface ERC-7730 obligatoire pour toutes les transactions
interface ERC7730Descriptor {
  schemaVersion: string;
  metadata: {
    name: string;
    description: string;
  };
  display: {
    formats: DisplayFormat[];
  };
}

// R√àGLES STRICTES :
// ‚úÖ Cr√©er des fichiers JSON ERC-7730 pour TOUS les protocoles DeFi
// ‚úÖ Validation des transactions avant signature
// ‚úÖ Affichage transparent des d√©tails de transaction
// ‚úÖ Feedback utilisateur pour chaque signature
```

### 2. Circle CCTP V2 - CHA√éNES SUPPORT√âES UNIQUEMENT
```typescript
// CHA√éNES AUTORIS√âES SEULEMENT
const SUPPORTED_CHAINS = [
  'ethereum', 'arbitrum', 'base', 'avalanche', 'linea', 'sonic'
];

// Interface CCTP obligatoire
interface CCTPTransfer {
  sourceChain: string;
  destinationChain: string;
  amount: string;
  recipient: string;
  hooks?: CCTPHooks; // BONUS POINTS - Impl√©menter si possible
}

// CAS D'USAGE PRIORITAIRES :
// üéØ Syst√®me de paiement marchand multichain
// üéØ Gestion de tr√©sorerie multichain  
// üéØ Syst√®me d'intent pour fournisseurs de liquidit√©
```

### 3. World Ecosystem - INT√âGRATION OBLIGATOIRE
```typescript
// World ID OBLIGATOIRE
import { WorldIDWidget } from '@worldcoin/idkit';

// EXIGENCES STRICTES :
// ‚úÖ Int√©gration World ID fonctionnelle
// ‚úÖ Mini App World si possible
// ‚úÖ Construction sur World Chain recommand√©e
// ‚ùå INTERDIT : projets de gambling/hasard
```

## üìã LIVRABLES OBLIGATOIRES - CHECKLIST

### ‚úÖ MVP Fonctionnel
- [ ] Frontend d√©ploy√© et accessible
- [ ] Backend op√©rationnel avec API
- [ ] Diagramme d'architecture d√©taill√©
- [ ] D√©monstration des 3 int√©grations

### ‚úÖ Documentation Compl√®te
- [ ] README avec instructions setup
- [ ] Documentation API compl√®te
- [ ] Guide utilisateur final
- [ ] Diagrammes techniques

### ‚úÖ Pr√©sentation
- [ ] Vid√©o d√©mo (5-10 minutes)
- [ ] Pr√©sentation technique
- [ ] Repo GitHub/Replit public
- [ ] Sp√©cification claire des bounties vis√©s

## üèÜ STRAT√âGIE DE MAXIMISATION DES GAINS

### Projet Id√©al : "Universal DeFi Payment Gateway avec World ID"
```typescript
// Concept gagnant combinant les 3 technologies :
// 1. Passerelle de paiement USDC multichain (CCTP V2)
// 2. Signature transparente pour toutes les transactions DeFi (ERC-7730)
// 3. Authentification World ID pour KYC/compliance
// 4. R√©√©quilibrage automatique via CCTP V2 hooks
```

### Crit√®res de Qualification
- ‚úÖ Int√©gration fonctionnelle des 3 technologies
- ‚úÖ Interface utilisateur exceptionnelle
- ‚úÖ Architecture scalable et s√©curis√©e
- ‚úÖ Documentation compl√®te
- ‚úÖ D√©monstration convaincante

## üö® R√àGLES DE D√âVELOPPEMENT STRICTES

### S√©curit√© - NON N√âGOCIABLE
```typescript
// TOUJOURS impl√©menter :
// - Validation de toutes les entr√©es utilisateur
// - Gestion d'erreurs robuste
// - Tests de s√©curit√© pour smart contracts
// - Audit des int√©grations tierces
```

### Performance - M√âTRIQUES CIBLES
```typescript
// Objectifs de performance :
// - Temps de transaction cross-chain < 5 minutes
// - Taux de r√©ussite des signatures ERC-7730 > 95%
// - Support complet des 6 cha√Ænes CCTP V2
// - Int√©gration World ID fonctionnelle √† 100%
```

### UX/UI - EXP√âRIENCE UTILISATEUR
```typescript
// Standards obligatoires :
// - Design responsive et moderne
// - Feedback utilisateur en temps r√©el
// - Gestion des √©tats de chargement
// - Messages d'erreur clairs et actionnables
```

## üìä CHECKLIST DE SOUMISSION

### Avant Soumission - V√âRIFIER
- [ ] Les 3 technologies sont int√©gr√©es et fonctionnelles
- [ ] MVP d√©ploy√© et accessible publiquement
- [ ] Vid√©o de d√©monstration enregistr√©e
- [ ] Documentation compl√®te et claire
- [ ] Repo GitHub public avec README d√©taill√©
- [ ] Diagramme d'architecture inclus
- [ ] Sp√©cification des bounties vis√©s

### √âvaluation - CRIT√àRES CL√âS
- [ ] Innovation technique
- [ ] Qualit√© de l'impl√©mentation
- [ ] Exp√©rience utilisateur
- [ ] Potentiel d'adoption
- [ ] Qualit√© de la pr√©sentation

## üîó RESSOURCES TECHNIQUES ESSENTIELLES

- [ERC-7730 Standard](https://eips.ethereum.org/EIPS/eip-7730)
- [Circle CCTP V2 Documentation](https://developers.circle.com/stablecoins/cctp)
- [World Developer Docs](https://docs.worldcoin.org/)
- [Ledger Clear Signing](https://developers.ledger.com/docs/clear-signing/)

---

**üéØ OBJECTIF FINAL** : Cr√©er une application r√©volutionnaire qui d√©montre l'avenir des paiements cross-chain s√©curis√©s et transparents, avec une exp√©rience utilisateur exceptionnelle aliment√©e par l'√©cosyst√®me World.

**üí° RAPPEL CONSTANT** : Chaque ligne de code doit servir au moins une des trois int√©grations partenaires pour maximiser les chances de victoire !
